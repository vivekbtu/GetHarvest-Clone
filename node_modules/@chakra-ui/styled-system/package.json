{
  "name": "@chakra-ui/styled-system",
  "version": "2.2.7",
  "description": "Style function for css-in-js building component libraries",
  "keywords": [
    "theme",
    "theming",
    "style",
    "system",
    "styled",
    "css-in-js",
    "component",
    "functions",
    "parser",
    "chakra ui"
  ],
  "author": "Segun Adebayo <sage@adebayosegun.com>",
  "homepage": "https://github.com/chakra-ui/chakra-ui#readme",
  "license": "MIT",
  "main": "dist/index.cjs.js",
  "module": "dist/index.esm.js",
  "types": "dist/index.d.ts",
  "files": [
    "dist"
  ],
  "publishConfig": {
    "access": "public"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/chakra-ui/chakra-ui.git",
    "directory": "packages/styled-system"
  },
  "bugs": {
    "url": "https://github.com/chakra-ui/chakra-ui/issues"
  },
  "dependencies": {
    "@chakra-ui/utils": "2.0.8",
    "csstype": "^3.0.11"
  },
  "devDependencies": {
    "@emotion/react": "^11.9.0",
    "@emotion/styled": "^11.8.1",
    "cronometro": "^1.1.0"
  },
  "sideEffects": false,
  "scripts": {
    "build": "tsup --entry src/index.ts --entry src/theming.types.ts --entry src/shared.types.ts --dts",
    "dev": "pnpm build -- --watch",
    "clean": "rimraf dist .turbo",
    "typecheck": "tsc --noEmit",
    "build:fast": "tsup src/index.ts",
    "benchmark": "node benchmarks/benchmark.js"
  },
  "readme": "# @chakra-ui/styled-system\n\nThe framework's agnostic styling engine for Chakra UI. It's used in the `system`\npackage.\n\n## Installation\n\n```sh\nnpm i @chakra-ui/styled-system\n\n# or\n\nyarn add @chakra-ui/styled-system\n```\n\n### CSS Logical Properties\n\nChakra UI provides pretty good support for bidirectional (`bidi`) CSS\nproperties. For our shorthand props, we provide a `*Bidi` suffix to manage the\nrtl/ltr switching.\n\n```jsx\nimport { css } from \"@chakra-ui/styled-system\"\n\nconst theme = {\n  direction: \"rtl\", // ltr | rtl\n}\n\nconst styles = css({\n  mt: \"40px\",\n  // bi-directional `margin-right`\n  // `margin-right` in ltr, `margin-left` in rtl\n  mrBidi: \"30px\",\n})(theme)\n```\n\n### References\n\n```js\nconst cssLogicalValueMap = {\n  float: { left: \"inline-start\", right: \"inline-end\" },\n  clear: { left: \"inline-start\", right: \"inline-end\" },\n  resize: { horizontal: \"block\", vertical: \"inline\" },\n  textAlign: { left: \"start\", right: \"end\" },\n  captionSize: { top: \"block-start\", bottom: \"block-end\" },\n}\n\nconst cssLogicalPropertiesMap = {\n  // Margin and Padding Logical Properties\n  \"marginTop|mt\": \"marginBlockStart\",\n  \"marginLeft|ml\": \"marginInlineStart\",\n  \"marginRight|mr\": \"marginInlineEnd\",\n  \"marginBottom|mb\": \"marginBlockEnd\",\n  \"paddingTop|pt\": \"paddingBlockStart\",\n  \"paddingBottom|pb\": \"paddingBlockEnd\",\n  \"paddingLeft|pl\": \"paddingInlineStart\",\n  \"paddingRight|pr\": \"paddingInlineEnd\",\n  \"marginY|my\": \"marginBlock\",\n  \"marginX|mx\": \"marginInline\",\n  \"paddingY|py\": \"paddingBlock\",\n  \"paddingX|px\": \"paddingInline\",\n\n  // Floating and positioning logical properties\n  top: \"insetBlockStart\",\n  bottom: \"insetBlockEnd\",\n  left: \"insetInlineStart\",\n  right: \"insetInlineEnd\",\n\n  // Sizing Logical properties\n  \"width|w\": \"inlineSize\",\n  \"minW|minWidth\": \"minInlineSize\",\n  \"maxW|maxWidth\": \"maxInlineSize\",\n  \"height|h\": \"blockSize\",\n  \"minH|minHeight\": \"minBlockSize\",\n  \"maxH|maxHeight\": \"maxBlockSize\",\n\n  // Border logical properties\n  borderY: \"borderBlock\",\n  borderX: \"borderInline\",\n\n  borderTop: \"borderBlockStart\",\n  borderTopWidth: \"borderBlockStartWidth\",\n  borderTopStyle: \"borderBlockStartStyle\",\n  borderTopColor: \"borderBlockStartColor\",\n\n  borderBottom: \"borderBlockEnd\",\n  borderBottomWidth: \"borderBlockEndWidth\",\n  borderBottomStyle: \"borderBlockEndStyle\",\n  borderBottomColor: \"borderBlockEndColor\",\n\n  borderLeft: \"borderInlineStart\",\n  borderLeftWidth: \"borderInlineStartWidth\",\n  borderLeftStyle: \"borderInlineStartStyle\",\n  borderLeftColor: \"borderInlineStartColor\",\n\n  borderRight: \"borderInlineEnd\",\n  borderRightWidth: \"borderInlineEndWidth\",\n  borderRightStyle: \"borderInlineEndStyle\",\n  borderRightColor: \"borderInlineEndColor\",\n}\n```\n"
}