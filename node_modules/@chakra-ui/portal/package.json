{
  "name": "@chakra-ui/portal",
  "version": "2.0.8",
  "description": "React component used to render children outside the DOM hierarchy of the parent component",
  "keywords": [
    "react",
    "portal",
    "nested portal",
    "z-index",
    "layer",
    "chakra ui"
  ],
  "sideEffects": false,
  "author": "Segun Adebayo <sage@adebayosegun.com>",
  "homepage": "https://github.com/chakra-ui/chakra-ui#readme",
  "license": "MIT",
  "main": "dist/index.cjs.js",
  "module": "dist/index.esm.js",
  "types": "dist/index.d.ts",
  "files": [
    "dist"
  ],
  "publishConfig": {
    "access": "public"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/chakra-ui/chakra-ui.git",
    "directory": "packages/portal"
  },
  "bugs": {
    "url": "https://github.com/chakra-ui/chakra-ui/issues"
  },
  "dependencies": {
    "@chakra-ui/hooks": "2.0.8",
    "@chakra-ui/react-utils": "2.0.5",
    "@chakra-ui/utils": "2.0.8"
  },
  "peerDependencies": {
    "react": ">=18",
    "react-dom": ">=18"
  },
  "devDependencies": {
    "@chakra-ui/button": "2.0.8",
    "@testing-library/react": "13.3.0",
    "@types/react-frame-component": "^4.1.1",
    "react": "^18.0.0",
    "react-dom": "^18.0.0",
    "react-frame-component": "^4.1.3"
  },
  "scripts": {
    "build": "JSX=1 tsup src/index.ts --dts",
    "dev": "pnpm build -- --watch",
    "clean": "rimraf dist .turbo",
    "typecheck": "tsc --noEmit",
    "build:fast": "JSX=1 tsup src/index.ts"
  },
  "readme": "# @chakra-ui/portal\n\nA wrapper for rendering components in React Portals, with support for nested\nportals and stacking.\n\n## Installation\n\n```sh\nyarn add @chakra-ui/portal\n\n# or\n\nnpm i @chakra-ui/portal\n```\n\n## Import components\n\n```jsx\nimport { Portal, PortalManager } from \"@chakra-ui/portal\"\n```\n\nRender the `PortalManager` once at the root of your application\n\n```jsx\nfunction App() {\n  return (\n    <ThemeProvider>\n      <CSSReset />\n      <PortalManager>{/* Your app goes here  */}</PortalManager>\n    </ThemeProvider>\n  )\n}\n```\n\n### Basic usage\n\nPortals are render into the portal manager's node by default not\n`document.body`.\n\n```jsx\n<div>\n  <p>Welcome</p>\n  <Portal>This text has been portaled</Portal>\n</div>\n```\n\n### Nested portals\n\nNesting portal can be very useful to build complex widgets like nested menu,\npopovers, modal, etc.\n\n```jsx\n<Portal>\n  This is a portal.\n  <Portal>This is a nested portal</Portal>\n</Portal>\n```\n\n### Custom container\n\nYou can also portal elements into a custom containers. Simply pass a\n`containerRef` prop that points to the `node` of that element.\n\n```jsx\n<>\n  <div ref={ref} />\n  <Portal containerRef={ref}>\n    <h1>Hello world</h1>\n  </Portal>\n</>\n```\n"
}