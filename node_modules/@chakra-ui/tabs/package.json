{
  "name": "@chakra-ui/tabs",
  "version": "2.0.10",
  "description": "Accessible Tabs component for React and Chakra UI",
  "keywords": [
    "react",
    "react component",
    "tabs",
    "accessible tabs",
    "a11y tabs",
    "react a11y tabs",
    "react accessible tabs",
    "react tabs",
    "chakra ui",
    "chakra",
    "react tabs component",
    "a11y",
    "react aria tabs",
    "aria",
    "aria tabs"
  ],
  "sideEffects": false,
  "author": "Segun Adebayo <sage@adebayosegun.com>",
  "homepage": "https://github.com/chakra-ui/chakra-ui#readme",
  "license": "MIT",
  "main": "dist/index.cjs.js",
  "module": "dist/index.esm.js",
  "types": "dist/index.d.ts",
  "files": [
    "dist"
  ],
  "publishConfig": {
    "access": "public"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/chakra-ui/chakra-ui.git",
    "directory": "packages/tabs"
  },
  "bugs": {
    "url": "https://github.com/chakra-ui/chakra-ui/issues"
  },
  "dependencies": {
    "@chakra-ui/clickable": "2.0.8",
    "@chakra-ui/descendant": "3.0.7",
    "@chakra-ui/hooks": "2.0.8",
    "@chakra-ui/react-utils": "2.0.5",
    "@chakra-ui/utils": "2.0.8"
  },
  "devDependencies": {
    "@chakra-ui/system": "2.2.6",
    "@chakra-ui/modal": "2.1.6",
    "react": "^18.0.0"
  },
  "peerDependencies": {
    "@chakra-ui/system": ">=2.0.0",
    "react": ">=18"
  },
  "scripts": {
    "build": "JSX=1 tsup src/index.ts --dts",
    "dev": "pnpm build -- --watch",
    "clean": "rimraf dist .turbo",
    "typecheck": "tsc --noEmit",
    "build:fast": "JSX=1 tsup src/index.ts"
  },
  "readme": "# @chakra-ui/tabs\n\nAn accessible tabs component.\n\nThe `Tab` and `TabPanel` elements are associated by their order in the tree.\nNone of the components are empty wrappers, each is associated with a real DOM\nelement in the document, giving you maximum control over styling and\ncomposition.\n\n## Installation\n\n```sh\nyarn add @chakra-ui/tabs\n\n# or\n\nnpm i @chakra-ui/tabs\n```\n\n## Import components\n\n```jsx\nimport { Tabs, TabList, TabPanels, Tab, TabPanel } from \"@chakra-ui/react\"\n```\n\n## Usage\n\n```jsx\n<Tabs>\n  <TabList>\n    <Tab>One</Tab>\n    <Tab>Two</Tab>\n    <Tab>Three</Tab>\n  </TabList>\n\n  <TabPanels>\n    <TabPanel>\n      <p>one!</p>\n    </TabPanel>\n    <TabPanel>\n      <p>two!</p>\n    </TabPanel>\n    <TabPanel>\n      <p>three!</p>\n    </TabPanel>\n  </TabPanels>\n</Tabs>\n```\n\n### Tab variants and color schemes\n\nTabs come in 6 different variants to style the tabs: `line`,`enclosed`,\n`enclosed-colored`, `soft-rounded`, `solid-rounded`. Each variant comes it\ndifferent color schemes.\n\n```jsx\n<Tabs variant=\"enclosed\" colorScheme=\"red\">\n  <TabList>\n    <Tab>One</Tab>\n    <Tab>Two</Tab>\n  </TabList>\n  <TabPanels>\n    <TabPanel>\n      <p>one!</p>\n    </TabPanel>\n    <TabPanel>\n      <p>two!</p>\n    </TabPanel>\n  </TabPanels>\n</Tabs>\n```\n\n### Manually Activated Tabs\n\nBy default, `Tabs` are activated automatically. This means when you use the\narrow keys to change tabs, the tab is activated and focused.\n\nThe content of a `TabPanel` should ideally be preloaded. However, if switching\nto a tab panel causes a network request and possibly a page refresh, there might\nbe some notable latency and this might affect the experience for keyboard and\nscreen reader users.\n\nIn this scenario, you should use a manually activated tab, it moves focus\nwithout activating the tabs. With focus on a specific tab, users can activate a\ntab by pressing <kbd>Space</kbd> or <kbd>Enter</kbd>.\n\n```jsx\n<Tabs isManual variant=\"enclosed\">\n  <TabList>\n    <Tab>One</Tab>\n    <Tab>Two</Tab>\n  </TabList>\n  <TabPanels>\n    <TabPanel>\n      <p>one!</p>\n    </TabPanel>\n    <TabPanel>\n      <p>two!</p>\n    </TabPanel>\n  </TabPanels>\n</Tabs>\n```\n\n### Tab sizes\n\nYou can change the size of the tab by passing `size` prop. We support 3 sizes\n`sm`, `md`, `lg`\n\n```jsx\n<Tabs size=\"md\" variant=\"enclosed\">\n  <TabList>\n    <Tab>One</Tab>\n    <Tab>Two</Tab>\n  </TabList>\n  <TabPanels>\n    <TabPanel>\n      <p>one!</p>\n    </TabPanel>\n    <TabPanel>\n      <p>two!</p>\n    </TabPanel>\n  </TabPanels>\n</Tabs>\n```\n"
}