{
  "name": "@chakra-ui/menu",
  "version": "2.0.10",
  "description": "A React component to render accessible menus",
  "keywords": [
    "menu",
    "menu button",
    "aria menu",
    "accessible",
    "wai aria",
    "react",
    "component",
    "chakra ui"
  ],
  "sideEffects": false,
  "author": "Segun Adebayo <sage@adebayosegun.com>",
  "homepage": "https://github.com/chakra-ui/chakra-ui#readme",
  "license": "MIT",
  "main": "dist/index.cjs.js",
  "module": "dist/index.esm.js",
  "types": "dist/index.d.ts",
  "files": [
    "dist"
  ],
  "publishConfig": {
    "access": "public"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/chakra-ui/chakra-ui.git",
    "directory": "packages/menu"
  },
  "bugs": {
    "url": "https://github.com/chakra-ui/chakra-ui/issues"
  },
  "dependencies": {
    "@chakra-ui/clickable": "2.0.8",
    "@chakra-ui/descendant": "3.0.7",
    "@chakra-ui/hooks": "2.0.8",
    "@chakra-ui/popper": "3.0.6",
    "@chakra-ui/react-utils": "2.0.5",
    "@chakra-ui/transition": "2.0.8",
    "@chakra-ui/utils": "2.0.8"
  },
  "devDependencies": {
    "@chakra-ui/system": "2.2.6",
    "@chakra-ui/image": "2.0.9",
    "@chakra-ui/modal": "2.1.6",
    "@chakra-ui/provider": "2.0.13",
    "@chakra-ui/portal": "2.0.8",
    "@chakra-ui/theme": "2.1.7",
    "@chakra-ui/button": "2.0.8",
    "react-icons": "^4.2.0",
    "framer-motion": "^6.2.9",
    "react": "^18.0.0"
  },
  "peerDependencies": {
    "@chakra-ui/system": ">=2.0.0",
    "framer-motion": ">=4.0.0",
    "react": ">=18"
  },
  "scripts": {
    "build": "JSX=1 tsup src/index.ts --dts",
    "dev": "pnpm build -- --watch",
    "clean": "rimraf dist .turbo",
    "typecheck": "tsc --noEmit",
    "build:fast": "JSX=1 tsup src/index.ts"
  },
  "readme": "# @chakra-ui/menu\n\nAn accessible dropdown menu for the common dropdown menu button design pattern.\nMenu uses roving tabIndex for focus management.\n\n## Installation\n\n```sh\nyarn add @chakra-ui/menu\n\n# or\n\nnpm i @chakra-ui/menu\n```\n\n## Import components\n\n```js\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  MenuGroup,\n  MenuDivider,\n  MenuOptionGroup,\n  MenuItemOption,\n} from \"@chakra-ui/react\"\n```\n\n## Usage\n\n```jsx\n<Menu>\n  <MenuButton>Actions</MenuButton>\n  <MenuList>\n    <MenuItem>Download</MenuItem>\n    <MenuItem>Create a Copy</MenuItem>\n    <MenuItem>Mark as Draft</MenuItem>\n    <MenuItem>Delete</MenuItem>\n    <MenuItem as=\"a\" href=\"#\">\n      Attend a Workshop\n    </MenuItem>\n  </MenuList>\n</Menu>\n```\n\n### Accessing the internal state\n\nTo access the internal state of the Menu, use a function as a `children`\n(commonly known as a render prop). You'll get access to the internal state\n`isOpen` and method `onClose`.\n\n```jsx\n<Menu>\n  {({ isOpen }) => (\n    <React.Fragment>\n      <MenuButton>{isOpen ? \"Close\" : \"Open\"}</MenuButton>\n      <MenuList>\n        <MenuItem>Download</MenuItem>\n        <MenuItem onClick={() => alert(\"Kagebunshin\")}>Create a Copy</MenuItem>\n      </MenuList>\n    </React.Fragment>\n  )}\n</Menu>\n```\n\n### Letter Navigation\n\nWhen focus is on the `MenuButton` or within the `MenuList` and you type a letter\nkey, a search begins. Focus will move to the first `MenuItem` that starts with\nthe letter you typed.\n\n> Open the menu, try and type any letter, say \"S\" to see the focus movement.\n\n```jsx\n<Menu>\n  <MenuButton\n    px={4}\n    py={2}\n    transition=\"all 0.2s\"\n    borderRadius=\"md\"\n    borderWidth=\"1px\"\n    _hover={{ bg: \"gray.100\" }}\n    _expanded={{ bg: \"red.200\" }}\n    _focus={{ outline: 0, boxShadow: \"outline\" }}\n  >\n    File <ChevronDownIcon />\n  </MenuButton>\n  <MenuList>\n    <MenuItem>New File</MenuItem>\n    <MenuItem>New Window</MenuItem>\n    <MenuDivider />\n    <MenuItem>Open...</MenuItem>\n    <MenuItem>Save File</MenuItem>\n  </MenuList>\n</Menu>\n```\n\n### Just another example.\n\n```jsx\n<Menu>\n  <MenuButton>Your Cats</MenuButton>\n  <MenuList>\n    <MenuItem minH=\"48px\">\n      <Image\n        size=\"2rem\"\n        borderRadius=\"full\"\n        src=\"https://placekitten.com/100/100\"\n        alt=\"Fluffybuns the destroyer\"\n        mr=\"12px\"\n      />\n      <span>Fluffybuns the Destroyer</span>\n    </MenuItem>\n    <MenuItem minH=\"40px\">\n      <Image\n        size=\"2rem\"\n        borderRadius=\"full\"\n        src=\"https://placekitten.com/120/120\"\n        alt=\"Simon the pensive\"\n        mr=\"12px\"\n      />\n      <span>Simon the pensive</span>\n    </MenuItem>\n  </MenuList>\n</Menu>\n```\n\n### MenuGroup\n\nTo group related `MenuItems`, use the `MenuGroup` component and pass it a label\nfor the group name.\n\n```jsx\n<Menu>\n  <MenuButton>Profile</MenuButton>\n  <MenuList>\n    <MenuGroup title=\"Profile\">\n      <MenuItem>My Account</MenuItem>\n      <MenuItem>Payments </MenuItem>\n    </MenuGroup>\n    <MenuDivider />\n    <MenuGroup title=\"Help\">\n      <MenuItem>Docs</MenuItem>\n      <MenuItem>FAQ</MenuItem>\n    </MenuGroup>\n  </MenuList>\n</Menu>\n```\n\n## Menu option groups\n\nYou can compose a menu for table headers to help with sorting and filtering\noptions. Use the `MenuOptionGroup` and `MenuItemOption` components.\n\n```jsx\n<Menu closeOnSelect={false}>\n  <MenuButton>MenuItem</MenuButton>\n  <MenuList minWidth=\"240px\">\n    <MenuOptionGroup defaultValue=\"asc\" title=\"Order\" type=\"radio\">\n      <MenuItemOption value=\"asc\">Ascending</MenuItemOption>\n      <MenuItemOption value=\"desc\">Descending</MenuItemOption>\n    </MenuOptionGroup>\n    <MenuDivider />\n    <MenuOptionGroup title=\"Country\" type=\"checkbox\">\n      <MenuItemOption value=\"email\">Email</MenuItemOption>\n      <MenuItemOption value=\"phone\">Phone</MenuItemOption>\n      <MenuItemOption value=\"country\">Country</MenuItemOption>\n    </MenuOptionGroup>\n  </MenuList>\n</Menu>\n```\n\n## `closeOnSelect`\n\n`MenuItem` and `MenuItemOption` can use the `closeOnSelect` prop to override\ntheir parent `Menu`'s behavior.\n\n```jsx\n<Menu>\n  <MenuButton>Open Menu</MenuButton>\n  <MenuList>\n    <MenuGroup title=\"Profile\">\n      {/* Clicking on those items will close the menu (default behavior) */}\n      <MenuItem>My Account</MenuItem>\n      <MenuItem>Payments</MenuItem>\n    </MenuGroup>\n    <MenuDivider />\n    <MenuOptionGroup title=\"Country\" type=\"checkbox\">\n      {/* Clicking on those items will keep the menu open */}\n      <MenuItemOption value=\"email\" closeOnSelect={false}>\n        Email\n      </MenuItemOption>\n      <MenuItemOption value=\"phone\" closeOnSelect={false}>\n        Phone\n      </MenuItemOption>\n      <MenuItemOption value=\"country\" closeOnSelect={false}>\n        Country\n      </MenuItemOption>\n    </MenuOptionGroup>\n  </MenuList>\n</Menu>\n```\n"
}