{
  "name": "@chakra-ui/color-mode",
  "version": "2.1.6",
  "description": "React component and hooks for handling light and dark mode.",
  "keywords": [
    "react",
    "theming",
    "ui",
    "light mode",
    "use dark mode",
    "dark mode",
    "color mode",
    "hook",
    "color scheme",
    "media query",
    "chakra ui"
  ],
  "sideEffects": false,
  "author": "Segun Adebayo <sage@adebayosegun.com>",
  "homepage": "https://github.com/chakra-ui/chakra-ui#readme",
  "license": "MIT",
  "main": "dist/index.cjs.js",
  "module": "dist/index.esm.js",
  "types": "dist/index.d.ts",
  "files": [
    "dist"
  ],
  "publishConfig": {
    "access": "public"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/chakra-ui/chakra-ui.git",
    "directory": "packages/color-mode"
  },
  "bugs": {
    "url": "https://github.com/chakra-ui/chakra-ui/issues"
  },
  "dependencies": {
    "@chakra-ui/hooks": "2.0.8",
    "@chakra-ui/utils": "2.0.8"
  },
  "peerDependencies": {
    "react": ">=18"
  },
  "devDependencies": {
    "react": "^18.0.0"
  },
  "scripts": {
    "build": "JSX=1 tsup src/index.ts --dts",
    "dev": "pnpm build -- --watch",
    "clean": "rimraf dist .turbo",
    "typecheck": "tsc --noEmit",
    "build:fast": "JSX=1 tsup src/index.ts"
  },
  "readme": "# Color Mode\n\nReact component that adds support for light mode and dark mode using\n`localStorage` and `matchMedia`.\n\n## Installation\n\n```sh\nyarn add @chakra-ui/color-mode\n\n# or\n\nnpm i @chakra-ui/color-mode\n```\n\n## Import component\n\nTo enable this behavior within your apps, wrap your application in a\n`ColorModeProvider` below the `ThemeProvider`\n\n```jsx live=false\nimport * as React from \"react\"\nimport { ColorModeProvider } from \"@chakra-ui/color-mode\"\nimport theme from \"./theme\"\n\nfunction App({ children }) {\n  return (\n    <ThemeProvider theme={theme}>\n      <ColorModeProvider>{children}</ColorModeProvider>\n    </ThemeProvider>\n  )\n}\n```\n\nThen you can use the hook `useColorMode` within your application.\n\n```jsx\nfunction Example() {\n  const { colorMode, toggleColorMode } = useColorMode()\n  return (\n    <header>\n      <Button onClick={toggleColorMode}>\n        Toggle {colorMode === \"light\" ? \"Dark\" : \"Light\"}\n      </Button>\n    </header>\n  )\n}\n```\n"
}