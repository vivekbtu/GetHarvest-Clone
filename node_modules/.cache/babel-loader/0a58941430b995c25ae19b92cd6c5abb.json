{"ast":null,"code":"/**\r\n * Unmemoized version of {@link useRefToCallback}\r\n * @see {@link useRefToCallback}\r\n * @param ref\r\n */\nexport function refToCallback(ref) {\n  return function (newValue) {\n    if (typeof ref === 'function') {\n      ref(newValue);\n    } else if (ref) {\n      ref.current = newValue;\n    }\n  };\n}\n\nvar nullCallback = function () {\n  return null;\n}; // lets maintain a weak ref to, well, ref :)\n// not using `kashe` to keep this package small\n\n\nvar weakMem = new WeakMap();\n\nvar weakMemoize = function (ref) {\n  var usedRef = ref || nullCallback;\n  var storedRef = weakMem.get(usedRef);\n\n  if (storedRef) {\n    return storedRef;\n  }\n\n  var cb = refToCallback(usedRef);\n  weakMem.set(usedRef, cb);\n  return cb;\n};\n/**\r\n * Transforms a given `ref` into `callback`.\r\n *\r\n * To transform `callback` into ref use {@link useCallbackRef|useCallbackRef(undefined, callback)}\r\n *\r\n * @param {ReactRef} ref\r\n * @returns {Function}\r\n *\r\n * @see https://github.com/theKashey/use-callback-ref#reftocallback\r\n *\r\n * @example\r\n * const ref = useRef(0);\r\n * const setRef = useRefToCallback(ref);\r\n * ðŸ‘‰ setRef(10);\r\n * âœ… ref.current === 10\r\n */\n\n\nexport function useRefToCallback(ref) {\n  return weakMemoize(ref);\n}","map":{"version":3,"names":["refToCallback","ref","newValue","current","nullCallback","weakMem","WeakMap","weakMemoize","usedRef","storedRef","get","cb","set","useRefToCallback"],"sources":["C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/use-callback-ref/dist/es2015/refToCallback.js"],"sourcesContent":["/**\r\n * Unmemoized version of {@link useRefToCallback}\r\n * @see {@link useRefToCallback}\r\n * @param ref\r\n */\r\nexport function refToCallback(ref) {\r\n    return function (newValue) {\r\n        if (typeof ref === 'function') {\r\n            ref(newValue);\r\n        }\r\n        else if (ref) {\r\n            ref.current = newValue;\r\n        }\r\n    };\r\n}\r\nvar nullCallback = function () { return null; };\r\n// lets maintain a weak ref to, well, ref :)\r\n// not using `kashe` to keep this package small\r\nvar weakMem = new WeakMap();\r\nvar weakMemoize = function (ref) {\r\n    var usedRef = ref || nullCallback;\r\n    var storedRef = weakMem.get(usedRef);\r\n    if (storedRef) {\r\n        return storedRef;\r\n    }\r\n    var cb = refToCallback(usedRef);\r\n    weakMem.set(usedRef, cb);\r\n    return cb;\r\n};\r\n/**\r\n * Transforms a given `ref` into `callback`.\r\n *\r\n * To transform `callback` into ref use {@link useCallbackRef|useCallbackRef(undefined, callback)}\r\n *\r\n * @param {ReactRef} ref\r\n * @returns {Function}\r\n *\r\n * @see https://github.com/theKashey/use-callback-ref#reftocallback\r\n *\r\n * @example\r\n * const ref = useRef(0);\r\n * const setRef = useRefToCallback(ref);\r\n * ðŸ‘‰ setRef(10);\r\n * âœ… ref.current === 10\r\n */\r\nexport function useRefToCallback(ref) {\r\n    return weakMemoize(ref);\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,aAAT,CAAuBC,GAAvB,EAA4B;EAC/B,OAAO,UAAUC,QAAV,EAAoB;IACvB,IAAI,OAAOD,GAAP,KAAe,UAAnB,EAA+B;MAC3BA,GAAG,CAACC,QAAD,CAAH;IACH,CAFD,MAGK,IAAID,GAAJ,EAAS;MACVA,GAAG,CAACE,OAAJ,GAAcD,QAAd;IACH;EACJ,CAPD;AAQH;;AACD,IAAIE,YAAY,GAAG,YAAY;EAAE,OAAO,IAAP;AAAc,CAA/C,C,CACA;AACA;;;AACA,IAAIC,OAAO,GAAG,IAAIC,OAAJ,EAAd;;AACA,IAAIC,WAAW,GAAG,UAAUN,GAAV,EAAe;EAC7B,IAAIO,OAAO,GAAGP,GAAG,IAAIG,YAArB;EACA,IAAIK,SAAS,GAAGJ,OAAO,CAACK,GAAR,CAAYF,OAAZ,CAAhB;;EACA,IAAIC,SAAJ,EAAe;IACX,OAAOA,SAAP;EACH;;EACD,IAAIE,EAAE,GAAGX,aAAa,CAACQ,OAAD,CAAtB;EACAH,OAAO,CAACO,GAAR,CAAYJ,OAAZ,EAAqBG,EAArB;EACA,OAAOA,EAAP;AACH,CATD;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASE,gBAAT,CAA0BZ,GAA1B,EAA+B;EAClC,OAAOM,WAAW,CAACN,GAAD,CAAlB;AACH"},"metadata":{},"sourceType":"module"}