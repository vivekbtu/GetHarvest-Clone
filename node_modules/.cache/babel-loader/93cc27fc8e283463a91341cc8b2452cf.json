{"ast":null,"code":"import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { pipe } from 'popmotion';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n/**\n * @param handlers -\n * @internal\n */\n\nfunction useTapGesture(_ref) {\n  let {\n    onTap,\n    onTapStart,\n    onTapCancel,\n    whileTap,\n    visualElement\n  } = _ref;\n  const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n  const isPressing = useRef(false);\n  const cancelPointerEndListeners = useRef(null);\n  /**\n   * Only set listener to passive if there are no external listeners.\n   */\n\n  const eventOptions = {\n    passive: !(onTapStart || onTap || onTapCancel || onPointerDown)\n  };\n\n  function removePointerEndListener() {\n    var _a;\n\n    (_a = cancelPointerEndListeners.current) === null || _a === void 0 ? void 0 : _a.call(cancelPointerEndListeners);\n    cancelPointerEndListeners.current = null;\n  }\n\n  function checkPointerEnd() {\n    var _a;\n\n    removePointerEndListener();\n    isPressing.current = false;\n    (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, false);\n    return !isDragActive();\n  }\n\n  function onPointerUp(event, info) {\n    if (!checkPointerEnd()) return;\n    /**\n     * We only count this as a tap gesture if the event.target is the same\n     * as, or a child of, this component's element\n     */\n\n    !isNodeOrChild(visualElement.getInstance(), event.target) ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info) : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);\n  }\n\n  function onPointerCancel(event, info) {\n    if (!checkPointerEnd()) return;\n    onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);\n  }\n\n  function onPointerDown(event, info) {\n    var _a;\n\n    removePointerEndListener();\n    if (isPressing.current) return;\n    isPressing.current = true;\n    cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n    /**\n     * Ensure we trigger animations before firing event callback\n     */\n\n    (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, true);\n    onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);\n  }\n\n  usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n  useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };","map":{"version":3,"names":["useRef","isNodeOrChild","usePointerEvent","addPointerEvent","useUnmountEffect","pipe","AnimationType","isDragActive","useTapGesture","onTap","onTapStart","onTapCancel","whileTap","visualElement","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","passive","onPointerDown","removePointerEndListener","_a","current","call","checkPointerEnd","animationState","setActive","Tap","onPointerUp","event","info","getInstance","target","onPointerCancel","window","undefined"],"sources":["C:/Users/bittu/Desktop/React-Unit4Project/premium-grade-140/node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs"],"sourcesContent":["import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { pipe } from 'popmotion';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        var _a;\n        (_a = cancelPointerEndListeners.current) === null || _a === void 0 ? void 0 : _a.call(cancelPointerEndListeners);\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        var _a;\n        removePointerEndListener();\n        isPressing.current = false;\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.getInstance(), event.target)\n            ? onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info)\n            : onTap === null || onTap === void 0 ? void 0 : onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel === null || onTapCancel === void 0 ? void 0 : onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Tap, true);\n        onTapStart === null || onTapStart === void 0 ? void 0 : onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}