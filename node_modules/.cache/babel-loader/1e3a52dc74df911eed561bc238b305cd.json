{"ast":null,"code":"import _classCallCheck from \"C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { noopReturn, defaults, isEasingGenerator, isEasingList, interpolate } from '@motionone/utils';\nimport { getEasingFunction } from './utils/easing.es.js';\n\nvar Animation = /*#__PURE__*/function () {\n  function Animation(output) {\n    var _this = this;\n\n    var keyframes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 1];\n\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        easing = _ref.easing,\n        _ref$duration = _ref.duration,\n        initialDuration = _ref$duration === void 0 ? defaults.duration : _ref$duration,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === void 0 ? defaults.delay : _ref$delay,\n        _ref$endDelay = _ref.endDelay,\n        endDelay = _ref$endDelay === void 0 ? defaults.endDelay : _ref$endDelay,\n        _ref$repeat = _ref.repeat,\n        repeat = _ref$repeat === void 0 ? defaults.repeat : _ref$repeat,\n        offset = _ref.offset,\n        _ref$direction = _ref.direction,\n        direction = _ref$direction === void 0 ? \"normal\" : _ref$direction;\n\n    _classCallCheck(this, Animation);\n\n    this.startTime = null;\n    this.rate = 1;\n    this.t = 0;\n    this.cancelTimestamp = null;\n    this.easing = noopReturn;\n    this.duration = 0;\n    this.totalDuration = 0;\n    this.repeat = 0;\n    this.playState = \"idle\";\n    this.finished = new Promise(function (resolve, reject) {\n      _this.resolve = resolve;\n      _this.reject = reject;\n    });\n    easing = easing || defaults.easing;\n\n    if (isEasingGenerator(easing)) {\n      var custom = easing.createAnimation(keyframes);\n      easing = custom.easing;\n      keyframes = custom.keyframes || keyframes;\n      initialDuration = custom.duration || initialDuration;\n    }\n\n    this.repeat = repeat;\n    this.easing = isEasingList(easing) ? noopReturn : getEasingFunction(easing);\n    this.updateDuration(initialDuration);\n    var interpolate$1 = interpolate(keyframes, offset, isEasingList(easing) ? easing.map(getEasingFunction) : noopReturn);\n\n    this.tick = function (timestamp) {\n      var _a; // TODO: Temporary fix for OptionsResolver typing\n\n\n      delay = delay;\n      var t = 0;\n\n      if (_this.pauseTime !== undefined) {\n        t = _this.pauseTime;\n      } else {\n        t = (timestamp - _this.startTime) * _this.rate;\n      }\n\n      _this.t = t; // Convert to seconds\n\n      t /= 1000; // Rebase on delay\n\n      t = Math.max(t - delay, 0);\n      /**\r\n       * If this animation has finished, set the current time\r\n       * to the total duration.\r\n       */\n\n      if (_this.playState === \"finished\" && _this.pauseTime === undefined) {\n        t = _this.totalDuration;\n      }\n      /**\r\n       * Get the current progress (0-1) of the animation. If t is >\r\n       * than duration we'll get values like 2.5 (midway through the\r\n       * third iteration)\r\n       */\n\n\n      var progress = t / _this.duration; // TODO progress += iterationStart\n\n      /**\r\n       * Get the current iteration (0 indexed). For instance the floor of\r\n       * 2.5 is 2.\r\n       */\n\n      var currentIteration = Math.floor(progress);\n      /**\r\n       * Get the current progress of the iteration by taking the remainder\r\n       * so 2.5 is 0.5 through iteration 2\r\n       */\n\n      var iterationProgress = progress % 1.0;\n\n      if (!iterationProgress && progress >= 1) {\n        iterationProgress = 1;\n      }\n      /**\r\n       * If iteration progress is 1 we count that as the end\r\n       * of the previous iteration.\r\n       */\n\n\n      iterationProgress === 1 && currentIteration--;\n      /**\r\n       * Reverse progress if we're not running in \"normal\" direction\r\n       */\n\n      var iterationIsOdd = currentIteration % 2;\n\n      if (direction === \"reverse\" || direction === \"alternate\" && iterationIsOdd || direction === \"alternate-reverse\" && !iterationIsOdd) {\n        iterationProgress = 1 - iterationProgress;\n      }\n\n      var p = t >= _this.totalDuration ? 1 : Math.min(iterationProgress, 1);\n      var latest = interpolate$1(_this.easing(p));\n      output(latest);\n      var isAnimationFinished = _this.pauseTime === undefined && (_this.playState === \"finished\" || t >= _this.totalDuration + endDelay);\n\n      if (isAnimationFinished) {\n        _this.playState = \"finished\";\n        (_a = _this.resolve) === null || _a === void 0 ? void 0 : _a.call(_this, latest);\n      } else if (_this.playState !== \"idle\") {\n        _this.frameRequestId = requestAnimationFrame(_this.tick);\n      }\n    };\n\n    this.play();\n  }\n\n  _createClass(Animation, [{\n    key: \"play\",\n    value: function play() {\n      var now = performance.now();\n      this.playState = \"running\";\n\n      if (this.pauseTime !== undefined) {\n        this.startTime = now - this.pauseTime;\n      } else if (!this.startTime) {\n        this.startTime = now;\n      }\n\n      this.cancelTimestamp = this.startTime;\n      this.pauseTime = undefined;\n      this.frameRequestId = requestAnimationFrame(this.tick);\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.playState = \"paused\";\n      this.pauseTime = this.t;\n    }\n  }, {\n    key: \"finish\",\n    value: function finish() {\n      this.playState = \"finished\";\n      this.tick(0);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var _a;\n\n      this.playState = \"idle\";\n\n      if (this.frameRequestId !== undefined) {\n        cancelAnimationFrame(this.frameRequestId);\n      }\n\n      (_a = this.reject) === null || _a === void 0 ? void 0 : _a.call(this, false);\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.stop();\n      this.tick(this.cancelTimestamp);\n    }\n  }, {\n    key: \"reverse\",\n    value: function reverse() {\n      this.rate *= -1;\n    }\n  }, {\n    key: \"commitStyles\",\n    value: function commitStyles() {}\n  }, {\n    key: \"updateDuration\",\n    value: function updateDuration(duration) {\n      this.duration = duration;\n      this.totalDuration = duration * (this.repeat + 1);\n    }\n  }, {\n    key: \"currentTime\",\n    get: function get() {\n      return this.t;\n    },\n    set: function set(t) {\n      if (this.pauseTime !== undefined || this.rate === 0) {\n        this.pauseTime = t;\n      } else {\n        this.startTime = performance.now() - t / this.rate;\n      }\n    }\n  }, {\n    key: \"playbackRate\",\n    get: function get() {\n      return this.rate;\n    },\n    set: function set(rate) {\n      this.rate = rate;\n    }\n  }]);\n\n  return Animation;\n}();\n\nexport { Animation };","map":{"version":3,"names":["noopReturn","defaults","isEasingGenerator","isEasingList","interpolate","getEasingFunction","Animation","output","keyframes","easing","duration","initialDuration","delay","endDelay","repeat","offset","direction","startTime","rate","t","cancelTimestamp","totalDuration","playState","finished","Promise","resolve","reject","custom","createAnimation","updateDuration","interpolate$1","map","tick","timestamp","_a","pauseTime","undefined","Math","max","progress","currentIteration","floor","iterationProgress","iterationIsOdd","p","min","latest","isAnimationFinished","call","frameRequestId","requestAnimationFrame","play","now","performance","cancelAnimationFrame","stop"],"sources":["C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/@motionone/animation/dist/Animation.es.js"],"sourcesContent":["import { noopReturn, defaults, isEasingGenerator, isEasingList, interpolate } from '@motionone/utils';\r\nimport { getEasingFunction } from './utils/easing.es.js';\r\n\r\nclass Animation {\r\n    constructor(output, keyframes = [0, 1], { easing, duration: initialDuration = defaults.duration, delay = defaults.delay, endDelay = defaults.endDelay, repeat = defaults.repeat, offset, direction = \"normal\", } = {}) {\r\n        this.startTime = null;\r\n        this.rate = 1;\r\n        this.t = 0;\r\n        this.cancelTimestamp = null;\r\n        this.easing = noopReturn;\r\n        this.duration = 0;\r\n        this.totalDuration = 0;\r\n        this.repeat = 0;\r\n        this.playState = \"idle\";\r\n        this.finished = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n        easing = easing || defaults.easing;\r\n        if (isEasingGenerator(easing)) {\r\n            const custom = easing.createAnimation(keyframes);\r\n            easing = custom.easing;\r\n            keyframes = custom.keyframes || keyframes;\r\n            initialDuration = custom.duration || initialDuration;\r\n        }\r\n        this.repeat = repeat;\r\n        this.easing = isEasingList(easing) ? noopReturn : getEasingFunction(easing);\r\n        this.updateDuration(initialDuration);\r\n        const interpolate$1 = interpolate(keyframes, offset, isEasingList(easing) ? easing.map(getEasingFunction) : noopReturn);\r\n        this.tick = (timestamp) => {\r\n            var _a;\r\n            // TODO: Temporary fix for OptionsResolver typing\r\n            delay = delay;\r\n            let t = 0;\r\n            if (this.pauseTime !== undefined) {\r\n                t = this.pauseTime;\r\n            }\r\n            else {\r\n                t = (timestamp - this.startTime) * this.rate;\r\n            }\r\n            this.t = t;\r\n            // Convert to seconds\r\n            t /= 1000;\r\n            // Rebase on delay\r\n            t = Math.max(t - delay, 0);\r\n            /**\r\n             * If this animation has finished, set the current time\r\n             * to the total duration.\r\n             */\r\n            if (this.playState === \"finished\" && this.pauseTime === undefined) {\r\n                t = this.totalDuration;\r\n            }\r\n            /**\r\n             * Get the current progress (0-1) of the animation. If t is >\r\n             * than duration we'll get values like 2.5 (midway through the\r\n             * third iteration)\r\n             */\r\n            const progress = t / this.duration;\r\n            // TODO progress += iterationStart\r\n            /**\r\n             * Get the current iteration (0 indexed). For instance the floor of\r\n             * 2.5 is 2.\r\n             */\r\n            let currentIteration = Math.floor(progress);\r\n            /**\r\n             * Get the current progress of the iteration by taking the remainder\r\n             * so 2.5 is 0.5 through iteration 2\r\n             */\r\n            let iterationProgress = progress % 1.0;\r\n            if (!iterationProgress && progress >= 1) {\r\n                iterationProgress = 1;\r\n            }\r\n            /**\r\n             * If iteration progress is 1 we count that as the end\r\n             * of the previous iteration.\r\n             */\r\n            iterationProgress === 1 && currentIteration--;\r\n            /**\r\n             * Reverse progress if we're not running in \"normal\" direction\r\n             */\r\n            const iterationIsOdd = currentIteration % 2;\r\n            if (direction === \"reverse\" ||\r\n                (direction === \"alternate\" && iterationIsOdd) ||\r\n                (direction === \"alternate-reverse\" && !iterationIsOdd)) {\r\n                iterationProgress = 1 - iterationProgress;\r\n            }\r\n            const p = t >= this.totalDuration ? 1 : Math.min(iterationProgress, 1);\r\n            const latest = interpolate$1(this.easing(p));\r\n            output(latest);\r\n            const isAnimationFinished = this.pauseTime === undefined &&\r\n                (this.playState === \"finished\" || t >= this.totalDuration + endDelay);\r\n            if (isAnimationFinished) {\r\n                this.playState = \"finished\";\r\n                (_a = this.resolve) === null || _a === void 0 ? void 0 : _a.call(this, latest);\r\n            }\r\n            else if (this.playState !== \"idle\") {\r\n                this.frameRequestId = requestAnimationFrame(this.tick);\r\n            }\r\n        };\r\n        this.play();\r\n    }\r\n    play() {\r\n        const now = performance.now();\r\n        this.playState = \"running\";\r\n        if (this.pauseTime !== undefined) {\r\n            this.startTime = now - this.pauseTime;\r\n        }\r\n        else if (!this.startTime) {\r\n            this.startTime = now;\r\n        }\r\n        this.cancelTimestamp = this.startTime;\r\n        this.pauseTime = undefined;\r\n        this.frameRequestId = requestAnimationFrame(this.tick);\r\n    }\r\n    pause() {\r\n        this.playState = \"paused\";\r\n        this.pauseTime = this.t;\r\n    }\r\n    finish() {\r\n        this.playState = \"finished\";\r\n        this.tick(0);\r\n    }\r\n    stop() {\r\n        var _a;\r\n        this.playState = \"idle\";\r\n        if (this.frameRequestId !== undefined) {\r\n            cancelAnimationFrame(this.frameRequestId);\r\n        }\r\n        (_a = this.reject) === null || _a === void 0 ? void 0 : _a.call(this, false);\r\n    }\r\n    cancel() {\r\n        this.stop();\r\n        this.tick(this.cancelTimestamp);\r\n    }\r\n    reverse() {\r\n        this.rate *= -1;\r\n    }\r\n    commitStyles() { }\r\n    updateDuration(duration) {\r\n        this.duration = duration;\r\n        this.totalDuration = duration * (this.repeat + 1);\r\n    }\r\n    get currentTime() {\r\n        return this.t;\r\n    }\r\n    set currentTime(t) {\r\n        if (this.pauseTime !== undefined || this.rate === 0) {\r\n            this.pauseTime = t;\r\n        }\r\n        else {\r\n            this.startTime = performance.now() - t / this.rate;\r\n        }\r\n    }\r\n    get playbackRate() {\r\n        return this.rate;\r\n    }\r\n    set playbackRate(rate) {\r\n        this.rate = rate;\r\n    }\r\n}\r\n\r\nexport { Animation };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}