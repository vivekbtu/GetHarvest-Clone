{"ast":null,"code":"import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n  var _a;\n\n  const {\n    willChange\n  } = next;\n\n  for (const key in next) {\n    const nextValue = next[key];\n    const prevValue = prev[key];\n\n    if (isMotionValue(nextValue)) {\n      /**\n       * If this is a motion value found in props or style, we want to add it\n       * to our visual element's motion value map.\n       */\n      element.addValue(key, nextValue);\n\n      if (isWillChangeMotionValue(willChange)) {\n        willChange.add(key);\n      }\n      /**\n       * Check the version of the incoming motion value with this version\n       * and warn against mismatches.\n       */\n\n\n      if (process.env.NODE_ENV === \"development\") {\n        warnOnce(nextValue.version === \"7.2.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.2.0 may not work as expected.`);\n      }\n    } else if (isMotionValue(prevValue)) {\n      /**\n       * If we're swapping from a motion value to a static value,\n       * create a new motion value from that\n       */\n      element.addValue(key, motionValue(nextValue));\n\n      if (isWillChangeMotionValue(willChange)) {\n        willChange.remove(key);\n      }\n    } else if (prevValue !== nextValue) {\n      /**\n       * If this is a flat value that has changed, update the motion value\n       * or create one if it doesn't exist. We only want to do this if we're\n       * not handling the value with our animation state.\n       */\n      if (element.hasValue(key)) {\n        const existingValue = element.getValue(key); // TODO: Only update values that aren't being animated or even looked at\n\n        !existingValue.hasAnimated && existingValue.set(nextValue);\n      } else {\n        element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));\n      }\n    }\n  } // Handle removed values\n\n\n  for (const key in prev) {\n    if (next[key] === undefined) element.removeValue(key);\n  }\n\n  return next;\n}\n\nexport { updateMotionValuesFromProps };","map":{"version":3,"names":["isWillChangeMotionValue","warnOnce","motionValue","isMotionValue","updateMotionValuesFromProps","element","next","prev","_a","willChange","key","nextValue","prevValue","addValue","add","process","env","NODE_ENV","version","remove","hasValue","existingValue","getValue","hasAnimated","set","getStaticValue","undefined","removeValue"],"sources":["C:/Users/bittu/Desktop/React-Unit4Project/premium-grade-140/node_modules/framer-motion/dist/es/render/utils/motion-values.mjs"],"sourcesContent":["import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    var _a;\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.2.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.2.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                element.addValue(key, motionValue((_a = element.getStaticValue(key)) !== null && _a !== void 0 ? _a : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,oCAAxC;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,aAAT,QAA8B,uCAA9B;;AAEA,SAASC,2BAAT,CAAqCC,OAArC,EAA8CC,IAA9C,EAAoDC,IAApD,EAA0D;EACtD,IAAIC,EAAJ;;EACA,MAAM;IAAEC;EAAF,IAAiBH,IAAvB;;EACA,KAAK,MAAMI,GAAX,IAAkBJ,IAAlB,EAAwB;IACpB,MAAMK,SAAS,GAAGL,IAAI,CAACI,GAAD,CAAtB;IACA,MAAME,SAAS,GAAGL,IAAI,CAACG,GAAD,CAAtB;;IACA,IAAIP,aAAa,CAACQ,SAAD,CAAjB,EAA8B;MAC1B;AACZ;AACA;AACA;MACYN,OAAO,CAACQ,QAAR,CAAiBH,GAAjB,EAAsBC,SAAtB;;MACA,IAAIX,uBAAuB,CAACS,UAAD,CAA3B,EAAyC;QACrCA,UAAU,CAACK,GAAX,CAAeJ,GAAf;MACH;MACD;AACZ;AACA;AACA;;;MACY,IAAIK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;QACxChB,QAAQ,CAACU,SAAS,CAACO,OAAV,KAAsB,OAAvB,EAAiC,4CAA2CP,SAAS,CAACO,OAAQ,uCAA9F,CAAR;MACH;IACJ,CAhBD,MAiBK,IAAIf,aAAa,CAACS,SAAD,CAAjB,EAA8B;MAC/B;AACZ;AACA;AACA;MACYP,OAAO,CAACQ,QAAR,CAAiBH,GAAjB,EAAsBR,WAAW,CAACS,SAAD,CAAjC;;MACA,IAAIX,uBAAuB,CAACS,UAAD,CAA3B,EAAyC;QACrCA,UAAU,CAACU,MAAX,CAAkBT,GAAlB;MACH;IACJ,CATI,MAUA,IAAIE,SAAS,KAAKD,SAAlB,EAA6B;MAC9B;AACZ;AACA;AACA;AACA;MACY,IAAIN,OAAO,CAACe,QAAR,CAAiBV,GAAjB,CAAJ,EAA2B;QACvB,MAAMW,aAAa,GAAGhB,OAAO,CAACiB,QAAR,CAAiBZ,GAAjB,CAAtB,CADuB,CAEvB;;QACA,CAACW,aAAa,CAACE,WAAf,IAA8BF,aAAa,CAACG,GAAd,CAAkBb,SAAlB,CAA9B;MACH,CAJD,MAKK;QACDN,OAAO,CAACQ,QAAR,CAAiBH,GAAjB,EAAsBR,WAAW,CAAC,CAACM,EAAE,GAAGH,OAAO,CAACoB,cAAR,CAAuBf,GAAvB,CAAN,MAAuC,IAAvC,IAA+CF,EAAE,KAAK,KAAK,CAA3D,GAA+DA,EAA/D,GAAoEG,SAArE,CAAjC;MACH;IACJ;EACJ,CAhDqD,CAiDtD;;;EACA,KAAK,MAAMD,GAAX,IAAkBH,IAAlB,EAAwB;IACpB,IAAID,IAAI,CAACI,GAAD,CAAJ,KAAcgB,SAAlB,EACIrB,OAAO,CAACsB,WAAR,CAAoBjB,GAApB;EACP;;EACD,OAAOJ,IAAP;AACH;;AAED,SAASF,2BAAT"},"metadata":{},"sourceType":"module"}