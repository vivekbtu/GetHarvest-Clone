{"ast":null,"code":"import _classCallCheck from \"C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { useConstant } from '../../utils/use-constant.mjs';\n/**\r\n * Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components.\r\n *\r\n * ```jsx\r\n * const dragControls = useDragControls()\r\n *\r\n * function startDrag(event) {\r\n *   dragControls.start(event, { snapToCursor: true })\r\n * }\r\n *\r\n * return (\r\n *   <>\r\n *     <div onPointerDown={startDrag} />\r\n *     <motion.div drag=\"x\" dragControls={dragControls} />\r\n *   </>\r\n * )\r\n * ```\r\n *\r\n * @public\r\n */\n\nvar DragControls = /*#__PURE__*/function () {\n  function DragControls() {\n    _classCallCheck(this, DragControls);\n\n    this.componentControls = new Set();\n  }\n  /**\r\n   * Subscribe a component's internal `VisualElementDragControls` to the user-facing API.\r\n   *\r\n   * @internal\r\n   */\n\n\n  _createClass(DragControls, [{\n    key: \"subscribe\",\n    value: function subscribe(controls) {\n      var _this = this;\n\n      this.componentControls.add(controls);\n      return function () {\n        return _this.componentControls.delete(controls);\n      };\n    }\n    /**\r\n     * Start a drag gesture on every `motion` component that has this set of drag controls\r\n     * passed into it via the `dragControls` prop.\r\n     *\r\n     * ```jsx\r\n     * dragControls.start(e, {\r\n     *   snapToCursor: true\r\n     * })\r\n     * ```\r\n     *\r\n     * @param event - PointerEvent\r\n     * @param options - Options\r\n     *\r\n     * @public\r\n     */\n\n  }, {\n    key: \"start\",\n    value: function start(event, options) {\n      this.componentControls.forEach(function (controls) {\n        controls.start(event.nativeEvent || event, options);\n      });\n    }\n  }]);\n\n  return DragControls;\n}();\n\nvar createDragControls = function createDragControls() {\n  return new DragControls();\n};\n/**\r\n * Usually, dragging is initiated by pressing down on a `motion` component with a `drag` prop\r\n * and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we\r\n * might want to initiate that dragging from a different component than the draggable one.\r\n *\r\n * By creating a `dragControls` using the `useDragControls` hook, we can pass this into\r\n * the draggable component's `dragControls` prop. It exposes a `start` method\r\n * that can start dragging from pointer events on other components.\r\n *\r\n * ```jsx\r\n * const dragControls = useDragControls()\r\n *\r\n * function startDrag(event) {\r\n *   dragControls.start(event, { snapToCursor: true })\r\n * }\r\n *\r\n * return (\r\n *   <>\r\n *     <div onPointerDown={startDrag} />\r\n *     <motion.div drag=\"x\" dragControls={dragControls} />\r\n *   </>\r\n * )\r\n * ```\r\n *\r\n * @public\r\n */\n\n\nfunction useDragControls() {\n  return useConstant(createDragControls);\n}\n\nexport { DragControls, useDragControls };","map":{"version":3,"names":["useConstant","DragControls","componentControls","Set","controls","add","delete","event","options","forEach","start","nativeEvent","createDragControls","useDragControls"],"sources":["C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/framer-motion/dist/es/gestures/drag/use-drag-controls.mjs"],"sourcesContent":["import { useConstant } from '../../utils/use-constant.mjs';\r\n\r\n/**\r\n * Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components.\r\n *\r\n * ```jsx\r\n * const dragControls = useDragControls()\r\n *\r\n * function startDrag(event) {\r\n *   dragControls.start(event, { snapToCursor: true })\r\n * }\r\n *\r\n * return (\r\n *   <>\r\n *     <div onPointerDown={startDrag} />\r\n *     <motion.div drag=\"x\" dragControls={dragControls} />\r\n *   </>\r\n * )\r\n * ```\r\n *\r\n * @public\r\n */\r\nclass DragControls {\r\n    constructor() {\r\n        this.componentControls = new Set();\r\n    }\r\n    /**\r\n     * Subscribe a component's internal `VisualElementDragControls` to the user-facing API.\r\n     *\r\n     * @internal\r\n     */\r\n    subscribe(controls) {\r\n        this.componentControls.add(controls);\r\n        return () => this.componentControls.delete(controls);\r\n    }\r\n    /**\r\n     * Start a drag gesture on every `motion` component that has this set of drag controls\r\n     * passed into it via the `dragControls` prop.\r\n     *\r\n     * ```jsx\r\n     * dragControls.start(e, {\r\n     *   snapToCursor: true\r\n     * })\r\n     * ```\r\n     *\r\n     * @param event - PointerEvent\r\n     * @param options - Options\r\n     *\r\n     * @public\r\n     */\r\n    start(event, options) {\r\n        this.componentControls.forEach((controls) => {\r\n            controls.start(event.nativeEvent || event, options);\r\n        });\r\n    }\r\n}\r\nconst createDragControls = () => new DragControls();\r\n/**\r\n * Usually, dragging is initiated by pressing down on a `motion` component with a `drag` prop\r\n * and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we\r\n * might want to initiate that dragging from a different component than the draggable one.\r\n *\r\n * By creating a `dragControls` using the `useDragControls` hook, we can pass this into\r\n * the draggable component's `dragControls` prop. It exposes a `start` method\r\n * that can start dragging from pointer events on other components.\r\n *\r\n * ```jsx\r\n * const dragControls = useDragControls()\r\n *\r\n * function startDrag(event) {\r\n *   dragControls.start(event, { snapToCursor: true })\r\n * }\r\n *\r\n * return (\r\n *   <>\r\n *     <div onPointerDown={startDrag} />\r\n *     <motion.div drag=\"x\" dragControls={dragControls} />\r\n *   </>\r\n * )\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction useDragControls() {\r\n    return useConstant(createDragControls);\r\n}\r\n\r\nexport { DragControls, useDragControls };\r\n"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,8BAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,Y;EACF,wBAAc;IAAA;;IACV,KAAKC,iBAAL,GAAyB,IAAIC,GAAJ,EAAzB;EACH;EACD;AACJ;AACA;AACA;AACA;;;;;WACI,mBAAUC,QAAV,EAAoB;MAAA;;MAChB,KAAKF,iBAAL,CAAuBG,GAAvB,CAA2BD,QAA3B;MACA,OAAO;QAAA,OAAM,KAAI,CAACF,iBAAL,CAAuBI,MAAvB,CAA8BF,QAA9B,CAAN;MAAA,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,eAAMG,KAAN,EAAaC,OAAb,EAAsB;MAClB,KAAKN,iBAAL,CAAuBO,OAAvB,CAA+B,UAACL,QAAD,EAAc;QACzCA,QAAQ,CAACM,KAAT,CAAeH,KAAK,CAACI,WAAN,IAAqBJ,KAApC,EAA2CC,OAA3C;MACH,CAFD;IAGH;;;;;;AAEL,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB;EAAA,OAAM,IAAIX,YAAJ,EAAN;AAAA,CAA3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASY,eAAT,GAA2B;EACvB,OAAOb,WAAW,CAACY,kBAAD,CAAlB;AACH;;AAED,SAASX,YAAT,EAAuBY,eAAvB"},"metadata":{},"sourceType":"module"}