{"ast":null,"code":"function calcInset(element, container) {\n  var inset = {\n    x: 0,\n    y: 0\n  };\n  var current = element;\n\n  while (current && current !== container) {\n    if (current instanceof HTMLElement) {\n      inset.x += current.offsetLeft;\n      inset.y += current.offsetTop;\n      current = current.offsetParent;\n    } else if (current instanceof SVGGraphicsElement && \"getBBox\" in current) {\n      var _current$getBBox = current.getBBox(),\n          top = _current$getBBox.top,\n          left = _current$getBBox.left;\n\n      inset.x += left;\n      inset.y += top;\n      /**\r\n       * Assign the next parent element as the <svg /> tag.\r\n       */\n\n      while (current && current.tagName !== \"svg\") {\n        current = current.parentNode;\n      }\n    }\n  }\n\n  return inset;\n}\n\nexport { calcInset };","map":{"version":3,"names":["calcInset","element","container","inset","x","y","current","HTMLElement","offsetLeft","offsetTop","offsetParent","SVGGraphicsElement","getBBox","top","left","tagName","parentNode"],"sources":["C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/@motionone/dom/dist/gestures/scroll/offsets/inset.es.js"],"sourcesContent":["function calcInset(element, container) {\r\n    let inset = { x: 0, y: 0 };\r\n    let current = element;\r\n    while (current && current !== container) {\r\n        if (current instanceof HTMLElement) {\r\n            inset.x += current.offsetLeft;\r\n            inset.y += current.offsetTop;\r\n            current = current.offsetParent;\r\n        }\r\n        else if (current instanceof SVGGraphicsElement && \"getBBox\" in current) {\r\n            const { top, left } = current.getBBox();\r\n            inset.x += left;\r\n            inset.y += top;\r\n            /**\r\n             * Assign the next parent element as the <svg /> tag.\r\n             */\r\n            while (current && current.tagName !== \"svg\") {\r\n                current = current.parentNode;\r\n            }\r\n        }\r\n    }\r\n    return inset;\r\n}\r\n\r\nexport { calcInset };\r\n"],"mappings":"AAAA,SAASA,SAAT,CAAmBC,OAAnB,EAA4BC,SAA5B,EAAuC;EACnC,IAAIC,KAAK,GAAG;IAAEC,CAAC,EAAE,CAAL;IAAQC,CAAC,EAAE;EAAX,CAAZ;EACA,IAAIC,OAAO,GAAGL,OAAd;;EACA,OAAOK,OAAO,IAAIA,OAAO,KAAKJ,SAA9B,EAAyC;IACrC,IAAII,OAAO,YAAYC,WAAvB,EAAoC;MAChCJ,KAAK,CAACC,CAAN,IAAWE,OAAO,CAACE,UAAnB;MACAL,KAAK,CAACE,CAAN,IAAWC,OAAO,CAACG,SAAnB;MACAH,OAAO,GAAGA,OAAO,CAACI,YAAlB;IACH,CAJD,MAKK,IAAIJ,OAAO,YAAYK,kBAAnB,IAAyC,aAAaL,OAA1D,EAAmE;MACpE,uBAAsBA,OAAO,CAACM,OAAR,EAAtB;MAAA,IAAQC,GAAR,oBAAQA,GAAR;MAAA,IAAaC,IAAb,oBAAaA,IAAb;;MACAX,KAAK,CAACC,CAAN,IAAWU,IAAX;MACAX,KAAK,CAACE,CAAN,IAAWQ,GAAX;MACA;AACZ;AACA;;MACY,OAAOP,OAAO,IAAIA,OAAO,CAACS,OAAR,KAAoB,KAAtC,EAA6C;QACzCT,OAAO,GAAGA,OAAO,CAACU,UAAlB;MACH;IACJ;EACJ;;EACD,OAAOb,KAAP;AACH;;AAED,SAASH,SAAT"},"metadata":{},"sourceType":"module"}