{"ast":null,"code":"import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n  constructor() {\n    this.subscriptions = [];\n  }\n\n  add(handler) {\n    addUniqueItem(this.subscriptions, handler);\n    return () => removeItem(this.subscriptions, handler);\n  }\n\n  notify(a, b, c) {\n    const numSubscriptions = this.subscriptions.length;\n    if (!numSubscriptions) return;\n\n    if (numSubscriptions === 1) {\n      /**\n       * If there's only a single handler we can just call it without invoking a loop.\n       */\n      this.subscriptions[0](a, b, c);\n    } else {\n      for (let i = 0; i < numSubscriptions; i++) {\n        /**\n         * Check whether the handler exists before firing as it's possible\n         * the subscriptions were modified during this loop running.\n         */\n        const handler = this.subscriptions[i];\n        handler && handler(a, b, c);\n      }\n    }\n  }\n\n  getSize() {\n    return this.subscriptions.length;\n  }\n\n  clear() {\n    this.subscriptions.length = 0;\n  }\n\n}\n\nexport { SubscriptionManager };","map":{"version":3,"names":["addUniqueItem","removeItem","SubscriptionManager","constructor","subscriptions","add","handler","notify","a","b","c","numSubscriptions","length","i","getSize","clear"],"sources":["C:/Users/bittu/Desktop/React-Unit4Project/premium-grade-140/node_modules/framer-motion/dist/es/utils/subscription-manager.mjs"],"sourcesContent":["import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,aAA1C;;AAEA,MAAMC,mBAAN,CAA0B;EACtBC,WAAW,GAAG;IACV,KAAKC,aAAL,GAAqB,EAArB;EACH;;EACDC,GAAG,CAACC,OAAD,EAAU;IACTN,aAAa,CAAC,KAAKI,aAAN,EAAqBE,OAArB,CAAb;IACA,OAAO,MAAML,UAAU,CAAC,KAAKG,aAAN,EAAqBE,OAArB,CAAvB;EACH;;EACDC,MAAM,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAU;IACZ,MAAMC,gBAAgB,GAAG,KAAKP,aAAL,CAAmBQ,MAA5C;IACA,IAAI,CAACD,gBAAL,EACI;;IACJ,IAAIA,gBAAgB,KAAK,CAAzB,EAA4B;MACxB;AACZ;AACA;MACY,KAAKP,aAAL,CAAmB,CAAnB,EAAsBI,CAAtB,EAAyBC,CAAzB,EAA4BC,CAA5B;IACH,CALD,MAMK;MACD,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,gBAApB,EAAsCE,CAAC,EAAvC,EAA2C;QACvC;AAChB;AACA;AACA;QACgB,MAAMP,OAAO,GAAG,KAAKF,aAAL,CAAmBS,CAAnB,CAAhB;QACAP,OAAO,IAAIA,OAAO,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAlB;MACH;IACJ;EACJ;;EACDI,OAAO,GAAG;IACN,OAAO,KAAKV,aAAL,CAAmBQ,MAA1B;EACH;;EACDG,KAAK,GAAG;IACJ,KAAKX,aAAL,CAAmBQ,MAAnB,GAA4B,CAA5B;EACH;;AAlCqB;;AAqC1B,SAASV,mBAAT"},"metadata":{},"sourceType":"module"}