{"ast":null,"code":"const identity = v => v;\n\nconst createAttractor = function () {\n  let alterDisplacement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : identity;\n  return (constant, origin, v) => {\n    const displacement = origin - v;\n    const springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\n    return displacement <= 0 ? origin + springModifiedDisplacement : origin - springModifiedDisplacement;\n  };\n};\n\nconst attract = createAttractor();\nconst attractExpo = createAttractor(Math.sqrt);\nexport { attract, attractExpo, createAttractor };","map":{"version":3,"names":["identity","v","createAttractor","alterDisplacement","constant","origin","displacement","springModifiedDisplacement","Math","abs","attract","attractExpo","sqrt"],"sources":["C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/popmotion/dist/es/utils/attract.mjs"],"sourcesContent":["const identity = (v) => v;\r\nconst createAttractor = (alterDisplacement = identity) => (constant, origin, v) => {\r\n    const displacement = origin - v;\r\n    const springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\r\n    return displacement <= 0\r\n        ? origin + springModifiedDisplacement\r\n        : origin - springModifiedDisplacement;\r\n};\r\nconst attract = createAttractor();\r\nconst attractExpo = createAttractor(Math.sqrt);\r\n\r\nexport { attract, attractExpo, createAttractor };\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAIC,CAAD,IAAOA,CAAxB;;AACA,MAAMC,eAAe,GAAG;EAAA,IAACC,iBAAD,uEAAqBH,QAArB;EAAA,OAAkC,CAACI,QAAD,EAAWC,MAAX,EAAmBJ,CAAnB,KAAyB;IAC/E,MAAMK,YAAY,GAAGD,MAAM,GAAGJ,CAA9B;IACA,MAAMM,0BAA0B,GAAG,EAAE,IAAIH,QAAJ,GAAe,CAAjB,KAAuB,IAAID,iBAAiB,CAACK,IAAI,CAACC,GAAL,CAASH,YAAT,CAAD,CAA5C,CAAnC;IACA,OAAOA,YAAY,IAAI,CAAhB,GACDD,MAAM,GAAGE,0BADR,GAEDF,MAAM,GAAGE,0BAFf;EAGH,CANuB;AAAA,CAAxB;;AAOA,MAAMG,OAAO,GAAGR,eAAe,EAA/B;AACA,MAAMS,WAAW,GAAGT,eAAe,CAACM,IAAI,CAACI,IAAN,CAAnC;AAEA,SAASF,OAAT,EAAkBC,WAAlB,EAA+BT,eAA/B"},"metadata":{},"sourceType":"module"}