{"ast":null,"code":"/**\r\n * A list of all transformable axes. We'll use this list to generated a version\r\n * of each axes for each transform.\r\n */\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\r\n * An ordered array of each transformable value. By default, transform values\r\n * will be sorted to this order.\r\n */\n\nconst order = [\"translate\", \"scale\", \"rotate\", \"skew\"];\n/**\r\n * Generate a list of every possible transform key.\r\n */\n\nconst transformProps = [\"transformPerspective\", \"x\", \"y\", \"z\"];\norder.forEach(operationKey => transformAxes.forEach(axesKey => transformProps.push(operationKey + axesKey)));\n/**\r\n * A function to use with Array.sort to sort transform keys by their default order.\r\n */\n\nfunction sortTransformProps(a, b) {\n  return transformProps.indexOf(a) - transformProps.indexOf(b);\n}\n/**\r\n * A quick lookup for transform props.\r\n */\n\n\nconst transformPropSet = new Set(transformProps);\n\nfunction isTransformProp(key) {\n  return transformPropSet.has(key);\n}\n/**\r\n * A quick lookup for transform origin props\r\n */\n\n\nconst transformOriginProps = new Set([\"originX\", \"originY\", \"originZ\"]);\n\nfunction isTransformOriginProp(key) {\n  return transformOriginProps.has(key);\n}\n\nexport { isTransformOriginProp, isTransformProp, sortTransformProps, transformAxes, transformProps };","map":{"version":3,"names":["transformAxes","order","transformProps","forEach","operationKey","axesKey","push","sortTransformProps","a","b","indexOf","transformPropSet","Set","isTransformProp","key","has","transformOriginProps","isTransformOriginProp"],"sources":["C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/framer-motion/dist/es/render/html/utils/transform.mjs"],"sourcesContent":["/**\r\n * A list of all transformable axes. We'll use this list to generated a version\r\n * of each axes for each transform.\r\n */\r\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\r\n/**\r\n * An ordered array of each transformable value. By default, transform values\r\n * will be sorted to this order.\r\n */\r\nconst order = [\"translate\", \"scale\", \"rotate\", \"skew\"];\r\n/**\r\n * Generate a list of every possible transform key.\r\n */\r\nconst transformProps = [\"transformPerspective\", \"x\", \"y\", \"z\"];\r\norder.forEach((operationKey) => transformAxes.forEach((axesKey) => transformProps.push(operationKey + axesKey)));\r\n/**\r\n * A function to use with Array.sort to sort transform keys by their default order.\r\n */\r\nfunction sortTransformProps(a, b) {\r\n    return transformProps.indexOf(a) - transformProps.indexOf(b);\r\n}\r\n/**\r\n * A quick lookup for transform props.\r\n */\r\nconst transformPropSet = new Set(transformProps);\r\nfunction isTransformProp(key) {\r\n    return transformPropSet.has(key);\r\n}\r\n/**\r\n * A quick lookup for transform origin props\r\n */\r\nconst transformOriginProps = new Set([\"originX\", \"originY\", \"originZ\"]);\r\nfunction isTransformOriginProp(key) {\r\n    return transformOriginProps.has(key);\r\n}\r\n\r\nexport { isTransformOriginProp, isTransformProp, sortTransformProps, transformAxes, transformProps };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,aAAa,GAAG,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,GAAf,CAAtB;AACA;AACA;AACA;AACA;;AACA,MAAMC,KAAK,GAAG,CAAC,WAAD,EAAc,OAAd,EAAuB,QAAvB,EAAiC,MAAjC,CAAd;AACA;AACA;AACA;;AACA,MAAMC,cAAc,GAAG,CAAC,sBAAD,EAAyB,GAAzB,EAA8B,GAA9B,EAAmC,GAAnC,CAAvB;AACAD,KAAK,CAACE,OAAN,CAAeC,YAAD,IAAkBJ,aAAa,CAACG,OAAd,CAAuBE,OAAD,IAAaH,cAAc,CAACI,IAAf,CAAoBF,YAAY,GAAGC,OAAnC,CAAnC,CAAhC;AACA;AACA;AACA;;AACA,SAASE,kBAAT,CAA4BC,CAA5B,EAA+BC,CAA/B,EAAkC;EAC9B,OAAOP,cAAc,CAACQ,OAAf,CAAuBF,CAAvB,IAA4BN,cAAc,CAACQ,OAAf,CAAuBD,CAAvB,CAAnC;AACH;AACD;AACA;AACA;;;AACA,MAAME,gBAAgB,GAAG,IAAIC,GAAJ,CAAQV,cAAR,CAAzB;;AACA,SAASW,eAAT,CAAyBC,GAAzB,EAA8B;EAC1B,OAAOH,gBAAgB,CAACI,GAAjB,CAAqBD,GAArB,CAAP;AACH;AACD;AACA;AACA;;;AACA,MAAME,oBAAoB,GAAG,IAAIJ,GAAJ,CAAQ,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAAR,CAA7B;;AACA,SAASK,qBAAT,CAA+BH,GAA/B,EAAoC;EAChC,OAAOE,oBAAoB,CAACD,GAArB,CAAyBD,GAAzB,CAAP;AACH;;AAED,SAASG,qBAAT,EAAgCJ,eAAhC,EAAiDN,kBAAjD,EAAqEP,aAArE,EAAoFE,cAApF"},"metadata":{},"sourceType":"module"}