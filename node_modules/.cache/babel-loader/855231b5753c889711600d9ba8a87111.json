{"ast":null,"code":"function createLock(name) {\n  let lock = null;\n  return () => {\n    const openLock = () => {\n      lock = null;\n    };\n\n    if (lock === null) {\n      lock = name;\n      return openLock;\n    }\n\n    return false;\n  };\n}\n\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\n\nfunction getGlobalLock(drag) {\n  let lock = false;\n\n  if (drag === \"y\") {\n    lock = globalVerticalLock();\n  } else if (drag === \"x\") {\n    lock = globalHorizontalLock();\n  } else {\n    const openHorizontal = globalHorizontalLock();\n    const openVertical = globalVerticalLock();\n\n    if (openHorizontal && openVertical) {\n      lock = () => {\n        openHorizontal();\n        openVertical();\n      };\n    } else {\n      // Release the locks because we don't use them\n      if (openHorizontal) openHorizontal();\n      if (openVertical) openVertical();\n    }\n  }\n\n  return lock;\n}\n\nfunction isDragActive() {\n  // Check the gesture lock - if we get it, it means no drag gesture is active\n  // and we can safely fire the tap gesture.\n  const openGestureLock = getGlobalLock(true);\n  if (!openGestureLock) return true;\n  openGestureLock();\n  return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };","map":{"version":3,"names":["createLock","name","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock"],"sources":["C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs"],"sourcesContent":["function createLock(name) {\r\n    let lock = null;\r\n    return () => {\r\n        const openLock = () => {\r\n            lock = null;\r\n        };\r\n        if (lock === null) {\r\n            lock = name;\r\n            return openLock;\r\n        }\r\n        return false;\r\n    };\r\n}\r\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\r\nconst globalVerticalLock = createLock(\"dragVertical\");\r\nfunction getGlobalLock(drag) {\r\n    let lock = false;\r\n    if (drag === \"y\") {\r\n        lock = globalVerticalLock();\r\n    }\r\n    else if (drag === \"x\") {\r\n        lock = globalHorizontalLock();\r\n    }\r\n    else {\r\n        const openHorizontal = globalHorizontalLock();\r\n        const openVertical = globalVerticalLock();\r\n        if (openHorizontal && openVertical) {\r\n            lock = () => {\r\n                openHorizontal();\r\n                openVertical();\r\n            };\r\n        }\r\n        else {\r\n            // Release the locks because we don't use them\r\n            if (openHorizontal)\r\n                openHorizontal();\r\n            if (openVertical)\r\n                openVertical();\r\n        }\r\n    }\r\n    return lock;\r\n}\r\nfunction isDragActive() {\r\n    // Check the gesture lock - if we get it, it means no drag gesture is active\r\n    // and we can safely fire the tap gesture.\r\n    const openGestureLock = getGlobalLock(true);\r\n    if (!openGestureLock)\r\n        return true;\r\n    openGestureLock();\r\n    return false;\r\n}\r\n\r\nexport { createLock, getGlobalLock, isDragActive };\r\n"],"mappings":"AAAA,SAASA,UAAT,CAAoBC,IAApB,EAA0B;EACtB,IAAIC,IAAI,GAAG,IAAX;EACA,OAAO,MAAM;IACT,MAAMC,QAAQ,GAAG,MAAM;MACnBD,IAAI,GAAG,IAAP;IACH,CAFD;;IAGA,IAAIA,IAAI,KAAK,IAAb,EAAmB;MACfA,IAAI,GAAGD,IAAP;MACA,OAAOE,QAAP;IACH;;IACD,OAAO,KAAP;EACH,CATD;AAUH;;AACD,MAAMC,oBAAoB,GAAGJ,UAAU,CAAC,gBAAD,CAAvC;AACA,MAAMK,kBAAkB,GAAGL,UAAU,CAAC,cAAD,CAArC;;AACA,SAASM,aAAT,CAAuBC,IAAvB,EAA6B;EACzB,IAAIL,IAAI,GAAG,KAAX;;EACA,IAAIK,IAAI,KAAK,GAAb,EAAkB;IACdL,IAAI,GAAGG,kBAAkB,EAAzB;EACH,CAFD,MAGK,IAAIE,IAAI,KAAK,GAAb,EAAkB;IACnBL,IAAI,GAAGE,oBAAoB,EAA3B;EACH,CAFI,MAGA;IACD,MAAMI,cAAc,GAAGJ,oBAAoB,EAA3C;IACA,MAAMK,YAAY,GAAGJ,kBAAkB,EAAvC;;IACA,IAAIG,cAAc,IAAIC,YAAtB,EAAoC;MAChCP,IAAI,GAAG,MAAM;QACTM,cAAc;QACdC,YAAY;MACf,CAHD;IAIH,CALD,MAMK;MACD;MACA,IAAID,cAAJ,EACIA,cAAc;MAClB,IAAIC,YAAJ,EACIA,YAAY;IACnB;EACJ;;EACD,OAAOP,IAAP;AACH;;AACD,SAASQ,YAAT,GAAwB;EACpB;EACA;EACA,MAAMC,eAAe,GAAGL,aAAa,CAAC,IAAD,CAArC;EACA,IAAI,CAACK,eAAL,EACI,OAAO,IAAP;EACJA,eAAe;EACf,OAAO,KAAP;AACH;;AAED,SAASX,UAAT,EAAqBM,aAArB,EAAoCI,YAApC"},"metadata":{},"sourceType":"module"}