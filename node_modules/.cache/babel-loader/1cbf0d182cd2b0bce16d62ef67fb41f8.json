{"ast":null,"code":"import { toArray } from './array';\nimport { isAutoFocusAllowedCached, isVisibleCached, notHiddenInput } from './is';\nimport { orderByTabIndex } from './tabOrder';\nimport { getFocusables, getParentAutofocusables } from './tabUtils';\n/**\r\n * given list of focusable elements keeps the ones user can interact with\r\n * @param nodes\r\n * @param visibilityCache\r\n */\n\nexport var filterFocusable = function filterFocusable(nodes, visibilityCache) {\n  return toArray(nodes).filter(function (node) {\n    return isVisibleCached(visibilityCache, node);\n  }).filter(function (node) {\n    return notHiddenInput(node);\n  });\n};\nexport var filterAutoFocusable = function filterAutoFocusable(nodes, cache) {\n  if (cache === void 0) {\n    cache = new Map();\n  }\n\n  return toArray(nodes).filter(function (node) {\n    return isAutoFocusAllowedCached(cache, node);\n  });\n};\n/**\r\n * only tabbable ones\r\n * (but with guards which would be ignored)\r\n */\n\nexport var getTabbableNodes = function getTabbableNodes(topNodes, visibilityCache, withGuards) {\n  return orderByTabIndex(filterFocusable(getFocusables(topNodes, withGuards), visibilityCache), true, withGuards);\n};\n/**\r\n * actually anything \"focusable\", not only tabbable\r\n * (without guards, as long as they are not expected to be focused)\r\n */\n\nexport var getAllTabbableNodes = function getAllTabbableNodes(topNodes, visibilityCache) {\n  return orderByTabIndex(filterFocusable(getFocusables(topNodes), visibilityCache), false);\n};\n/**\r\n * return list of nodes which are expected to be auto-focused\r\n * @param topNode\r\n * @param visibilityCache\r\n */\n\nexport var parentAutofocusables = function parentAutofocusables(topNode, visibilityCache) {\n  return filterFocusable(getParentAutofocusables(topNode), visibilityCache);\n};\n/*\r\n * Determines if element is contained in scope, including nested shadow DOMs\r\n */\n\nexport var contains = function contains(scope, element) {\n  return (scope.shadowRoot ? contains(scope.shadowRoot, element) : Object.getPrototypeOf(scope).contains.call(scope, element)) || toArray(scope.children).some(function (child) {\n    return contains(child, element);\n  });\n};","map":{"version":3,"names":["toArray","isAutoFocusAllowedCached","isVisibleCached","notHiddenInput","orderByTabIndex","getFocusables","getParentAutofocusables","filterFocusable","nodes","visibilityCache","filter","node","filterAutoFocusable","cache","Map","getTabbableNodes","topNodes","withGuards","getAllTabbableNodes","parentAutofocusables","topNode","contains","scope","element","shadowRoot","Object","getPrototypeOf","call","children","some","child"],"sources":["C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/focus-lock/dist/es2015/utils/DOMutils.js"],"sourcesContent":["import { toArray } from './array';\r\nimport { isAutoFocusAllowedCached, isVisibleCached, notHiddenInput } from './is';\r\nimport { orderByTabIndex } from './tabOrder';\r\nimport { getFocusables, getParentAutofocusables } from './tabUtils';\r\n/**\r\n * given list of focusable elements keeps the ones user can interact with\r\n * @param nodes\r\n * @param visibilityCache\r\n */\r\nexport var filterFocusable = function (nodes, visibilityCache) {\r\n    return toArray(nodes)\r\n        .filter(function (node) { return isVisibleCached(visibilityCache, node); })\r\n        .filter(function (node) { return notHiddenInput(node); });\r\n};\r\nexport var filterAutoFocusable = function (nodes, cache) {\r\n    if (cache === void 0) { cache = new Map(); }\r\n    return toArray(nodes).filter(function (node) { return isAutoFocusAllowedCached(cache, node); });\r\n};\r\n/**\r\n * only tabbable ones\r\n * (but with guards which would be ignored)\r\n */\r\nexport var getTabbableNodes = function (topNodes, visibilityCache, withGuards) {\r\n    return orderByTabIndex(filterFocusable(getFocusables(topNodes, withGuards), visibilityCache), true, withGuards);\r\n};\r\n/**\r\n * actually anything \"focusable\", not only tabbable\r\n * (without guards, as long as they are not expected to be focused)\r\n */\r\nexport var getAllTabbableNodes = function (topNodes, visibilityCache) {\r\n    return orderByTabIndex(filterFocusable(getFocusables(topNodes), visibilityCache), false);\r\n};\r\n/**\r\n * return list of nodes which are expected to be auto-focused\r\n * @param topNode\r\n * @param visibilityCache\r\n */\r\nexport var parentAutofocusables = function (topNode, visibilityCache) {\r\n    return filterFocusable(getParentAutofocusables(topNode), visibilityCache);\r\n};\r\n/*\r\n * Determines if element is contained in scope, including nested shadow DOMs\r\n */\r\nexport var contains = function (scope, element) {\r\n    return ((scope.shadowRoot\r\n        ? contains(scope.shadowRoot, element)\r\n        : Object.getPrototypeOf(scope).contains.call(scope, element)) ||\r\n        toArray(scope.children).some(function (child) { return contains(child, element); }));\r\n};\r\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,SAAxB;AACA,SAASC,wBAAT,EAAmCC,eAAnC,EAAoDC,cAApD,QAA0E,MAA1E;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,SAASC,aAAT,EAAwBC,uBAAxB,QAAuD,YAAvD;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,CAAUC,KAAV,EAAiBC,eAAjB,EAAkC;EAC3D,OAAOT,OAAO,CAACQ,KAAD,CAAP,CACFE,MADE,CACK,UAAUC,IAAV,EAAgB;IAAE,OAAOT,eAAe,CAACO,eAAD,EAAkBE,IAAlB,CAAtB;EAAgD,CADvE,EAEFD,MAFE,CAEK,UAAUC,IAAV,EAAgB;IAAE,OAAOR,cAAc,CAACQ,IAAD,CAArB;EAA8B,CAFrD,CAAP;AAGH,CAJM;AAKP,OAAO,IAAIC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAUJ,KAAV,EAAiBK,KAAjB,EAAwB;EACrD,IAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;IAAEA,KAAK,GAAG,IAAIC,GAAJ,EAAR;EAAoB;;EAC5C,OAAOd,OAAO,CAACQ,KAAD,CAAP,CAAeE,MAAf,CAAsB,UAAUC,IAAV,EAAgB;IAAE,OAAOV,wBAAwB,CAACY,KAAD,EAAQF,IAAR,CAA/B;EAA+C,CAAvF,CAAP;AACH,CAHM;AAIP;AACA;AACA;AACA;;AACA,OAAO,IAAII,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAUC,QAAV,EAAoBP,eAApB,EAAqCQ,UAArC,EAAiD;EAC3E,OAAOb,eAAe,CAACG,eAAe,CAACF,aAAa,CAACW,QAAD,EAAWC,UAAX,CAAd,EAAsCR,eAAtC,CAAhB,EAAwE,IAAxE,EAA8EQ,UAA9E,CAAtB;AACH,CAFM;AAGP;AACA;AACA;AACA;;AACA,OAAO,IAAIC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAUF,QAAV,EAAoBP,eAApB,EAAqC;EAClE,OAAOL,eAAe,CAACG,eAAe,CAACF,aAAa,CAACW,QAAD,CAAd,EAA0BP,eAA1B,CAAhB,EAA4D,KAA5D,CAAtB;AACH,CAFM;AAGP;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIU,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAUC,OAAV,EAAmBX,eAAnB,EAAoC;EAClE,OAAOF,eAAe,CAACD,uBAAuB,CAACc,OAAD,CAAxB,EAAmCX,eAAnC,CAAtB;AACH,CAFM;AAGP;AACA;AACA;;AACA,OAAO,IAAIY,QAAQ,GAAG,SAAXA,QAAW,CAAUC,KAAV,EAAiBC,OAAjB,EAA0B;EAC5C,OAAQ,CAACD,KAAK,CAACE,UAAN,GACHH,QAAQ,CAACC,KAAK,CAACE,UAAP,EAAmBD,OAAnB,CADL,GAEHE,MAAM,CAACC,cAAP,CAAsBJ,KAAtB,EAA6BD,QAA7B,CAAsCM,IAAtC,CAA2CL,KAA3C,EAAkDC,OAAlD,CAFE,KAGJvB,OAAO,CAACsB,KAAK,CAACM,QAAP,CAAP,CAAwBC,IAAxB,CAA6B,UAAUC,KAAV,EAAiB;IAAE,OAAOT,QAAQ,CAACS,KAAD,EAAQP,OAAR,CAAf;EAAkC,CAAlF,CAHJ;AAIH,CALM"},"metadata":{},"sourceType":"module"}