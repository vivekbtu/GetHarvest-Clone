{"ast":null,"code":"import { buildTransform, buildTransformOrigin } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { isTransformProp, isTransformOriginProp } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n  var _a;\n\n  const {\n    style,\n    vars,\n    transform,\n    transformKeys,\n    transformOrigin\n  } = state; // Empty the transformKeys array. As we're throwing out refs to its items\n  // this might not be as cheap as suspected. Maybe using the array as a buffer\n  // with a manual incrementation would be better.\n\n  transformKeys.length = 0; // Track whether we encounter any transform or transformOrigin values.\n\n  let hasTransform = false;\n  let hasTransformOrigin = false; // Does the calculated transform essentially equal \"none\"?\n\n  let transformIsNone = true;\n  /**\r\n   * Loop over all our latest animated values and decide whether to handle them\r\n   * as a style or CSS variable.\r\n   *\r\n   * Transforms and transform origins are kept seperately for further processing.\r\n   */\n\n  for (const key in latestValues) {\n    const value = latestValues[key];\n    /**\r\n     * If this is a CSS variable we don't do any further processing.\r\n     */\n\n    if (isCSSVariable(key)) {\n      vars[key] = value;\n      continue;\n    } // Convert the value to its default value type, ie 0 -> \"0px\"\n\n\n    const valueType = numberValueTypes[key];\n    const valueAsType = getValueAsType(value, valueType);\n\n    if (isTransformProp(key)) {\n      // If this is a transform, flag to enable further transform processing\n      hasTransform = true;\n      transform[key] = valueAsType;\n      transformKeys.push(key); // If we already know we have a non-default transform, early return\n\n      if (!transformIsNone) continue; // Otherwise check to see if this is a default transform\n\n      if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0)) transformIsNone = false;\n    } else if (isTransformOriginProp(key)) {\n      transformOrigin[key] = valueAsType; // If this is a transform origin, flag and enable further transform-origin processing\n\n      hasTransformOrigin = true;\n    } else {\n      style[key] = valueAsType;\n    }\n  }\n\n  if (hasTransform) {\n    style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n  } else if (transformTemplate) {\n    style.transform = transformTemplate({}, \"\");\n  } else if (!latestValues.transform && style.transform) {\n    style.transform = \"none\";\n  }\n\n  if (hasTransformOrigin) {\n    style.transformOrigin = buildTransformOrigin(transformOrigin);\n  }\n}\n\nexport { buildHTMLStyles };","map":{"version":3,"names":["buildTransform","buildTransformOrigin","isCSSVariable","isTransformProp","isTransformOriginProp","getValueAsType","numberValueTypes","buildHTMLStyles","state","latestValues","options","transformTemplate","_a","style","vars","transform","transformKeys","transformOrigin","length","hasTransform","hasTransformOrigin","transformIsNone","key","value","valueType","valueAsType","push","default"],"sources":["C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs"],"sourcesContent":["import { buildTransform, buildTransformOrigin } from './build-transform.mjs';\r\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\r\nimport { isTransformProp, isTransformOriginProp } from './transform.mjs';\r\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\r\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\r\n\r\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\r\n    var _a;\r\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\r\n    // Empty the transformKeys array. As we're throwing out refs to its items\r\n    // this might not be as cheap as suspected. Maybe using the array as a buffer\r\n    // with a manual incrementation would be better.\r\n    transformKeys.length = 0;\r\n    // Track whether we encounter any transform or transformOrigin values.\r\n    let hasTransform = false;\r\n    let hasTransformOrigin = false;\r\n    // Does the calculated transform essentially equal \"none\"?\r\n    let transformIsNone = true;\r\n    /**\r\n     * Loop over all our latest animated values and decide whether to handle them\r\n     * as a style or CSS variable.\r\n     *\r\n     * Transforms and transform origins are kept seperately for further processing.\r\n     */\r\n    for (const key in latestValues) {\r\n        const value = latestValues[key];\r\n        /**\r\n         * If this is a CSS variable we don't do any further processing.\r\n         */\r\n        if (isCSSVariable(key)) {\r\n            vars[key] = value;\r\n            continue;\r\n        }\r\n        // Convert the value to its default value type, ie 0 -> \"0px\"\r\n        const valueType = numberValueTypes[key];\r\n        const valueAsType = getValueAsType(value, valueType);\r\n        if (isTransformProp(key)) {\r\n            // If this is a transform, flag to enable further transform processing\r\n            hasTransform = true;\r\n            transform[key] = valueAsType;\r\n            transformKeys.push(key);\r\n            // If we already know we have a non-default transform, early return\r\n            if (!transformIsNone)\r\n                continue;\r\n            // Otherwise check to see if this is a default transform\r\n            if (value !== ((_a = valueType.default) !== null && _a !== void 0 ? _a : 0))\r\n                transformIsNone = false;\r\n        }\r\n        else if (isTransformOriginProp(key)) {\r\n            transformOrigin[key] = valueAsType;\r\n            // If this is a transform origin, flag and enable further transform-origin processing\r\n            hasTransformOrigin = true;\r\n        }\r\n        else {\r\n            style[key] = valueAsType;\r\n        }\r\n    }\r\n    if (hasTransform) {\r\n        style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\r\n    }\r\n    else if (transformTemplate) {\r\n        style.transform = transformTemplate({}, \"\");\r\n    }\r\n    else if (!latestValues.transform && style.transform) {\r\n        style.transform = \"none\";\r\n    }\r\n    if (hasTransformOrigin) {\r\n        style.transformOrigin = buildTransformOrigin(transformOrigin);\r\n    }\r\n}\r\n\r\nexport { buildHTMLStyles };\r\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,uBAArD;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAASC,eAAT,EAA0BC,qBAA1B,QAAuD,iBAAvD;AACA,SAASC,cAAT,QAA+B,uCAA/B;AACA,SAASC,gBAAT,QAAiC,kCAAjC;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,YAAhC,EAA8CC,OAA9C,EAAuDC,iBAAvD,EAA0E;EACtE,IAAIC,EAAJ;;EACA,MAAM;IAAEC,KAAF;IAASC,IAAT;IAAeC,SAAf;IAA0BC,aAA1B;IAAyCC;EAAzC,IAA6DT,KAAnE,CAFsE,CAGtE;EACA;EACA;;EACAQ,aAAa,CAACE,MAAd,GAAuB,CAAvB,CANsE,CAOtE;;EACA,IAAIC,YAAY,GAAG,KAAnB;EACA,IAAIC,kBAAkB,GAAG,KAAzB,CATsE,CAUtE;;EACA,IAAIC,eAAe,GAAG,IAAtB;EACA;AACJ;AACA;AACA;AACA;AACA;;EACI,KAAK,MAAMC,GAAX,IAAkBb,YAAlB,EAAgC;IAC5B,MAAMc,KAAK,GAAGd,YAAY,CAACa,GAAD,CAA1B;IACA;AACR;AACA;;IACQ,IAAIpB,aAAa,CAACoB,GAAD,CAAjB,EAAwB;MACpBR,IAAI,CAACQ,GAAD,CAAJ,GAAYC,KAAZ;MACA;IACH,CAR2B,CAS5B;;;IACA,MAAMC,SAAS,GAAGlB,gBAAgB,CAACgB,GAAD,CAAlC;IACA,MAAMG,WAAW,GAAGpB,cAAc,CAACkB,KAAD,EAAQC,SAAR,CAAlC;;IACA,IAAIrB,eAAe,CAACmB,GAAD,CAAnB,EAA0B;MACtB;MACAH,YAAY,GAAG,IAAf;MACAJ,SAAS,CAACO,GAAD,CAAT,GAAiBG,WAAjB;MACAT,aAAa,CAACU,IAAd,CAAmBJ,GAAnB,EAJsB,CAKtB;;MACA,IAAI,CAACD,eAAL,EACI,SAPkB,CAQtB;;MACA,IAAIE,KAAK,MAAM,CAACX,EAAE,GAAGY,SAAS,CAACG,OAAhB,MAA6B,IAA7B,IAAqCf,EAAE,KAAK,KAAK,CAAjD,GAAqDA,EAArD,GAA0D,CAAhE,CAAT,EACIS,eAAe,GAAG,KAAlB;IACP,CAXD,MAYK,IAAIjB,qBAAqB,CAACkB,GAAD,CAAzB,EAAgC;MACjCL,eAAe,CAACK,GAAD,CAAf,GAAuBG,WAAvB,CADiC,CAEjC;;MACAL,kBAAkB,GAAG,IAArB;IACH,CAJI,MAKA;MACDP,KAAK,CAACS,GAAD,CAAL,GAAaG,WAAb;IACH;EACJ;;EACD,IAAIN,YAAJ,EAAkB;IACdN,KAAK,CAACE,SAAN,GAAkBf,cAAc,CAACQ,KAAD,EAAQE,OAAR,EAAiBW,eAAjB,EAAkCV,iBAAlC,CAAhC;EACH,CAFD,MAGK,IAAIA,iBAAJ,EAAuB;IACxBE,KAAK,CAACE,SAAN,GAAkBJ,iBAAiB,CAAC,EAAD,EAAK,EAAL,CAAnC;EACH,CAFI,MAGA,IAAI,CAACF,YAAY,CAACM,SAAd,IAA2BF,KAAK,CAACE,SAArC,EAAgD;IACjDF,KAAK,CAACE,SAAN,GAAkB,MAAlB;EACH;;EACD,IAAIK,kBAAJ,EAAwB;IACpBP,KAAK,CAACI,eAAN,GAAwBhB,oBAAoB,CAACgB,eAAD,CAA5C;EACH;AACJ;;AAED,SAASV,eAAT"},"metadata":{},"sourceType":"module"}