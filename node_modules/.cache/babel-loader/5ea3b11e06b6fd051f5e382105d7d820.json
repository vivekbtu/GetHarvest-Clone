{"ast":null,"code":"import { __rest } from 'tslib';\nimport { complex } from 'style-value-types';\nimport { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './variants.mjs';\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\n\nfunction setMotionValue(visualElement, key, value) {\n  if (visualElement.hasValue(key)) {\n    visualElement.getValue(key).set(value);\n  } else {\n    visualElement.addValue(key, motionValue(value));\n  }\n}\n\nfunction setTarget(visualElement, definition) {\n  const resolved = resolveVariant(visualElement, definition);\n\n  let _a = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {},\n      {\n    transitionEnd = {},\n    transition = {}\n  } = _a,\n      target = __rest(_a, [\"transitionEnd\", \"transition\"]);\n\n  target = Object.assign(Object.assign({}, target), transitionEnd);\n\n  for (const key in target) {\n    const value = resolveFinalValueInKeyframes(target[key]);\n    setMotionValue(visualElement, key, value);\n  }\n}\n\nfunction setVariants(visualElement, variantLabels) {\n  const reversedLabels = [...variantLabels].reverse();\n  reversedLabels.forEach(key => {\n    var _a;\n\n    const variant = visualElement.getVariant(key);\n    variant && setTarget(visualElement, variant);\n    (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach(child => {\n      setVariants(child, variantLabels);\n    });\n  });\n}\n\nfunction setValues(visualElement, definition) {\n  if (Array.isArray(definition)) {\n    return setVariants(visualElement, definition);\n  } else if (typeof definition === \"string\") {\n    return setVariants(visualElement, [definition]);\n  } else {\n    setTarget(visualElement, definition);\n  }\n}\n\nfunction checkTargetForNewValues(visualElement, target, origin) {\n  var _a, _b, _c;\n\n  var _d;\n\n  const newValueKeys = Object.keys(target).filter(key => !visualElement.hasValue(key));\n  const numNewValues = newValueKeys.length;\n  if (!numNewValues) return;\n\n  for (let i = 0; i < numNewValues; i++) {\n    const key = newValueKeys[i];\n    const targetValue = target[key];\n    let value = null;\n    /**\n     * If the target is a series of keyframes, we can use the first value\n     * in the array. If this first value is null, we'll still need to read from the DOM.\n     */\n\n    if (Array.isArray(targetValue)) {\n      value = targetValue[0];\n    }\n    /**\n     * If the target isn't keyframes, or the first keyframe was null, we need to\n     * first check if an origin value was explicitly defined in the transition as \"from\",\n     * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n     */\n\n\n    if (value === null) {\n      value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n    }\n    /**\n     * If value is still undefined or null, ignore it. Preferably this would throw,\n     * but this was causing issues in Framer.\n     */\n\n\n    if (value === undefined || value === null) continue;\n\n    if (typeof value === \"string\" && (isNumericalString(value) || isZeroValueString(value))) {\n      // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n      value = parseFloat(value);\n    } else if (!findValueType(value) && complex.test(targetValue)) {\n      value = getAnimatableNone(key, targetValue);\n    }\n\n    visualElement.addValue(key, motionValue(value));\n    (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : _d[key] = value;\n    visualElement.setBaseTarget(key, value);\n  }\n}\n\nfunction getOriginFromTransition(key, transition) {\n  if (!transition) return;\n  const valueTransition = transition[key] || transition[\"default\"] || transition;\n  return valueTransition.from;\n}\n\nfunction getOrigin(target, transition, visualElement) {\n  var _a, _b;\n\n  const origin = {};\n\n  for (const key in target) {\n    origin[key] = (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();\n  }\n\n  return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };","map":{"version":3,"names":["__rest","complex","isNumericalString","isZeroValueString","resolveFinalValueInKeyframes","motionValue","getAnimatableNone","findValueType","resolveVariant","setMotionValue","visualElement","key","value","hasValue","getValue","set","addValue","setTarget","definition","resolved","_a","makeTargetAnimatable","transitionEnd","transition","target","Object","assign","setVariants","variantLabels","reversedLabels","reverse","forEach","variant","getVariant","variantChildren","child","setValues","Array","isArray","checkTargetForNewValues","origin","_b","_c","_d","newValueKeys","keys","filter","numNewValues","length","i","targetValue","readValue","undefined","parseFloat","test","setBaseTarget","getOriginFromTransition","valueTransition","from","getOrigin","get"],"sources":["C:/Users/bittu/Desktop/React-Unit4Project/premium-grade-140/node_modules/framer-motion/dist/es/render/utils/setters.mjs"],"sourcesContent":["import { __rest } from 'tslib';\nimport { complex } from 'style-value-types';\nimport { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let _a = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {}, { transitionEnd = {}, transition = {} } = _a, target = __rest(_a, [\"transitionEnd\", \"transition\"]);\n    target = Object.assign(Object.assign({}, target), transitionEnd);\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b, _c;\n    var _d;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        (_c = (_d = origin)[key]) !== null && _c !== void 0 ? _c : (_d[key] = value);\n        visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a, _b;\n    const origin = {};\n    for (const key in target) {\n        origin[key] =\n            (_a = getOriginFromTransition(key, transition)) !== null && _a !== void 0 ? _a : (_b = visualElement.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,iBAAT,QAAkC,qCAAlC;AACA,SAASC,iBAAT,QAAkC,sCAAlC;AACA,SAASC,4BAAT,QAA6C,+BAA7C;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,iBAAT,QAAkC,wCAAlC;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA;AACA;AACA;AACA;;AACA,SAASC,cAAT,CAAwBC,aAAxB,EAAuCC,GAAvC,EAA4CC,KAA5C,EAAmD;EAC/C,IAAIF,aAAa,CAACG,QAAd,CAAuBF,GAAvB,CAAJ,EAAiC;IAC7BD,aAAa,CAACI,QAAd,CAAuBH,GAAvB,EAA4BI,GAA5B,CAAgCH,KAAhC;EACH,CAFD,MAGK;IACDF,aAAa,CAACM,QAAd,CAAuBL,GAAvB,EAA4BN,WAAW,CAACO,KAAD,CAAvC;EACH;AACJ;;AACD,SAASK,SAAT,CAAmBP,aAAnB,EAAkCQ,UAAlC,EAA8C;EAC1C,MAAMC,QAAQ,GAAGX,cAAc,CAACE,aAAD,EAAgBQ,UAAhB,CAA/B;;EACA,IAAIE,EAAE,GAAGD,QAAQ,GAAGT,aAAa,CAACW,oBAAd,CAAmCF,QAAnC,EAA6C,KAA7C,CAAH,GAAyD,EAA1E;EAAA,IAA8E;IAAEG,aAAa,GAAG,EAAlB;IAAsBC,UAAU,GAAG;EAAnC,IAA0CH,EAAxH;EAAA,IAA4HI,MAAM,GAAGxB,MAAM,CAACoB,EAAD,EAAK,CAAC,eAAD,EAAkB,YAAlB,CAAL,CAA3I;;EACAI,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,MAAlB,CAAd,EAAyCF,aAAzC,CAAT;;EACA,KAAK,MAAMX,GAAX,IAAkBa,MAAlB,EAA0B;IACtB,MAAMZ,KAAK,GAAGR,4BAA4B,CAACoB,MAAM,CAACb,GAAD,CAAP,CAA1C;IACAF,cAAc,CAACC,aAAD,EAAgBC,GAAhB,EAAqBC,KAArB,CAAd;EACH;AACJ;;AACD,SAASe,WAAT,CAAqBjB,aAArB,EAAoCkB,aAApC,EAAmD;EAC/C,MAAMC,cAAc,GAAG,CAAC,GAAGD,aAAJ,EAAmBE,OAAnB,EAAvB;EACAD,cAAc,CAACE,OAAf,CAAwBpB,GAAD,IAAS;IAC5B,IAAIS,EAAJ;;IACA,MAAMY,OAAO,GAAGtB,aAAa,CAACuB,UAAd,CAAyBtB,GAAzB,CAAhB;IACAqB,OAAO,IAAIf,SAAS,CAACP,aAAD,EAAgBsB,OAAhB,CAApB;IACA,CAACZ,EAAE,GAAGV,aAAa,CAACwB,eAApB,MAAyC,IAAzC,IAAiDd,EAAE,KAAK,KAAK,CAA7D,GAAiE,KAAK,CAAtE,GAA0EA,EAAE,CAACW,OAAH,CAAYI,KAAD,IAAW;MAC5FR,WAAW,CAACQ,KAAD,EAAQP,aAAR,CAAX;IACH,CAFyE,CAA1E;EAGH,CAPD;AAQH;;AACD,SAASQ,SAAT,CAAmB1B,aAAnB,EAAkCQ,UAAlC,EAA8C;EAC1C,IAAImB,KAAK,CAACC,OAAN,CAAcpB,UAAd,CAAJ,EAA+B;IAC3B,OAAOS,WAAW,CAACjB,aAAD,EAAgBQ,UAAhB,CAAlB;EACH,CAFD,MAGK,IAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC;IACrC,OAAOS,WAAW,CAACjB,aAAD,EAAgB,CAACQ,UAAD,CAAhB,CAAlB;EACH,CAFI,MAGA;IACDD,SAAS,CAACP,aAAD,EAAgBQ,UAAhB,CAAT;EACH;AACJ;;AACD,SAASqB,uBAAT,CAAiC7B,aAAjC,EAAgDc,MAAhD,EAAwDgB,MAAxD,EAAgE;EAC5D,IAAIpB,EAAJ,EAAQqB,EAAR,EAAYC,EAAZ;;EACA,IAAIC,EAAJ;;EACA,MAAMC,YAAY,GAAGnB,MAAM,CAACoB,IAAP,CAAYrB,MAAZ,EAAoBsB,MAApB,CAA4BnC,GAAD,IAAS,CAACD,aAAa,CAACG,QAAd,CAAuBF,GAAvB,CAArC,CAArB;EACA,MAAMoC,YAAY,GAAGH,YAAY,CAACI,MAAlC;EACA,IAAI,CAACD,YAAL,EACI;;EACJ,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,YAApB,EAAkCE,CAAC,EAAnC,EAAuC;IACnC,MAAMtC,GAAG,GAAGiC,YAAY,CAACK,CAAD,CAAxB;IACA,MAAMC,WAAW,GAAG1B,MAAM,CAACb,GAAD,CAA1B;IACA,IAAIC,KAAK,GAAG,IAAZ;IACA;AACR;AACA;AACA;;IACQ,IAAIyB,KAAK,CAACC,OAAN,CAAcY,WAAd,CAAJ,EAAgC;MAC5BtC,KAAK,GAAGsC,WAAW,CAAC,CAAD,CAAnB;IACH;IACD;AACR;AACA;AACA;AACA;;;IACQ,IAAItC,KAAK,KAAK,IAAd,EAAoB;MAChBA,KAAK,GAAG,CAAC6B,EAAE,GAAG,CAACrB,EAAE,GAAGoB,MAAM,CAAC7B,GAAD,CAAZ,MAAuB,IAAvB,IAA+BS,EAAE,KAAK,KAAK,CAA3C,GAA+CA,EAA/C,GAAoDV,aAAa,CAACyC,SAAd,CAAwBxC,GAAxB,CAA1D,MAA4F,IAA5F,IAAoG8B,EAAE,KAAK,KAAK,CAAhH,GAAoHA,EAApH,GAAyHjB,MAAM,CAACb,GAAD,CAAvI;IACH;IACD;AACR;AACA;AACA;;;IACQ,IAAIC,KAAK,KAAKwC,SAAV,IAAuBxC,KAAK,KAAK,IAArC,EACI;;IACJ,IAAI,OAAOA,KAAP,KAAiB,QAAjB,KACCV,iBAAiB,CAACU,KAAD,CAAjB,IAA4BT,iBAAiB,CAACS,KAAD,CAD9C,CAAJ,EAC4D;MACxD;MACAA,KAAK,GAAGyC,UAAU,CAACzC,KAAD,CAAlB;IACH,CAJD,MAKK,IAAI,CAACL,aAAa,CAACK,KAAD,CAAd,IAAyBX,OAAO,CAACqD,IAAR,CAAaJ,WAAb,CAA7B,EAAwD;MACzDtC,KAAK,GAAGN,iBAAiB,CAACK,GAAD,EAAMuC,WAAN,CAAzB;IACH;;IACDxC,aAAa,CAACM,QAAd,CAAuBL,GAAvB,EAA4BN,WAAW,CAACO,KAAD,CAAvC;IACA,CAAC8B,EAAE,GAAG,CAACC,EAAE,GAAGH,MAAN,EAAc7B,GAAd,CAAN,MAA8B,IAA9B,IAAsC+B,EAAE,KAAK,KAAK,CAAlD,GAAsDA,EAAtD,GAA4DC,EAAE,CAAChC,GAAD,CAAF,GAAUC,KAAtE;IACAF,aAAa,CAAC6C,aAAd,CAA4B5C,GAA5B,EAAiCC,KAAjC;EACH;AACJ;;AACD,SAAS4C,uBAAT,CAAiC7C,GAAjC,EAAsCY,UAAtC,EAAkD;EAC9C,IAAI,CAACA,UAAL,EACI;EACJ,MAAMkC,eAAe,GAAGlC,UAAU,CAACZ,GAAD,CAAV,IAAmBY,UAAU,CAAC,SAAD,CAA7B,IAA4CA,UAApE;EACA,OAAOkC,eAAe,CAACC,IAAvB;AACH;;AACD,SAASC,SAAT,CAAmBnC,MAAnB,EAA2BD,UAA3B,EAAuCb,aAAvC,EAAsD;EAClD,IAAIU,EAAJ,EAAQqB,EAAR;;EACA,MAAMD,MAAM,GAAG,EAAf;;EACA,KAAK,MAAM7B,GAAX,IAAkBa,MAAlB,EAA0B;IACtBgB,MAAM,CAAC7B,GAAD,CAAN,GACI,CAACS,EAAE,GAAGoC,uBAAuB,CAAC7C,GAAD,EAAMY,UAAN,CAA7B,MAAoD,IAApD,IAA4DH,EAAE,KAAK,KAAK,CAAxE,GAA4EA,EAA5E,GAAiF,CAACqB,EAAE,GAAG/B,aAAa,CAACI,QAAd,CAAuBH,GAAvB,CAAN,MAAuC,IAAvC,IAA+C8B,EAAE,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,EAAE,CAACmB,GAAH,EAD7J;EAEH;;EACD,OAAOpB,MAAP;AACH;;AAED,SAASD,uBAAT,EAAkCoB,SAAlC,EAA6CH,uBAA7C,EAAsEvC,SAAtE,EAAiFmB,SAAjF"},"metadata":{},"sourceType":"module"}