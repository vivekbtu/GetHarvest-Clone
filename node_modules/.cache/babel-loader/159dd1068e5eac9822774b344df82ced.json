{"ast":null,"code":"import { __rest } from 'tslib';\nimport { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { checkIfControllingVariants, checkIfVariantNode, resolveVariantFromProps } from '../../render/utils/variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\n\nfunction makeState(_ref, props, context, presenceContext) {\n  var scrapeMotionValuesFromProps = _ref.scrapeMotionValuesFromProps,\n      createRenderState = _ref.createRenderState,\n      onMount = _ref.onMount;\n  var state = {\n    latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n    renderState: createRenderState()\n  };\n\n  if (onMount) {\n    state.mount = function (instance) {\n      return onMount(props, instance, state);\n    };\n  }\n\n  return state;\n}\n\nvar makeUseVisualState = function makeUseVisualState(config) {\n  return function (props, isStatic) {\n    var context = useContext(MotionContext);\n    var presenceContext = useContext(PresenceContext);\n    return isStatic ? makeState(config, props, context, presenceContext) : useConstant(function () {\n      return makeState(config, props, context, presenceContext);\n    });\n  };\n};\n\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n  var values = {};\n  var blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;\n  var motionValues = scrapeMotionValues(props);\n\n  for (var key in motionValues) {\n    values[key] = resolveMotionValue(motionValues[key]);\n  }\n\n  var initial = props.initial,\n      animate = props.animate;\n  var isControllingVariants = checkIfControllingVariants(props);\n  var isVariantNode = checkIfVariantNode(props);\n\n  if (context && isVariantNode && !isControllingVariants && props.inherit !== false) {\n    initial !== null && initial !== void 0 ? initial : initial = context.initial;\n    animate !== null && animate !== void 0 ? animate : animate = context.animate;\n  }\n\n  var initialAnimationIsBlocked = blockInitialAnimation || initial === false;\n  var variantToSet = initialAnimationIsBlocked ? animate : initial;\n\n  if (variantToSet && typeof variantToSet !== \"boolean\" && !isAnimationControls(variantToSet)) {\n    var list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n    list.forEach(function (definition) {\n      var resolved = resolveVariantFromProps(props, definition);\n      if (!resolved) return;\n\n      var transitionEnd = resolved.transitionEnd,\n          transition = resolved.transition,\n          target = __rest(resolved, [\"transitionEnd\", \"transition\"]);\n\n      for (var key in target) {\n        var valueTarget = target[key];\n\n        if (Array.isArray(valueTarget)) {\n          /**\r\n           * Take final keyframe if the initial animation is blocked because\r\n           * we want to initialise at the end of that blocked animation.\r\n           */\n          var index = initialAnimationIsBlocked ? valueTarget.length - 1 : 0;\n          valueTarget = valueTarget[index];\n        }\n\n        if (valueTarget !== null) {\n          values[key] = valueTarget;\n        }\n      }\n\n      for (var _key in transitionEnd) {\n        values[_key] = transitionEnd[_key];\n      }\n    });\n  }\n\n  return values;\n}\n\nexport { makeUseVisualState };","map":{"version":3,"names":["__rest","useContext","isAnimationControls","PresenceContext","checkIfControllingVariants","checkIfVariantNode","resolveVariantFromProps","useConstant","resolveMotionValue","MotionContext","makeState","props","context","presenceContext","scrapeMotionValuesFromProps","createRenderState","onMount","state","latestValues","makeLatestValues","renderState","mount","instance","makeUseVisualState","config","isStatic","scrapeMotionValues","values","blockInitialAnimation","initial","motionValues","key","animate","isControllingVariants","isVariantNode","inherit","initialAnimationIsBlocked","variantToSet","list","Array","isArray","forEach","definition","resolved","transitionEnd","transition","target","valueTarget","index","length"],"sources":["C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs"],"sourcesContent":["import { __rest } from 'tslib';\r\nimport { useContext } from 'react';\r\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\r\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\r\nimport { checkIfControllingVariants, checkIfVariantNode, resolveVariantFromProps } from '../../render/utils/variants.mjs';\r\nimport { useConstant } from '../../utils/use-constant.mjs';\r\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\r\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\r\n\r\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\r\n    const state = {\r\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\r\n        renderState: createRenderState(),\r\n    };\r\n    if (onMount) {\r\n        state.mount = (instance) => onMount(props, instance, state);\r\n    }\r\n    return state;\r\n}\r\nconst makeUseVisualState = (config) => (props, isStatic) => {\r\n    const context = useContext(MotionContext);\r\n    const presenceContext = useContext(PresenceContext);\r\n    return isStatic\r\n        ? makeState(config, props, context, presenceContext)\r\n        : useConstant(() => makeState(config, props, context, presenceContext));\r\n};\r\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\r\n    const values = {};\r\n    const blockInitialAnimation = (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false;\r\n    const motionValues = scrapeMotionValues(props);\r\n    for (const key in motionValues) {\r\n        values[key] = resolveMotionValue(motionValues[key]);\r\n    }\r\n    let { initial, animate } = props;\r\n    const isControllingVariants = checkIfControllingVariants(props);\r\n    const isVariantNode = checkIfVariantNode(props);\r\n    if (context &&\r\n        isVariantNode &&\r\n        !isControllingVariants &&\r\n        props.inherit !== false) {\r\n        initial !== null && initial !== void 0 ? initial : (initial = context.initial);\r\n        animate !== null && animate !== void 0 ? animate : (animate = context.animate);\r\n    }\r\n    const initialAnimationIsBlocked = blockInitialAnimation || initial === false;\r\n    const variantToSet = initialAnimationIsBlocked ? animate : initial;\r\n    if (variantToSet &&\r\n        typeof variantToSet !== \"boolean\" &&\r\n        !isAnimationControls(variantToSet)) {\r\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\r\n        list.forEach((definition) => {\r\n            const resolved = resolveVariantFromProps(props, definition);\r\n            if (!resolved)\r\n                return;\r\n            const { transitionEnd, transition } = resolved, target = __rest(resolved, [\"transitionEnd\", \"transition\"]);\r\n            for (const key in target) {\r\n                let valueTarget = target[key];\r\n                if (Array.isArray(valueTarget)) {\r\n                    /**\r\n                     * Take final keyframe if the initial animation is blocked because\r\n                     * we want to initialise at the end of that blocked animation.\r\n                     */\r\n                    const index = initialAnimationIsBlocked\r\n                        ? valueTarget.length - 1\r\n                        : 0;\r\n                    valueTarget = valueTarget[index];\r\n                }\r\n                if (valueTarget !== null) {\r\n                    values[key] = valueTarget;\r\n                }\r\n            }\r\n            for (const key in transitionEnd)\r\n                values[key] = transitionEnd[key];\r\n        });\r\n    }\r\n    return values;\r\n}\r\n\r\nexport { makeUseVisualState };\r\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,mBAAT,QAAoC,iDAApC;AACA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAASC,0BAAT,EAAqCC,kBAArC,EAAyDC,uBAAzD,QAAwF,iCAAxF;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,kBAAT,QAAmC,4CAAnC;AACA,SAASC,aAAT,QAA8B,uCAA9B;;AAEA,SAASC,SAAT,OAAiFC,KAAjF,EAAwFC,OAAxF,EAAiGC,eAAjG,EAAkH;EAAA,IAA7FC,2BAA6F,QAA7FA,2BAA6F;EAAA,IAAhEC,iBAAgE,QAAhEA,iBAAgE;EAAA,IAA7CC,OAA6C,QAA7CA,OAA6C;EAC9G,IAAMC,KAAK,GAAG;IACVC,YAAY,EAAEC,gBAAgB,CAACR,KAAD,EAAQC,OAAR,EAAiBC,eAAjB,EAAkCC,2BAAlC,CADpB;IAEVM,WAAW,EAAEL,iBAAiB;EAFpB,CAAd;;EAIA,IAAIC,OAAJ,EAAa;IACTC,KAAK,CAACI,KAAN,GAAc,UAACC,QAAD;MAAA,OAAcN,OAAO,CAACL,KAAD,EAAQW,QAAR,EAAkBL,KAAlB,CAArB;IAAA,CAAd;EACH;;EACD,OAAOA,KAAP;AACH;;AACD,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,MAAD;EAAA,OAAY,UAACb,KAAD,EAAQc,QAAR,EAAqB;IACxD,IAAMb,OAAO,GAAGX,UAAU,CAACQ,aAAD,CAA1B;IACA,IAAMI,eAAe,GAAGZ,UAAU,CAACE,eAAD,CAAlC;IACA,OAAOsB,QAAQ,GACTf,SAAS,CAACc,MAAD,EAASb,KAAT,EAAgBC,OAAhB,EAAyBC,eAAzB,CADA,GAETN,WAAW,CAAC;MAAA,OAAMG,SAAS,CAACc,MAAD,EAASb,KAAT,EAAgBC,OAAhB,EAAyBC,eAAzB,CAAf;IAAA,CAAD,CAFjB;EAGH,CAN0B;AAAA,CAA3B;;AAOA,SAASM,gBAAT,CAA0BR,KAA1B,EAAiCC,OAAjC,EAA0CC,eAA1C,EAA2Da,kBAA3D,EAA+E;EAC3E,IAAMC,MAAM,GAAG,EAAf;EACA,IAAMC,qBAAqB,GAAG,CAACf,eAAe,KAAK,IAApB,IAA4BA,eAAe,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkEA,eAAe,CAACgB,OAAnF,MAAgG,KAA9H;EACA,IAAMC,YAAY,GAAGJ,kBAAkB,CAACf,KAAD,CAAvC;;EACA,KAAK,IAAMoB,GAAX,IAAkBD,YAAlB,EAAgC;IAC5BH,MAAM,CAACI,GAAD,CAAN,GAAcvB,kBAAkB,CAACsB,YAAY,CAACC,GAAD,CAAb,CAAhC;EACH;;EACD,IAAMF,OAAN,GAA2BlB,KAA3B,CAAMkB,OAAN;EAAA,IAAeG,OAAf,GAA2BrB,KAA3B,CAAeqB,OAAf;EACA,IAAMC,qBAAqB,GAAG7B,0BAA0B,CAACO,KAAD,CAAxD;EACA,IAAMuB,aAAa,GAAG7B,kBAAkB,CAACM,KAAD,CAAxC;;EACA,IAAIC,OAAO,IACPsB,aADA,IAEA,CAACD,qBAFD,IAGAtB,KAAK,CAACwB,OAAN,KAAkB,KAHtB,EAG6B;IACzBN,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyCA,OAAzC,GAAoDA,OAAO,GAAGjB,OAAO,CAACiB,OAAtE;IACAG,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyCA,OAAzC,GAAoDA,OAAO,GAAGpB,OAAO,CAACoB,OAAtE;EACH;;EACD,IAAMI,yBAAyB,GAAGR,qBAAqB,IAAIC,OAAO,KAAK,KAAvE;EACA,IAAMQ,YAAY,GAAGD,yBAAyB,GAAGJ,OAAH,GAAaH,OAA3D;;EACA,IAAIQ,YAAY,IACZ,OAAOA,YAAP,KAAwB,SADxB,IAEA,CAACnC,mBAAmB,CAACmC,YAAD,CAFxB,EAEwC;IACpC,IAAMC,IAAI,GAAGC,KAAK,CAACC,OAAN,CAAcH,YAAd,IAA8BA,YAA9B,GAA6C,CAACA,YAAD,CAA1D;IACAC,IAAI,CAACG,OAAL,CAAa,UAACC,UAAD,EAAgB;MACzB,IAAMC,QAAQ,GAAGrC,uBAAuB,CAACK,KAAD,EAAQ+B,UAAR,CAAxC;MACA,IAAI,CAACC,QAAL,EACI;;MACJ,IAAQC,aAAR,GAAsCD,QAAtC,CAAQC,aAAR;MAAA,IAAuBC,UAAvB,GAAsCF,QAAtC,CAAuBE,UAAvB;MAAA,IAAgDC,MAAhD,GAAyD9C,MAAM,CAAC2C,QAAD,EAAW,CAAC,eAAD,EAAkB,YAAlB,CAAX,CAA/D;;MACA,KAAK,IAAMZ,GAAX,IAAkBe,MAAlB,EAA0B;QACtB,IAAIC,WAAW,GAAGD,MAAM,CAACf,GAAD,CAAxB;;QACA,IAAIQ,KAAK,CAACC,OAAN,CAAcO,WAAd,CAAJ,EAAgC;UAC5B;AACpB;AACA;AACA;UACoB,IAAMC,KAAK,GAAGZ,yBAAyB,GACjCW,WAAW,CAACE,MAAZ,GAAqB,CADY,GAEjC,CAFN;UAGAF,WAAW,GAAGA,WAAW,CAACC,KAAD,CAAzB;QACH;;QACD,IAAID,WAAW,KAAK,IAApB,EAA0B;UACtBpB,MAAM,CAACI,GAAD,CAAN,GAAcgB,WAAd;QACH;MACJ;;MACD,KAAK,IAAMhB,IAAX,IAAkBa,aAAlB;QACIjB,MAAM,CAACI,IAAD,CAAN,GAAca,aAAa,CAACb,IAAD,CAA3B;MADJ;IAEH,CAvBD;EAwBH;;EACD,OAAOJ,MAAP;AACH;;AAED,SAASJ,kBAAT"},"metadata":{},"sourceType":"module"}