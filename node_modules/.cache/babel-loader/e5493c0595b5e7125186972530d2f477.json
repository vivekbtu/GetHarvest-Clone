{"ast":null,"code":"// These helper fns are modified versions of the amazing rebass library\n// https://github.com/rebassjs/rebass/blob/master/packages/layout/src/index.js\nvar px = function px(n) {\n  return typeof n === \"number\" ? n + \"px\" : n;\n};\n\nexport var widthToColumns = function widthToColumns(width) {\n  if (Array.isArray(width)) {\n    return width.map(widthToColumns);\n  }\n\n  if (width !== null && typeof width === \"object\" && Object.keys(width).length > 0) {\n    var acc = {};\n\n    for (var key in width) {\n      acc[key] = \"repeat(auto-fit, minmax(\" + px(width[key]) + \", 1fr))\";\n    }\n\n    return acc;\n  }\n\n  if (width != null) {\n    return \"repeat(auto-fit, minmax(\" + px(width) + \", 1fr))\";\n  }\n\n  return null;\n};\nexport var countToColumns = function countToColumns(count) {\n  if (Array.isArray(count)) {\n    return count.map(countToColumns);\n  }\n\n  if (count !== null && typeof count === \"object\" && Object.keys(count).length > 0) {\n    var acc = {};\n\n    for (var key in count) {\n      acc[key] = \"repeat(\" + count[key] + \", 1fr)\";\n    }\n\n    return acc;\n  }\n\n  if (count != null) {\n    return \"repeat(\" + count + \", 1fr)\";\n  }\n\n  return null;\n};","map":{"version":3,"names":["px","n","widthToColumns","width","Array","isArray","map","Object","keys","length","acc","key","countToColumns","count"],"sources":["C:/Users/bittu/Desktop/Unit4Project-React/my-project/node_modules/@chakra-ui/core/dist/es/SimpleGrid/utils.js"],"sourcesContent":["// These helper fns are modified versions of the amazing rebass library\n// https://github.com/rebassjs/rebass/blob/master/packages/layout/src/index.js\nvar px = function px(n) {\n  return typeof n === \"number\" ? n + \"px\" : n;\n};\n\nexport var widthToColumns = function widthToColumns(width) {\n  if (Array.isArray(width)) {\n    return width.map(widthToColumns);\n  }\n\n  if (width !== null && typeof width === \"object\" && Object.keys(width).length > 0) {\n    var acc = {};\n\n    for (var key in width) {\n      acc[key] = \"repeat(auto-fit, minmax(\" + px(width[key]) + \", 1fr))\";\n    }\n\n    return acc;\n  }\n\n  if (width != null) {\n    return \"repeat(auto-fit, minmax(\" + px(width) + \", 1fr))\";\n  }\n\n  return null;\n};\nexport var countToColumns = function countToColumns(count) {\n  if (Array.isArray(count)) {\n    return count.map(countToColumns);\n  }\n\n  if (count !== null && typeof count === \"object\" && Object.keys(count).length > 0) {\n    var acc = {};\n\n    for (var key in count) {\n      acc[key] = \"repeat(\" + count[key] + \", 1fr)\";\n    }\n\n    return acc;\n  }\n\n  if (count != null) {\n    return \"repeat(\" + count + \", 1fr)\";\n  }\n\n  return null;\n};"],"mappings":"AAAA;AACA;AACA,IAAIA,EAAE,GAAG,SAASA,EAAT,CAAYC,CAAZ,EAAe;EACtB,OAAO,OAAOA,CAAP,KAAa,QAAb,GAAwBA,CAAC,GAAG,IAA5B,GAAmCA,CAA1C;AACD,CAFD;;AAIA,OAAO,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;EACzD,IAAIC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;IACxB,OAAOA,KAAK,CAACG,GAAN,CAAUJ,cAAV,CAAP;EACD;;EAED,IAAIC,KAAK,KAAK,IAAV,IAAkB,OAAOA,KAAP,KAAiB,QAAnC,IAA+CI,MAAM,CAACC,IAAP,CAAYL,KAAZ,EAAmBM,MAAnB,GAA4B,CAA/E,EAAkF;IAChF,IAAIC,GAAG,GAAG,EAAV;;IAEA,KAAK,IAAIC,GAAT,IAAgBR,KAAhB,EAAuB;MACrBO,GAAG,CAACC,GAAD,CAAH,GAAW,6BAA6BX,EAAE,CAACG,KAAK,CAACQ,GAAD,CAAN,CAA/B,GAA8C,SAAzD;IACD;;IAED,OAAOD,GAAP;EACD;;EAED,IAAIP,KAAK,IAAI,IAAb,EAAmB;IACjB,OAAO,6BAA6BH,EAAE,CAACG,KAAD,CAA/B,GAAyC,SAAhD;EACD;;EAED,OAAO,IAAP;AACD,CApBM;AAqBP,OAAO,IAAIS,cAAc,GAAG,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;EACzD,IAAIT,KAAK,CAACC,OAAN,CAAcQ,KAAd,CAAJ,EAA0B;IACxB,OAAOA,KAAK,CAACP,GAAN,CAAUM,cAAV,CAAP;EACD;;EAED,IAAIC,KAAK,KAAK,IAAV,IAAkB,OAAOA,KAAP,KAAiB,QAAnC,IAA+CN,MAAM,CAACC,IAAP,CAAYK,KAAZ,EAAmBJ,MAAnB,GAA4B,CAA/E,EAAkF;IAChF,IAAIC,GAAG,GAAG,EAAV;;IAEA,KAAK,IAAIC,GAAT,IAAgBE,KAAhB,EAAuB;MACrBH,GAAG,CAACC,GAAD,CAAH,GAAW,YAAYE,KAAK,CAACF,GAAD,CAAjB,GAAyB,QAApC;IACD;;IAED,OAAOD,GAAP;EACD;;EAED,IAAIG,KAAK,IAAI,IAAb,EAAmB;IACjB,OAAO,YAAYA,KAAZ,GAAoB,QAA3B;EACD;;EAED,OAAO,IAAP;AACD,CApBM"},"metadata":{},"sourceType":"module"}