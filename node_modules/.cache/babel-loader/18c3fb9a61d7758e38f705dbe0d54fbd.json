{"ast":null,"code":"import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n/**\r\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\r\n *\r\n * TODO: Remove and move to library\r\n */\n\nfunction resolveMotionValue(value) {\n  var unwrappedValue = isMotionValue(value) ? value.get() : value;\n  return isCustomValue(unwrappedValue) ? unwrappedValue.toValue() : unwrappedValue;\n}\n\nexport { resolveMotionValue };","map":{"version":3,"names":["isCustomValue","isMotionValue","resolveMotionValue","value","unwrappedValue","get","toValue"],"sources":["C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs"],"sourcesContent":["import { isCustomValue } from '../../utils/resolve-value.mjs';\r\nimport { isMotionValue } from './is-motion-value.mjs';\r\n\r\n/**\r\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\r\n *\r\n * TODO: Remove and move to library\r\n */\r\nfunction resolveMotionValue(value) {\r\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\r\n    return isCustomValue(unwrappedValue)\r\n        ? unwrappedValue.toValue()\r\n        : unwrappedValue;\r\n}\r\n\r\nexport { resolveMotionValue };\r\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,+BAA9B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;EAC/B,IAAMC,cAAc,GAAGH,aAAa,CAACE,KAAD,CAAb,GAAuBA,KAAK,CAACE,GAAN,EAAvB,GAAqCF,KAA5D;EACA,OAAOH,aAAa,CAACI,cAAD,CAAb,GACDA,cAAc,CAACE,OAAf,EADC,GAEDF,cAFN;AAGH;;AAED,SAASF,kBAAT"},"metadata":{},"sourceType":"module"}