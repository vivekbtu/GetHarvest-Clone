{"ast":null,"code":"import { __rest } from 'tslib';\nimport { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n/**\r\n * Build SVG visual attrbutes, like cx and style.transform\r\n */\n\nfunction buildSVGAttrs(state, _a, options, transformTemplate) {\n  var {\n    attrX,\n    attrY,\n    originX,\n    originY,\n    pathLength,\n    pathSpacing = 1,\n    pathOffset = 0\n  } = _a,\n      // This is object creation, which we try to avoid per-frame.\n  latest = __rest(_a, [\"attrX\", \"attrY\", \"originX\", \"originY\", \"pathLength\", \"pathSpacing\", \"pathOffset\"]);\n\n  buildHTMLStyles(state, latest, options, transformTemplate);\n  state.attrs = state.style;\n  state.style = {};\n  const {\n    attrs,\n    style,\n    dimensions\n  } = state;\n  /**\r\n   * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\r\n   * and copy it into style.\r\n   */\n\n  if (attrs.transform) {\n    if (dimensions) style.transform = attrs.transform;\n    delete attrs.transform;\n  } // Parse transformOrigin\n\n\n  if (dimensions && (originX !== undefined || originY !== undefined || style.transform)) {\n    style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n  } // Treat x/y not as shortcuts but as actual attributes\n\n\n  if (attrX !== undefined) attrs.x = attrX;\n  if (attrY !== undefined) attrs.y = attrY; // Build SVG path if one has been defined\n\n  if (pathLength !== undefined) {\n    buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n  }\n}\n\nexport { buildSVGAttrs };","map":{"version":3,"names":["__rest","buildHTMLStyles","calcSVGTransformOrigin","buildSVGPath","buildSVGAttrs","state","_a","options","transformTemplate","attrX","attrY","originX","originY","pathLength","pathSpacing","pathOffset","latest","attrs","style","dimensions","transform","undefined","transformOrigin","x","y"],"sources":["C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs"],"sourcesContent":["import { __rest } from 'tslib';\r\nimport { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\r\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\r\nimport { buildSVGPath } from './path.mjs';\r\n\r\n/**\r\n * Build SVG visual attrbutes, like cx and style.transform\r\n */\r\nfunction buildSVGAttrs(state, _a, options, transformTemplate) {\r\n    var { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0 } = _a, \r\n    // This is object creation, which we try to avoid per-frame.\r\n    latest = __rest(_a, [\"attrX\", \"attrY\", \"originX\", \"originY\", \"pathLength\", \"pathSpacing\", \"pathOffset\"]);\r\n    buildHTMLStyles(state, latest, options, transformTemplate);\r\n    state.attrs = state.style;\r\n    state.style = {};\r\n    const { attrs, style, dimensions } = state;\r\n    /**\r\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\r\n     * and copy it into style.\r\n     */\r\n    if (attrs.transform) {\r\n        if (dimensions)\r\n            style.transform = attrs.transform;\r\n        delete attrs.transform;\r\n    }\r\n    // Parse transformOrigin\r\n    if (dimensions &&\r\n        (originX !== undefined || originY !== undefined || style.transform)) {\r\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\r\n    }\r\n    // Treat x/y not as shortcuts but as actual attributes\r\n    if (attrX !== undefined)\r\n        attrs.x = attrX;\r\n    if (attrY !== undefined)\r\n        attrs.y = attrY;\r\n    // Build SVG path if one has been defined\r\n    if (pathLength !== undefined) {\r\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\r\n    }\r\n}\r\n\r\nexport { buildSVGAttrs };\r\n"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAASC,sBAAT,QAAuC,wBAAvC;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA;AACA;AACA;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,EAA9B,EAAkCC,OAAlC,EAA2CC,iBAA3C,EAA8D;EAC1D,IAAI;IAAEC,KAAF;IAASC,KAAT;IAAgBC,OAAhB;IAAyBC,OAAzB;IAAkCC,UAAlC;IAA8CC,WAAW,GAAG,CAA5D;IAA+DC,UAAU,GAAG;EAA5E,IAAkFT,EAAtF;EAAA,IACA;EACAU,MAAM,GAAGhB,MAAM,CAACM,EAAD,EAAK,CAAC,OAAD,EAAU,OAAV,EAAmB,SAAnB,EAA8B,SAA9B,EAAyC,YAAzC,EAAuD,aAAvD,EAAsE,YAAtE,CAAL,CAFf;;EAGAL,eAAe,CAACI,KAAD,EAAQW,MAAR,EAAgBT,OAAhB,EAAyBC,iBAAzB,CAAf;EACAH,KAAK,CAACY,KAAN,GAAcZ,KAAK,CAACa,KAApB;EACAb,KAAK,CAACa,KAAN,GAAc,EAAd;EACA,MAAM;IAAED,KAAF;IAASC,KAAT;IAAgBC;EAAhB,IAA+Bd,KAArC;EACA;AACJ;AACA;AACA;;EACI,IAAIY,KAAK,CAACG,SAAV,EAAqB;IACjB,IAAID,UAAJ,EACID,KAAK,CAACE,SAAN,GAAkBH,KAAK,CAACG,SAAxB;IACJ,OAAOH,KAAK,CAACG,SAAb;EACH,CAhByD,CAiB1D;;;EACA,IAAID,UAAU,KACTR,OAAO,KAAKU,SAAZ,IAAyBT,OAAO,KAAKS,SAArC,IAAkDH,KAAK,CAACE,SAD/C,CAAd,EACyE;IACrEF,KAAK,CAACI,eAAN,GAAwBpB,sBAAsB,CAACiB,UAAD,EAAaR,OAAO,KAAKU,SAAZ,GAAwBV,OAAxB,GAAkC,GAA/C,EAAoDC,OAAO,KAAKS,SAAZ,GAAwBT,OAAxB,GAAkC,GAAtF,CAA9C;EACH,CArByD,CAsB1D;;;EACA,IAAIH,KAAK,KAAKY,SAAd,EACIJ,KAAK,CAACM,CAAN,GAAUd,KAAV;EACJ,IAAIC,KAAK,KAAKW,SAAd,EACIJ,KAAK,CAACO,CAAN,GAAUd,KAAV,CA1BsD,CA2B1D;;EACA,IAAIG,UAAU,KAAKQ,SAAnB,EAA8B;IAC1BlB,YAAY,CAACc,KAAD,EAAQJ,UAAR,EAAoBC,WAApB,EAAiCC,UAAjC,EAA6C,KAA7C,CAAZ;EACH;AACJ;;AAED,SAASX,aAAT"},"metadata":{},"sourceType":"module"}