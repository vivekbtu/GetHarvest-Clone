{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n      html {\\n        line-height: 1.5;\\n        color: \", \";\\n        background-color: \", \";\\n      }\\n\\n      /**\\n      * Allow adding a border to an element by just adding a border-width.\\n      */\\n\\n      *,\\n      *::before,\\n      *::after {\\n        border-width: 0;\\n        border-style: solid;\\n        border-color: \", \";\\n      }\\n\\n      input:-ms-input-placeholder,\\n      textarea:-ms-input-placeholder {\\n        color: \", \";\\n      }\\n\\n      input::-ms-input-placeholder,\\n      textarea::-ms-input-placeholder {\\n        color: \", \";\\n      }\\n\\n      input::placeholder,\\n      textarea::placeholder {\\n        color: \", \";\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/** @jsx jsx */\n\n\nimport { jsx, Global, css } from \"@emotion/core\";\nimport { useColorMode } from \"../ColorModeProvider\";\nimport preflight from \"./preflight\";\n\nvar defaultConfig = function defaultConfig(theme) {\n  return {\n    light: {\n      color: theme.colors.gray[800],\n      bg: undefined,\n      borderColor: theme.colors.gray[200],\n      placeholderColor: theme.colors.gray[400]\n    },\n    dark: {\n      color: theme.colors.whiteAlpha[900],\n      bg: theme.colors.gray[800],\n      borderColor: theme.colors.whiteAlpha[300],\n      placeholderColor: theme.colors.whiteAlpha[400]\n    }\n  };\n};\n\nvar CSSReset = function CSSReset(_ref) {\n  var config = _ref.config;\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var configCSS = function configCSS(theme) {\n    var _defaultConfig = defaultConfig(theme);\n\n    var _config = config ? config(theme, _defaultConfig) : defaultConfig(theme);\n\n    var _config$colorMode = _config[colorMode],\n        color = _config$colorMode.color,\n        bg = _config$colorMode.bg,\n        borderColor = _config$colorMode.borderColor,\n        placeholderColor = _config$colorMode.placeholderColor;\n    return css(_templateObject(), color, bg, borderColor, placeholderColor, placeholderColor, placeholderColor);\n  };\n\n  return jsx(Global, {\n    styles: function styles(theme) {\n      return css([preflight(theme), configCSS(theme)]);\n    }\n  });\n};\n\nexport default CSSReset;","map":{"version":3,"names":["_taggedTemplateLiteralLoose","_templateObject","data","jsx","Global","css","useColorMode","preflight","defaultConfig","theme","light","color","colors","gray","bg","undefined","borderColor","placeholderColor","dark","whiteAlpha","CSSReset","_ref","config","_useColorMode","colorMode","configCSS","_defaultConfig","_config","_config$colorMode","styles"],"sources":["C:/Users/bittu/Desktop/Unit4Project-React/my-project/node_modules/@chakra-ui/core/dist/es/CSSReset/index.js"],"sourcesContent":["import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n      html {\\n        line-height: 1.5;\\n        color: \", \";\\n        background-color: \", \";\\n      }\\n\\n      /**\\n      * Allow adding a border to an element by just adding a border-width.\\n      */\\n\\n      *,\\n      *::before,\\n      *::after {\\n        border-width: 0;\\n        border-style: solid;\\n        border-color: \", \";\\n      }\\n\\n      input:-ms-input-placeholder,\\n      textarea:-ms-input-placeholder {\\n        color: \", \";\\n      }\\n\\n      input::-ms-input-placeholder,\\n      textarea::-ms-input-placeholder {\\n        color: \", \";\\n      }\\n\\n      input::placeholder,\\n      textarea::placeholder {\\n        color: \", \";\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx */\nimport { jsx, Global, css } from \"@emotion/core\";\nimport { useColorMode } from \"../ColorModeProvider\";\nimport preflight from \"./preflight\";\n\nvar defaultConfig = function defaultConfig(theme) {\n  return {\n    light: {\n      color: theme.colors.gray[800],\n      bg: undefined,\n      borderColor: theme.colors.gray[200],\n      placeholderColor: theme.colors.gray[400]\n    },\n    dark: {\n      color: theme.colors.whiteAlpha[900],\n      bg: theme.colors.gray[800],\n      borderColor: theme.colors.whiteAlpha[300],\n      placeholderColor: theme.colors.whiteAlpha[400]\n    }\n  };\n};\n\nvar CSSReset = function CSSReset(_ref) {\n  var config = _ref.config;\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var configCSS = function configCSS(theme) {\n    var _defaultConfig = defaultConfig(theme);\n\n    var _config = config ? config(theme, _defaultConfig) : defaultConfig(theme);\n\n    var _config$colorMode = _config[colorMode],\n        color = _config$colorMode.color,\n        bg = _config$colorMode.bg,\n        borderColor = _config$colorMode.borderColor,\n        placeholderColor = _config$colorMode.placeholderColor;\n    return css(_templateObject(), color, bg, borderColor, placeholderColor, placeholderColor, placeholderColor);\n  };\n\n  return jsx(Global, {\n    styles: function styles(theme) {\n      return css([preflight(theme), configCSS(theme)]);\n    }\n  });\n};\n\nexport default CSSReset;"],"mappings":"AAAA,OAAOA,2BAAP,MAAwC,mDAAxC;;AAEA,SAASC,eAAT,GAA2B;EACzB,IAAIC,IAAI,GAAGF,2BAA2B,CAAC,CAAC,4DAAD,EAA+D,+BAA/D,EAAgG,+OAAhG,EAAiV,2GAAjV,EAA8b,6GAA9b,EAA6iB,yFAA7iB,EAAwoB,kBAAxoB,CAAD,CAAtC;;EAEAC,eAAe,GAAG,SAASA,eAAT,GAA2B;IAC3C,OAAOC,IAAP;EACD,CAFD;;EAIA,OAAOA,IAAP;AACD;AAED;;;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,GAAtB,QAAiC,eAAjC;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;EAChD,OAAO;IACLC,KAAK,EAAE;MACLC,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaC,IAAb,CAAkB,GAAlB,CADF;MAELC,EAAE,EAAEC,SAFC;MAGLC,WAAW,EAAEP,KAAK,CAACG,MAAN,CAAaC,IAAb,CAAkB,GAAlB,CAHR;MAILI,gBAAgB,EAAER,KAAK,CAACG,MAAN,CAAaC,IAAb,CAAkB,GAAlB;IAJb,CADF;IAOLK,IAAI,EAAE;MACJP,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaO,UAAb,CAAwB,GAAxB,CADH;MAEJL,EAAE,EAAEL,KAAK,CAACG,MAAN,CAAaC,IAAb,CAAkB,GAAlB,CAFA;MAGJG,WAAW,EAAEP,KAAK,CAACG,MAAN,CAAaO,UAAb,CAAwB,GAAxB,CAHT;MAIJF,gBAAgB,EAAER,KAAK,CAACG,MAAN,CAAaO,UAAb,CAAwB,GAAxB;IAJd;EAPD,CAAP;AAcD,CAfD;;AAiBA,IAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;EACrC,IAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;;EAEA,IAAIC,aAAa,GAAGjB,YAAY,EAAhC;EAAA,IACIkB,SAAS,GAAGD,aAAa,CAACC,SAD9B;;EAGA,IAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBhB,KAAnB,EAA0B;IACxC,IAAIiB,cAAc,GAAGlB,aAAa,CAACC,KAAD,CAAlC;;IAEA,IAAIkB,OAAO,GAAGL,MAAM,GAAGA,MAAM,CAACb,KAAD,EAAQiB,cAAR,CAAT,GAAmClB,aAAa,CAACC,KAAD,CAApE;;IAEA,IAAImB,iBAAiB,GAAGD,OAAO,CAACH,SAAD,CAA/B;IAAA,IACIb,KAAK,GAAGiB,iBAAiB,CAACjB,KAD9B;IAAA,IAEIG,EAAE,GAAGc,iBAAiB,CAACd,EAF3B;IAAA,IAGIE,WAAW,GAAGY,iBAAiB,CAACZ,WAHpC;IAAA,IAIIC,gBAAgB,GAAGW,iBAAiB,CAACX,gBAJzC;IAKA,OAAOZ,GAAG,CAACJ,eAAe,EAAhB,EAAoBU,KAApB,EAA2BG,EAA3B,EAA+BE,WAA/B,EAA4CC,gBAA5C,EAA8DA,gBAA9D,EAAgFA,gBAAhF,CAAV;EACD,CAXD;;EAaA,OAAOd,GAAG,CAACC,MAAD,EAAS;IACjByB,MAAM,EAAE,SAASA,MAAT,CAAgBpB,KAAhB,EAAuB;MAC7B,OAAOJ,GAAG,CAAC,CAACE,SAAS,CAACE,KAAD,CAAV,EAAmBgB,SAAS,CAAChB,KAAD,CAA5B,CAAD,CAAV;IACD;EAHgB,CAAT,CAAV;AAKD,CAxBD;;AA0BA,eAAeW,QAAf"},"metadata":{},"sourceType":"module"}