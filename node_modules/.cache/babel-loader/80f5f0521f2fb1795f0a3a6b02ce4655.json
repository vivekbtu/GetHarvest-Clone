{"ast":null,"code":"/**\r\n * Assigns a value for a given ref, no matter of the ref format\r\n * @param {RefObject} ref - a callback function or ref object\r\n * @param value - a new value\r\n *\r\n * @see https://github.com/theKashey/use-callback-ref#assignref\r\n * @example\r\n * const refObject = useRef();\r\n * const refFn = (ref) => {....}\r\n *\r\n * assignRef(refObject, \"refValue\");\r\n * assignRef(refFn, \"refValue\");\r\n */\nexport function assignRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n\n  return ref;\n}","map":{"version":3,"names":["assignRef","ref","value","current"],"sources":["C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/use-callback-ref/dist/es2015/assignRef.js"],"sourcesContent":["/**\r\n * Assigns a value for a given ref, no matter of the ref format\r\n * @param {RefObject} ref - a callback function or ref object\r\n * @param value - a new value\r\n *\r\n * @see https://github.com/theKashey/use-callback-ref#assignref\r\n * @example\r\n * const refObject = useRef();\r\n * const refFn = (ref) => {....}\r\n *\r\n * assignRef(refObject, \"refValue\");\r\n * assignRef(refFn, \"refValue\");\r\n */\r\nexport function assignRef(ref, value) {\r\n    if (typeof ref === 'function') {\r\n        ref(value);\r\n    }\r\n    else if (ref) {\r\n        ref.current = value;\r\n    }\r\n    return ref;\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,SAAT,CAAmBC,GAAnB,EAAwBC,KAAxB,EAA+B;EAClC,IAAI,OAAOD,GAAP,KAAe,UAAnB,EAA+B;IAC3BA,GAAG,CAACC,KAAD,CAAH;EACH,CAFD,MAGK,IAAID,GAAJ,EAAS;IACVA,GAAG,CAACE,OAAJ,GAAcD,KAAd;EACH;;EACD,OAAOD,GAAP;AACH"},"metadata":{},"sourceType":"module"}