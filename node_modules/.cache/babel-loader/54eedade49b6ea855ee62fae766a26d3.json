{"ast":null,"code":"import { noopReturn } from '@motionone/utils';\nvar timeStep = 10;\nvar maxDuration = 10000;\n\nfunction pregenerateKeyframes(generator) {\n  var toUnit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noopReturn;\n  var overshootDuration = undefined;\n  var timestamp = timeStep;\n  var state = generator(0);\n  var keyframes = [toUnit(state.current)];\n\n  while (!state.done && timestamp < maxDuration) {\n    state = generator(timestamp);\n    keyframes.push(toUnit(state.done ? state.target : state.current));\n\n    if (overshootDuration === undefined && state.hasReachedTarget) {\n      overshootDuration = timestamp;\n    }\n\n    timestamp += timeStep;\n  }\n\n  var duration = timestamp - timeStep;\n  /**\r\n   * If generating an animation that didn't actually move,\r\n   * generate a second keyframe so we have an origin and target.\r\n   */\n\n  if (keyframes.length === 1) keyframes.push(state.current);\n  return {\n    keyframes: keyframes,\n    duration: duration / 1000,\n    overshootDuration: (overshootDuration !== null && overshootDuration !== void 0 ? overshootDuration : duration) / 1000\n  };\n}\n\nexport { pregenerateKeyframes };","map":{"version":3,"names":["noopReturn","timeStep","maxDuration","pregenerateKeyframes","generator","toUnit","overshootDuration","undefined","timestamp","state","keyframes","current","done","push","target","hasReachedTarget","duration","length"],"sources":["C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/@motionone/generators/dist/utils/pregenerate-keyframes.es.js"],"sourcesContent":["import { noopReturn } from '@motionone/utils';\r\n\r\nconst timeStep = 10;\r\nconst maxDuration = 10000;\r\nfunction pregenerateKeyframes(generator, toUnit = noopReturn) {\r\n    let overshootDuration = undefined;\r\n    let timestamp = timeStep;\r\n    let state = generator(0);\r\n    const keyframes = [toUnit(state.current)];\r\n    while (!state.done && timestamp < maxDuration) {\r\n        state = generator(timestamp);\r\n        keyframes.push(toUnit(state.done ? state.target : state.current));\r\n        if (overshootDuration === undefined && state.hasReachedTarget) {\r\n            overshootDuration = timestamp;\r\n        }\r\n        timestamp += timeStep;\r\n    }\r\n    const duration = timestamp - timeStep;\r\n    /**\r\n     * If generating an animation that didn't actually move,\r\n     * generate a second keyframe so we have an origin and target.\r\n     */\r\n    if (keyframes.length === 1)\r\n        keyframes.push(state.current);\r\n    return {\r\n        keyframes,\r\n        duration: duration / 1000,\r\n        overshootDuration: (overshootDuration !== null && overshootDuration !== void 0 ? overshootDuration : duration) / 1000,\r\n    };\r\n}\r\n\r\nexport { pregenerateKeyframes };\r\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AAEA,IAAMC,QAAQ,GAAG,EAAjB;AACA,IAAMC,WAAW,GAAG,KAApB;;AACA,SAASC,oBAAT,CAA8BC,SAA9B,EAA8D;EAAA,IAArBC,MAAqB,uEAAZL,UAAY;EAC1D,IAAIM,iBAAiB,GAAGC,SAAxB;EACA,IAAIC,SAAS,GAAGP,QAAhB;EACA,IAAIQ,KAAK,GAAGL,SAAS,CAAC,CAAD,CAArB;EACA,IAAMM,SAAS,GAAG,CAACL,MAAM,CAACI,KAAK,CAACE,OAAP,CAAP,CAAlB;;EACA,OAAO,CAACF,KAAK,CAACG,IAAP,IAAeJ,SAAS,GAAGN,WAAlC,EAA+C;IAC3CO,KAAK,GAAGL,SAAS,CAACI,SAAD,CAAjB;IACAE,SAAS,CAACG,IAAV,CAAeR,MAAM,CAACI,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACK,MAAnB,GAA4BL,KAAK,CAACE,OAAnC,CAArB;;IACA,IAAIL,iBAAiB,KAAKC,SAAtB,IAAmCE,KAAK,CAACM,gBAA7C,EAA+D;MAC3DT,iBAAiB,GAAGE,SAApB;IACH;;IACDA,SAAS,IAAIP,QAAb;EACH;;EACD,IAAMe,QAAQ,GAAGR,SAAS,GAAGP,QAA7B;EACA;AACJ;AACA;AACA;;EACI,IAAIS,SAAS,CAACO,MAAV,KAAqB,CAAzB,EACIP,SAAS,CAACG,IAAV,CAAeJ,KAAK,CAACE,OAArB;EACJ,OAAO;IACHD,SAAS,EAATA,SADG;IAEHM,QAAQ,EAAEA,QAAQ,GAAG,IAFlB;IAGHV,iBAAiB,EAAE,CAACA,iBAAiB,KAAK,IAAtB,IAA8BA,iBAAiB,KAAK,KAAK,CAAzD,GAA6DA,iBAA7D,GAAiFU,QAAlF,IAA8F;EAH9G,CAAP;AAKH;;AAED,SAASb,oBAAT"},"metadata":{},"sourceType":"module"}