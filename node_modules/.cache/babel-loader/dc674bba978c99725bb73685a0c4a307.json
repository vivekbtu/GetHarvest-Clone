{"ast":null,"code":"import { px } from 'style-value-types';\nconst dashKeys = {\n  offset: \"stroke-dashoffset\",\n  array: \"stroke-dasharray\"\n};\nconst camelKeys = {\n  offset: \"strokeDashoffset\",\n  array: \"strokeDasharray\"\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\n\nfunction buildSVGPath(attrs, length) {\n  let spacing = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let useDashCase = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  // Normalise path length by setting SVG attribute pathLength to 1\n  attrs.pathLength = 1; // We use dash case when setting attributes directly to the DOM node and camel case\n  // when defining props on a React component.\n\n  const keys = useDashCase ? dashKeys : camelKeys; // Build the dash offset\n\n  attrs[keys.offset] = px.transform(-offset); // Build the dash array\n\n  const pathLength = px.transform(length);\n  const pathSpacing = px.transform(spacing);\n  attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };","map":{"version":3,"names":["px","dashKeys","offset","array","camelKeys","buildSVGPath","attrs","length","spacing","useDashCase","pathLength","keys","transform","pathSpacing"],"sources":["C:/Users/bittu/Desktop/React-Unit4Project/premium-grade-140/node_modules/framer-motion/dist/es/render/svg/utils/path.mjs"],"sourcesContent":["import { px } from 'style-value-types';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n"],"mappings":"AAAA,SAASA,EAAT,QAAmB,mBAAnB;AAEA,MAAMC,QAAQ,GAAG;EACbC,MAAM,EAAE,mBADK;EAEbC,KAAK,EAAE;AAFM,CAAjB;AAIA,MAAMC,SAAS,GAAG;EACdF,MAAM,EAAE,kBADM;EAEdC,KAAK,EAAE;AAFO,CAAlB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASE,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAkF;EAAA,IAA7CC,OAA6C,uEAAnC,CAAmC;EAAA,IAAhCN,MAAgC,uEAAvB,CAAuB;EAAA,IAApBO,WAAoB,uEAAN,IAAM;EAC9E;EACAH,KAAK,CAACI,UAAN,GAAmB,CAAnB,CAF8E,CAG9E;EACA;;EACA,MAAMC,IAAI,GAAGF,WAAW,GAAGR,QAAH,GAAcG,SAAtC,CAL8E,CAM9E;;EACAE,KAAK,CAACK,IAAI,CAACT,MAAN,CAAL,GAAqBF,EAAE,CAACY,SAAH,CAAa,CAACV,MAAd,CAArB,CAP8E,CAQ9E;;EACA,MAAMQ,UAAU,GAAGV,EAAE,CAACY,SAAH,CAAaL,MAAb,CAAnB;EACA,MAAMM,WAAW,GAAGb,EAAE,CAACY,SAAH,CAAaJ,OAAb,CAApB;EACAF,KAAK,CAACK,IAAI,CAACR,KAAN,CAAL,GAAqB,GAAEO,UAAW,IAAGG,WAAY,EAAjD;AACH;;AAED,SAASR,YAAT"},"metadata":{},"sourceType":"module"}