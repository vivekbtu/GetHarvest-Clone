{"ast":null,"code":"import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender() {\n  var forwardMotionProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  var useRender = function useRender(Component, props, projectionId, ref, _ref, isStatic) {\n    var latestValues = _ref.latestValues;\n    var useVisualProps = isSVGComponent(Component) ? useSVGProps : useHTMLProps;\n    var visualProps = useVisualProps(props, latestValues, isStatic);\n    var filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    var elementProps = Object.assign(Object.assign(Object.assign({}, filteredProps), visualProps), {\n      ref: ref\n    });\n\n    if (projectionId) {\n      elementProps[\"data-projection-id\"] = projectionId;\n    }\n\n    return createElement(Component, elementProps);\n  };\n\n  return useRender;\n}\n\nexport { createUseRender };","map":{"version":3,"names":["createElement","useHTMLProps","filterProps","isSVGComponent","useSVGProps","createUseRender","forwardMotionProps","useRender","Component","props","projectionId","ref","isStatic","latestValues","useVisualProps","visualProps","filteredProps","elementProps","Object","assign"],"sources":["C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/framer-motion/dist/es/render/dom/use-render.mjs"],"sourcesContent":["import { createElement } from 'react';\r\nimport { useHTMLProps } from '../html/use-props.mjs';\r\nimport { filterProps } from './utils/filter-props.mjs';\r\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\r\nimport { useSVGProps } from '../svg/use-props.mjs';\r\n\r\nfunction createUseRender(forwardMotionProps = false) {\r\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\r\n        const useVisualProps = isSVGComponent(Component)\r\n            ? useSVGProps\r\n            : useHTMLProps;\r\n        const visualProps = useVisualProps(props, latestValues, isStatic);\r\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\r\n        const elementProps = Object.assign(Object.assign(Object.assign({}, filteredProps), visualProps), { ref });\r\n        if (projectionId) {\r\n            elementProps[\"data-projection-id\"] = projectionId;\r\n        }\r\n        return createElement(Component, elementProps);\r\n    };\r\n    return useRender;\r\n}\r\n\r\nexport { createUseRender };\r\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,SAASC,WAAT,QAA4B,sBAA5B;;AAEA,SAASC,eAAT,GAAqD;EAAA,IAA5BC,kBAA4B,uEAAP,KAAO;;EACjD,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,SAAD,EAAYC,KAAZ,EAAmBC,YAAnB,EAAiCC,GAAjC,QAAwDC,QAAxD,EAAqE;IAAA,IAA7BC,YAA6B,QAA7BA,YAA6B;IACnF,IAAMC,cAAc,GAAGX,cAAc,CAACK,SAAD,CAAd,GACjBJ,WADiB,GAEjBH,YAFN;IAGA,IAAMc,WAAW,GAAGD,cAAc,CAACL,KAAD,EAAQI,YAAR,EAAsBD,QAAtB,CAAlC;IACA,IAAMI,aAAa,GAAGd,WAAW,CAACO,KAAD,EAAQ,OAAOD,SAAP,KAAqB,QAA7B,EAAuCF,kBAAvC,CAAjC;IACA,IAAMW,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,aAAlB,CAAd,EAAgDD,WAAhD,CAAd,EAA4E;MAAEJ,GAAG,EAAHA;IAAF,CAA5E,CAArB;;IACA,IAAID,YAAJ,EAAkB;MACdO,YAAY,CAAC,oBAAD,CAAZ,GAAqCP,YAArC;IACH;;IACD,OAAOV,aAAa,CAACQ,SAAD,EAAYS,YAAZ,CAApB;EACH,CAXD;;EAYA,OAAOV,SAAP;AACH;;AAED,SAASF,eAAT"},"metadata":{},"sourceType":"module"}