{"ast":null,"code":"import { noopReturn, defaults, isEasingGenerator, isEasingList, interpolate } from '@motionone/utils';\nimport { getEasingFunction } from './utils/easing.es.js';\n\nclass Animation {\n  constructor(output) {\n    let keyframes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 1];\n    let {\n      easing,\n      duration: initialDuration = defaults.duration,\n      delay = defaults.delay,\n      endDelay = defaults.endDelay,\n      repeat = defaults.repeat,\n      offset,\n      direction = \"normal\"\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.startTime = null;\n    this.rate = 1;\n    this.t = 0;\n    this.cancelTimestamp = null;\n    this.easing = noopReturn;\n    this.duration = 0;\n    this.totalDuration = 0;\n    this.repeat = 0;\n    this.playState = \"idle\";\n    this.finished = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n    easing = easing || defaults.easing;\n\n    if (isEasingGenerator(easing)) {\n      const custom = easing.createAnimation(keyframes);\n      easing = custom.easing;\n      keyframes = custom.keyframes || keyframes;\n      initialDuration = custom.duration || initialDuration;\n    }\n\n    this.repeat = repeat;\n    this.easing = isEasingList(easing) ? noopReturn : getEasingFunction(easing);\n    this.updateDuration(initialDuration);\n    const interpolate$1 = interpolate(keyframes, offset, isEasingList(easing) ? easing.map(getEasingFunction) : noopReturn);\n\n    this.tick = timestamp => {\n      var _a; // TODO: Temporary fix for OptionsResolver typing\n\n\n      delay = delay;\n      let t = 0;\n\n      if (this.pauseTime !== undefined) {\n        t = this.pauseTime;\n      } else {\n        t = (timestamp - this.startTime) * this.rate;\n      }\n\n      this.t = t; // Convert to seconds\n\n      t /= 1000; // Rebase on delay\n\n      t = Math.max(t - delay, 0);\n      /**\r\n       * If this animation has finished, set the current time\r\n       * to the total duration.\r\n       */\n\n      if (this.playState === \"finished\" && this.pauseTime === undefined) {\n        t = this.totalDuration;\n      }\n      /**\r\n       * Get the current progress (0-1) of the animation. If t is >\r\n       * than duration we'll get values like 2.5 (midway through the\r\n       * third iteration)\r\n       */\n\n\n      const progress = t / this.duration; // TODO progress += iterationStart\n\n      /**\r\n       * Get the current iteration (0 indexed). For instance the floor of\r\n       * 2.5 is 2.\r\n       */\n\n      let currentIteration = Math.floor(progress);\n      /**\r\n       * Get the current progress of the iteration by taking the remainder\r\n       * so 2.5 is 0.5 through iteration 2\r\n       */\n\n      let iterationProgress = progress % 1.0;\n\n      if (!iterationProgress && progress >= 1) {\n        iterationProgress = 1;\n      }\n      /**\r\n       * If iteration progress is 1 we count that as the end\r\n       * of the previous iteration.\r\n       */\n\n\n      iterationProgress === 1 && currentIteration--;\n      /**\r\n       * Reverse progress if we're not running in \"normal\" direction\r\n       */\n\n      const iterationIsOdd = currentIteration % 2;\n\n      if (direction === \"reverse\" || direction === \"alternate\" && iterationIsOdd || direction === \"alternate-reverse\" && !iterationIsOdd) {\n        iterationProgress = 1 - iterationProgress;\n      }\n\n      const p = t >= this.totalDuration ? 1 : Math.min(iterationProgress, 1);\n      const latest = interpolate$1(this.easing(p));\n      output(latest);\n      const isAnimationFinished = this.pauseTime === undefined && (this.playState === \"finished\" || t >= this.totalDuration + endDelay);\n\n      if (isAnimationFinished) {\n        this.playState = \"finished\";\n        (_a = this.resolve) === null || _a === void 0 ? void 0 : _a.call(this, latest);\n      } else if (this.playState !== \"idle\") {\n        this.frameRequestId = requestAnimationFrame(this.tick);\n      }\n    };\n\n    this.play();\n  }\n\n  play() {\n    const now = performance.now();\n    this.playState = \"running\";\n\n    if (this.pauseTime !== undefined) {\n      this.startTime = now - this.pauseTime;\n    } else if (!this.startTime) {\n      this.startTime = now;\n    }\n\n    this.cancelTimestamp = this.startTime;\n    this.pauseTime = undefined;\n    this.frameRequestId = requestAnimationFrame(this.tick);\n  }\n\n  pause() {\n    this.playState = \"paused\";\n    this.pauseTime = this.t;\n  }\n\n  finish() {\n    this.playState = \"finished\";\n    this.tick(0);\n  }\n\n  stop() {\n    var _a;\n\n    this.playState = \"idle\";\n\n    if (this.frameRequestId !== undefined) {\n      cancelAnimationFrame(this.frameRequestId);\n    }\n\n    (_a = this.reject) === null || _a === void 0 ? void 0 : _a.call(this, false);\n  }\n\n  cancel() {\n    this.stop();\n    this.tick(this.cancelTimestamp);\n  }\n\n  reverse() {\n    this.rate *= -1;\n  }\n\n  commitStyles() {}\n\n  updateDuration(duration) {\n    this.duration = duration;\n    this.totalDuration = duration * (this.repeat + 1);\n  }\n\n  get currentTime() {\n    return this.t;\n  }\n\n  set currentTime(t) {\n    if (this.pauseTime !== undefined || this.rate === 0) {\n      this.pauseTime = t;\n    } else {\n      this.startTime = performance.now() - t / this.rate;\n    }\n  }\n\n  get playbackRate() {\n    return this.rate;\n  }\n\n  set playbackRate(rate) {\n    this.rate = rate;\n  }\n\n}\n\nexport { Animation };","map":{"version":3,"names":["noopReturn","defaults","isEasingGenerator","isEasingList","interpolate","getEasingFunction","Animation","constructor","output","keyframes","easing","duration","initialDuration","delay","endDelay","repeat","offset","direction","startTime","rate","t","cancelTimestamp","totalDuration","playState","finished","Promise","resolve","reject","custom","createAnimation","updateDuration","interpolate$1","map","tick","timestamp","_a","pauseTime","undefined","Math","max","progress","currentIteration","floor","iterationProgress","iterationIsOdd","p","min","latest","isAnimationFinished","call","frameRequestId","requestAnimationFrame","play","now","performance","pause","finish","stop","cancelAnimationFrame","cancel","reverse","commitStyles","currentTime","playbackRate"],"sources":["C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/@motionone/animation/dist/Animation.es.js"],"sourcesContent":["import { noopReturn, defaults, isEasingGenerator, isEasingList, interpolate } from '@motionone/utils';\r\nimport { getEasingFunction } from './utils/easing.es.js';\r\n\r\nclass Animation {\r\n    constructor(output, keyframes = [0, 1], { easing, duration: initialDuration = defaults.duration, delay = defaults.delay, endDelay = defaults.endDelay, repeat = defaults.repeat, offset, direction = \"normal\", } = {}) {\r\n        this.startTime = null;\r\n        this.rate = 1;\r\n        this.t = 0;\r\n        this.cancelTimestamp = null;\r\n        this.easing = noopReturn;\r\n        this.duration = 0;\r\n        this.totalDuration = 0;\r\n        this.repeat = 0;\r\n        this.playState = \"idle\";\r\n        this.finished = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n        easing = easing || defaults.easing;\r\n        if (isEasingGenerator(easing)) {\r\n            const custom = easing.createAnimation(keyframes);\r\n            easing = custom.easing;\r\n            keyframes = custom.keyframes || keyframes;\r\n            initialDuration = custom.duration || initialDuration;\r\n        }\r\n        this.repeat = repeat;\r\n        this.easing = isEasingList(easing) ? noopReturn : getEasingFunction(easing);\r\n        this.updateDuration(initialDuration);\r\n        const interpolate$1 = interpolate(keyframes, offset, isEasingList(easing) ? easing.map(getEasingFunction) : noopReturn);\r\n        this.tick = (timestamp) => {\r\n            var _a;\r\n            // TODO: Temporary fix for OptionsResolver typing\r\n            delay = delay;\r\n            let t = 0;\r\n            if (this.pauseTime !== undefined) {\r\n                t = this.pauseTime;\r\n            }\r\n            else {\r\n                t = (timestamp - this.startTime) * this.rate;\r\n            }\r\n            this.t = t;\r\n            // Convert to seconds\r\n            t /= 1000;\r\n            // Rebase on delay\r\n            t = Math.max(t - delay, 0);\r\n            /**\r\n             * If this animation has finished, set the current time\r\n             * to the total duration.\r\n             */\r\n            if (this.playState === \"finished\" && this.pauseTime === undefined) {\r\n                t = this.totalDuration;\r\n            }\r\n            /**\r\n             * Get the current progress (0-1) of the animation. If t is >\r\n             * than duration we'll get values like 2.5 (midway through the\r\n             * third iteration)\r\n             */\r\n            const progress = t / this.duration;\r\n            // TODO progress += iterationStart\r\n            /**\r\n             * Get the current iteration (0 indexed). For instance the floor of\r\n             * 2.5 is 2.\r\n             */\r\n            let currentIteration = Math.floor(progress);\r\n            /**\r\n             * Get the current progress of the iteration by taking the remainder\r\n             * so 2.5 is 0.5 through iteration 2\r\n             */\r\n            let iterationProgress = progress % 1.0;\r\n            if (!iterationProgress && progress >= 1) {\r\n                iterationProgress = 1;\r\n            }\r\n            /**\r\n             * If iteration progress is 1 we count that as the end\r\n             * of the previous iteration.\r\n             */\r\n            iterationProgress === 1 && currentIteration--;\r\n            /**\r\n             * Reverse progress if we're not running in \"normal\" direction\r\n             */\r\n            const iterationIsOdd = currentIteration % 2;\r\n            if (direction === \"reverse\" ||\r\n                (direction === \"alternate\" && iterationIsOdd) ||\r\n                (direction === \"alternate-reverse\" && !iterationIsOdd)) {\r\n                iterationProgress = 1 - iterationProgress;\r\n            }\r\n            const p = t >= this.totalDuration ? 1 : Math.min(iterationProgress, 1);\r\n            const latest = interpolate$1(this.easing(p));\r\n            output(latest);\r\n            const isAnimationFinished = this.pauseTime === undefined &&\r\n                (this.playState === \"finished\" || t >= this.totalDuration + endDelay);\r\n            if (isAnimationFinished) {\r\n                this.playState = \"finished\";\r\n                (_a = this.resolve) === null || _a === void 0 ? void 0 : _a.call(this, latest);\r\n            }\r\n            else if (this.playState !== \"idle\") {\r\n                this.frameRequestId = requestAnimationFrame(this.tick);\r\n            }\r\n        };\r\n        this.play();\r\n    }\r\n    play() {\r\n        const now = performance.now();\r\n        this.playState = \"running\";\r\n        if (this.pauseTime !== undefined) {\r\n            this.startTime = now - this.pauseTime;\r\n        }\r\n        else if (!this.startTime) {\r\n            this.startTime = now;\r\n        }\r\n        this.cancelTimestamp = this.startTime;\r\n        this.pauseTime = undefined;\r\n        this.frameRequestId = requestAnimationFrame(this.tick);\r\n    }\r\n    pause() {\r\n        this.playState = \"paused\";\r\n        this.pauseTime = this.t;\r\n    }\r\n    finish() {\r\n        this.playState = \"finished\";\r\n        this.tick(0);\r\n    }\r\n    stop() {\r\n        var _a;\r\n        this.playState = \"idle\";\r\n        if (this.frameRequestId !== undefined) {\r\n            cancelAnimationFrame(this.frameRequestId);\r\n        }\r\n        (_a = this.reject) === null || _a === void 0 ? void 0 : _a.call(this, false);\r\n    }\r\n    cancel() {\r\n        this.stop();\r\n        this.tick(this.cancelTimestamp);\r\n    }\r\n    reverse() {\r\n        this.rate *= -1;\r\n    }\r\n    commitStyles() { }\r\n    updateDuration(duration) {\r\n        this.duration = duration;\r\n        this.totalDuration = duration * (this.repeat + 1);\r\n    }\r\n    get currentTime() {\r\n        return this.t;\r\n    }\r\n    set currentTime(t) {\r\n        if (this.pauseTime !== undefined || this.rate === 0) {\r\n            this.pauseTime = t;\r\n        }\r\n        else {\r\n            this.startTime = performance.now() - t / this.rate;\r\n        }\r\n    }\r\n    get playbackRate() {\r\n        return this.rate;\r\n    }\r\n    set playbackRate(rate) {\r\n        this.rate = rate;\r\n    }\r\n}\r\n\r\nexport { Animation };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}