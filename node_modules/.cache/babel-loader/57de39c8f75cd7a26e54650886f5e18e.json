{"ast":null,"code":"import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n/**\r\n * Measurement functionality has to be within a separate component\r\n * to leverage snapshot lifecycle.\r\n */\n\nclass PopChildMeasure extends React.Component {\n  getSnapshotBeforeUpdate(prevProps) {\n    const element = this.props.childRef.current;\n\n    if (element && prevProps.isPresent && !this.props.isPresent) {\n      const size = this.props.sizeRef.current;\n      size.height = element.offsetHeight || 0;\n      size.width = element.offsetWidth || 0;\n      size.top = element.offsetTop;\n      size.left = element.offsetLeft;\n    }\n\n    return null;\n  }\n  /**\r\n   * Required with getSnapshotBeforeUpdate to stop React complaining.\r\n   */\n\n\n  componentDidUpdate() {}\n\n  render() {\n    return this.props.children;\n  }\n\n}\n\nfunction PopChild(_ref) {\n  let {\n    children,\n    isPresent\n  } = _ref;\n  const id = useId();\n  const ref = useRef(null);\n  const size = useRef({\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0\n  });\n  /**\r\n   * We create and inject a style block so we can apply this explicit\r\n   * sizing in a non-destructive manner by just deleting the style block.\r\n   *\r\n   * We can't apply size via render as the measurement happens\r\n   * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\r\n   * styles directly on the DOM node, we might be overwriting\r\n   * styles set via the style prop.\r\n   */\n\n  useInsertionEffect(() => {\n    var _a;\n\n    const {\n      width,\n      height,\n      top,\n      left\n    } = size.current;\n    if (isPresent || !ref.current || !width || !height) return;\n    ref.current.dataset.motionPopId = id;\n    const style = document.createElement(\"style\");\n    document.head.appendChild(style);\n    (_a = style.sheet) === null || _a === void 0 ? void 0 : _a.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n    return () => {\n      document.head.removeChild(style);\n    };\n  }, [isPresent]);\n  return React.createElement(PopChildMeasure, {\n    isPresent: isPresent,\n    childRef: ref,\n    sizeRef: size\n  }, React.cloneElement(children, {\n    ref\n  }));\n}\n\nexport { PopChild };","map":{"version":3,"names":["React","useId","useRef","useInsertionEffect","PopChildMeasure","Component","getSnapshotBeforeUpdate","prevProps","element","props","childRef","current","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","id","ref","_a","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","cloneElement"],"sources":["C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs"],"sourcesContent":["import * as React from 'react';\r\nimport { useId, useRef, useInsertionEffect } from 'react';\r\n\r\n/**\r\n * Measurement functionality has to be within a separate component\r\n * to leverage snapshot lifecycle.\r\n */\r\nclass PopChildMeasure extends React.Component {\r\n    getSnapshotBeforeUpdate(prevProps) {\r\n        const element = this.props.childRef.current;\r\n        if (element && prevProps.isPresent && !this.props.isPresent) {\r\n            const size = this.props.sizeRef.current;\r\n            size.height = element.offsetHeight || 0;\r\n            size.width = element.offsetWidth || 0;\r\n            size.top = element.offsetTop;\r\n            size.left = element.offsetLeft;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\r\n     */\r\n    componentDidUpdate() { }\r\n    render() {\r\n        return this.props.children;\r\n    }\r\n}\r\nfunction PopChild({ children, isPresent }) {\r\n    const id = useId();\r\n    const ref = useRef(null);\r\n    const size = useRef({\r\n        width: 0,\r\n        height: 0,\r\n        top: 0,\r\n        left: 0,\r\n    });\r\n    /**\r\n     * We create and inject a style block so we can apply this explicit\r\n     * sizing in a non-destructive manner by just deleting the style block.\r\n     *\r\n     * We can't apply size via render as the measurement happens\r\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\r\n     * styles directly on the DOM node, we might be overwriting\r\n     * styles set via the style prop.\r\n     */\r\n    useInsertionEffect(() => {\r\n        var _a;\r\n        const { width, height, top, left } = size.current;\r\n        if (isPresent || !ref.current || !width || !height)\r\n            return;\r\n        ref.current.dataset.motionPopId = id;\r\n        const style = document.createElement(\"style\");\r\n        document.head.appendChild(style);\r\n        (_a = style.sheet) === null || _a === void 0 ? void 0 : _a.insertRule(`\r\n          [data-motion-pop-id=\"${id}\"] {\r\n            position: absolute !important;\r\n            width: ${width}px !important;\r\n            height: ${height}px !important;\r\n            top: ${top}px !important;\r\n            left: ${left}px !important;\r\n          }\r\n        `);\r\n        return () => {\r\n            document.head.removeChild(style);\r\n        };\r\n    }, [isPresent]);\r\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\r\n}\r\n\r\nexport { PopChild };\r\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,kBAAxB,QAAkD,OAAlD;AAEA;AACA;AACA;AACA;;AACA,MAAMC,eAAN,SAA8BJ,KAAK,CAACK,SAApC,CAA8C;EAC1CC,uBAAuB,CAACC,SAAD,EAAY;IAC/B,MAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,OAApC;;IACA,IAAIH,OAAO,IAAID,SAAS,CAACK,SAArB,IAAkC,CAAC,KAAKH,KAAL,CAAWG,SAAlD,EAA6D;MACzD,MAAMC,IAAI,GAAG,KAAKJ,KAAL,CAAWK,OAAX,CAAmBH,OAAhC;MACAE,IAAI,CAACE,MAAL,GAAcP,OAAO,CAACQ,YAAR,IAAwB,CAAtC;MACAH,IAAI,CAACI,KAAL,GAAaT,OAAO,CAACU,WAAR,IAAuB,CAApC;MACAL,IAAI,CAACM,GAAL,GAAWX,OAAO,CAACY,SAAnB;MACAP,IAAI,CAACQ,IAAL,GAAYb,OAAO,CAACc,UAApB;IACH;;IACD,OAAO,IAAP;EACH;EACD;AACJ;AACA;;;EACIC,kBAAkB,GAAG,CAAG;;EACxBC,MAAM,GAAG;IACL,OAAO,KAAKf,KAAL,CAAWgB,QAAlB;EACH;;AAlByC;;AAoB9C,SAASC,QAAT,OAA2C;EAAA,IAAzB;IAAED,QAAF;IAAYb;EAAZ,CAAyB;EACvC,MAAMe,EAAE,GAAG1B,KAAK,EAAhB;EACA,MAAM2B,GAAG,GAAG1B,MAAM,CAAC,IAAD,CAAlB;EACA,MAAMW,IAAI,GAAGX,MAAM,CAAC;IAChBe,KAAK,EAAE,CADS;IAEhBF,MAAM,EAAE,CAFQ;IAGhBI,GAAG,EAAE,CAHW;IAIhBE,IAAI,EAAE;EAJU,CAAD,CAAnB;EAMA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACIlB,kBAAkB,CAAC,MAAM;IACrB,IAAI0B,EAAJ;;IACA,MAAM;MAAEZ,KAAF;MAASF,MAAT;MAAiBI,GAAjB;MAAsBE;IAAtB,IAA+BR,IAAI,CAACF,OAA1C;IACA,IAAIC,SAAS,IAAI,CAACgB,GAAG,CAACjB,OAAlB,IAA6B,CAACM,KAA9B,IAAuC,CAACF,MAA5C,EACI;IACJa,GAAG,CAACjB,OAAJ,CAAYmB,OAAZ,CAAoBC,WAApB,GAAkCJ,EAAlC;IACA,MAAMK,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;IACAD,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BJ,KAA1B;IACA,CAACH,EAAE,GAAGG,KAAK,CAACK,KAAZ,MAAuB,IAAvB,IAA+BR,EAAE,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,EAAE,CAACS,UAAH,CAAe;AAC/E,iCAAiCX,EAAG;AACpC;AACA,qBAAqBV,KAAM;AAC3B,sBAAsBF,MAAO;AAC7B,mBAAmBI,GAAI;AACvB,oBAAoBE,IAAK;AACzB;AACA,SARgE,CAAxD;IASA,OAAO,MAAM;MACTY,QAAQ,CAACE,IAAT,CAAcI,WAAd,CAA0BP,KAA1B;IACH,CAFD;EAGH,CApBiB,EAoBf,CAACpB,SAAD,CApBe,CAAlB;EAqBA,OAAQZ,KAAK,CAACkC,aAAN,CAAoB9B,eAApB,EAAqC;IAAEQ,SAAS,EAAEA,SAAb;IAAwBF,QAAQ,EAAEkB,GAAlC;IAAuCd,OAAO,EAAED;EAAhD,CAArC,EAA6Fb,KAAK,CAACwC,YAAN,CAAmBf,QAAnB,EAA6B;IAAEG;EAAF,CAA7B,CAA7F,CAAR;AACH;;AAED,SAASF,QAAT"},"metadata":{},"sourceType":"module"}