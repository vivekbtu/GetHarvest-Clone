{"ast":null,"code":"import { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useContext } from 'react';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useProjection(projectionId, _ref, visualElement, ProjectionNodeConstructor) {\n  let {\n    layoutId,\n    layout,\n    drag,\n    dragConstraints,\n    layoutScroll\n  } = _ref;\n\n  var _a;\n\n  const initialPromotionConfig = useContext(SwitchLayoutGroupContext);\n\n  if (!ProjectionNodeConstructor || !visualElement || (visualElement === null || visualElement === void 0 ? void 0 : visualElement.projection)) {\n    return;\n  }\n\n  visualElement.projection = new ProjectionNodeConstructor(projectionId, visualElement.getLatestValues(), (_a = visualElement.parent) === null || _a === void 0 ? void 0 : _a.projection);\n  visualElement.projection.setOptions({\n    layoutId,\n    layout,\n    alwaysMeasureLayout: Boolean(drag) || dragConstraints && isRefObject(dragConstraints),\n    visualElement,\n    scheduleRender: () => visualElement.scheduleRender(),\n\n    /**\r\n     * TODO: Update options in an effect. This could be tricky as it'll be too late\r\n     * to update by the time layout animations run.\r\n     * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\r\n     * ensuring it gets called if there's no potential layout animations.\r\n     *\r\n     */\n    animationType: typeof layout === \"string\" ? layout : \"both\",\n    initialPromotionConfig,\n    layoutScroll\n  });\n}\n\nexport { useProjection };","map":{"version":3,"names":["isRefObject","useContext","SwitchLayoutGroupContext","useProjection","projectionId","visualElement","ProjectionNodeConstructor","layoutId","layout","drag","dragConstraints","layoutScroll","_a","initialPromotionConfig","projection","getLatestValues","parent","setOptions","alwaysMeasureLayout","Boolean","scheduleRender","animationType"],"sources":["C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/framer-motion/dist/es/motion/features/use-projection.mjs"],"sourcesContent":["import { isRefObject } from '../../utils/is-ref-object.mjs';\r\nimport { useContext } from 'react';\r\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\r\n\r\nfunction useProjection(projectionId, { layoutId, layout, drag, dragConstraints, layoutScroll }, visualElement, ProjectionNodeConstructor) {\r\n    var _a;\r\n    const initialPromotionConfig = useContext(SwitchLayoutGroupContext);\r\n    if (!ProjectionNodeConstructor ||\r\n        !visualElement ||\r\n        (visualElement === null || visualElement === void 0 ? void 0 : visualElement.projection)) {\r\n        return;\r\n    }\r\n    visualElement.projection = new ProjectionNodeConstructor(projectionId, visualElement.getLatestValues(), (_a = visualElement.parent) === null || _a === void 0 ? void 0 : _a.projection);\r\n    visualElement.projection.setOptions({\r\n        layoutId,\r\n        layout,\r\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\r\n        visualElement,\r\n        scheduleRender: () => visualElement.scheduleRender(),\r\n        /**\r\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\r\n         * to update by the time layout animations run.\r\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\r\n         * ensuring it gets called if there's no potential layout animations.\r\n         *\r\n         */\r\n        animationType: typeof layout === \"string\" ? layout : \"both\",\r\n        initialPromotionConfig,\r\n        layoutScroll,\r\n    });\r\n}\r\n\r\nexport { useProjection };\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,+BAA5B;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,wBAAT,QAAyC,4CAAzC;;AAEA,SAASC,aAAT,CAAuBC,YAAvB,QAAgGC,aAAhG,EAA+GC,yBAA/G,EAA0I;EAAA,IAArG;IAAEC,QAAF;IAAYC,MAAZ;IAAoBC,IAApB;IAA0BC,eAA1B;IAA2CC;EAA3C,CAAqG;;EACtI,IAAIC,EAAJ;;EACA,MAAMC,sBAAsB,GAAGZ,UAAU,CAACC,wBAAD,CAAzC;;EACA,IAAI,CAACI,yBAAD,IACA,CAACD,aADD,KAECA,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,aAAa,CAACS,UAF7E,CAAJ,EAE8F;IAC1F;EACH;;EACDT,aAAa,CAACS,UAAd,GAA2B,IAAIR,yBAAJ,CAA8BF,YAA9B,EAA4CC,aAAa,CAACU,eAAd,EAA5C,EAA6E,CAACH,EAAE,GAAGP,aAAa,CAACW,MAApB,MAAgC,IAAhC,IAAwCJ,EAAE,KAAK,KAAK,CAApD,GAAwD,KAAK,CAA7D,GAAiEA,EAAE,CAACE,UAAjJ,CAA3B;EACAT,aAAa,CAACS,UAAd,CAAyBG,UAAzB,CAAoC;IAChCV,QADgC;IAEhCC,MAFgC;IAGhCU,mBAAmB,EAAEC,OAAO,CAACV,IAAD,CAAP,IAAkBC,eAAe,IAAIV,WAAW,CAACU,eAAD,CAHrC;IAIhCL,aAJgC;IAKhCe,cAAc,EAAE,MAAMf,aAAa,CAACe,cAAd,EALU;;IAMhC;AACR;AACA;AACA;AACA;AACA;AACA;IACQC,aAAa,EAAE,OAAOb,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsC,MAbrB;IAchCK,sBAdgC;IAehCF;EAfgC,CAApC;AAiBH;;AAED,SAASR,aAAT"},"metadata":{},"sourceType":"module"}