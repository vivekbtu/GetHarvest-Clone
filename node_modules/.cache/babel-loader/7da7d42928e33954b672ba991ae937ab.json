{"ast":null,"code":"import { invariant } from 'hey-listen';\nimport { stopAnimation, animateVisualElement } from '../render/utils/animation.mjs';\nimport { setValues } from '../render/utils/setters.mjs';\n/**\n * @public\n */\n\nfunction animationControls() {\n  /**\n   * Track whether the host component has mounted.\n   */\n  let hasMounted = false;\n  /**\n   * Pending animations that are started before a component is mounted.\n   * TODO: Remove this as animations should only run in effects\n   */\n\n  const pendingAnimations = [];\n  /**\n   * A collection of linked component animation controls.\n   */\n\n  const subscribers = new Set();\n  const controls = {\n    subscribe(visualElement) {\n      subscribers.add(visualElement);\n      return () => void subscribers.delete(visualElement);\n    },\n\n    start(definition, transitionOverride) {\n      /**\n       * TODO: We only perform this hasMounted check because in Framer we used to\n       * encourage the ability to start an animation within the render phase. This\n       * isn't behaviour concurrent-safe so when we make Framer concurrent-safe\n       * we can ditch this.\n       */\n      if (hasMounted) {\n        const animations = [];\n        subscribers.forEach(visualElement => {\n          animations.push(animateVisualElement(visualElement, definition, {\n            transitionOverride\n          }));\n        });\n        return Promise.all(animations);\n      } else {\n        return new Promise(resolve => {\n          pendingAnimations.push({\n            animation: [definition, transitionOverride],\n            resolve\n          });\n        });\n      }\n    },\n\n    set(definition) {\n      invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n      return subscribers.forEach(visualElement => {\n        setValues(visualElement, definition);\n      });\n    },\n\n    stop() {\n      subscribers.forEach(visualElement => {\n        stopAnimation(visualElement);\n      });\n    },\n\n    mount() {\n      hasMounted = true;\n      pendingAnimations.forEach(_ref => {\n        let {\n          animation,\n          resolve\n        } = _ref;\n        controls.start(...animation).then(resolve);\n      });\n      return () => {\n        hasMounted = false;\n        controls.stop();\n      };\n    }\n\n  };\n  return controls;\n}\n\nexport { animationControls };","map":{"version":3,"names":["invariant","stopAnimation","animateVisualElement","setValues","animationControls","hasMounted","pendingAnimations","subscribers","Set","controls","subscribe","visualElement","add","delete","start","definition","transitionOverride","animations","forEach","push","Promise","all","resolve","animation","set","stop","mount","then"],"sources":["C:/Users/bittu/Desktop/Unit4Project-React/my-project/node_modules/framer-motion/dist/es/animation/animation-controls.mjs"],"sourcesContent":["import { invariant } from 'hey-listen';\nimport { stopAnimation, animateVisualElement } from '../render/utils/animation.mjs';\nimport { setValues } from '../render/utils/setters.mjs';\n\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * Pending animations that are started before a component is mounted.\n     * TODO: Remove this as animations should only run in effects\n     */\n    const pendingAnimations = [];\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            /**\n             * TODO: We only perform this hasMounted check because in Framer we used to\n             * encourage the ability to start an animation within the render phase. This\n             * isn't behaviour concurrent-safe so when we make Framer concurrent-safe\n             * we can ditch this.\n             */\n            if (hasMounted) {\n                const animations = [];\n                subscribers.forEach((visualElement) => {\n                    animations.push(animateVisualElement(visualElement, definition, {\n                        transitionOverride,\n                    }));\n                });\n                return Promise.all(animations);\n            }\n            else {\n                return new Promise((resolve) => {\n                    pendingAnimations.push({\n                        animation: [definition, transitionOverride],\n                        resolve,\n                    });\n                });\n            }\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            pendingAnimations.forEach(({ animation, resolve }) => {\n                controls.start(...animation).then(resolve);\n            });\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,aAAT,EAAwBC,oBAAxB,QAAoD,+BAApD;AACA,SAASC,SAAT,QAA0B,6BAA1B;AAEA;AACA;AACA;;AACA,SAASC,iBAAT,GAA6B;EACzB;AACJ;AACA;EACI,IAAIC,UAAU,GAAG,KAAjB;EACA;AACJ;AACA;AACA;;EACI,MAAMC,iBAAiB,GAAG,EAA1B;EACA;AACJ;AACA;;EACI,MAAMC,WAAW,GAAG,IAAIC,GAAJ,EAApB;EACA,MAAMC,QAAQ,GAAG;IACbC,SAAS,CAACC,aAAD,EAAgB;MACrBJ,WAAW,CAACK,GAAZ,CAAgBD,aAAhB;MACA,OAAO,MAAM,KAAKJ,WAAW,CAACM,MAAZ,CAAmBF,aAAnB,CAAlB;IACH,CAJY;;IAKbG,KAAK,CAACC,UAAD,EAAaC,kBAAb,EAAiC;MAClC;AACZ;AACA;AACA;AACA;AACA;MACY,IAAIX,UAAJ,EAAgB;QACZ,MAAMY,UAAU,GAAG,EAAnB;QACAV,WAAW,CAACW,OAAZ,CAAqBP,aAAD,IAAmB;UACnCM,UAAU,CAACE,IAAX,CAAgBjB,oBAAoB,CAACS,aAAD,EAAgBI,UAAhB,EAA4B;YAC5DC;UAD4D,CAA5B,CAApC;QAGH,CAJD;QAKA,OAAOI,OAAO,CAACC,GAAR,CAAYJ,UAAZ,CAAP;MACH,CARD,MASK;QACD,OAAO,IAAIG,OAAJ,CAAaE,OAAD,IAAa;UAC5BhB,iBAAiB,CAACa,IAAlB,CAAuB;YACnBI,SAAS,EAAE,CAACR,UAAD,EAAaC,kBAAb,CADQ;YAEnBM;UAFmB,CAAvB;QAIH,CALM,CAAP;MAMH;IACJ,CA7BY;;IA8BbE,GAAG,CAACT,UAAD,EAAa;MACZf,SAAS,CAACK,UAAD,EAAa,+GAAb,CAAT;MACA,OAAOE,WAAW,CAACW,OAAZ,CAAqBP,aAAD,IAAmB;QAC1CR,SAAS,CAACQ,aAAD,EAAgBI,UAAhB,CAAT;MACH,CAFM,CAAP;IAGH,CAnCY;;IAoCbU,IAAI,GAAG;MACHlB,WAAW,CAACW,OAAZ,CAAqBP,aAAD,IAAmB;QACnCV,aAAa,CAACU,aAAD,CAAb;MACH,CAFD;IAGH,CAxCY;;IAyCbe,KAAK,GAAG;MACJrB,UAAU,GAAG,IAAb;MACAC,iBAAiB,CAACY,OAAlB,CAA0B,QAA4B;QAAA,IAA3B;UAAEK,SAAF;UAAaD;QAAb,CAA2B;QAClDb,QAAQ,CAACK,KAAT,CAAe,GAAGS,SAAlB,EAA6BI,IAA7B,CAAkCL,OAAlC;MACH,CAFD;MAGA,OAAO,MAAM;QACTjB,UAAU,GAAG,KAAb;QACAI,QAAQ,CAACgB,IAAT;MACH,CAHD;IAIH;;EAlDY,CAAjB;EAoDA,OAAOhB,QAAP;AACH;;AAED,SAASL,iBAAT"},"metadata":{},"sourceType":"module"}