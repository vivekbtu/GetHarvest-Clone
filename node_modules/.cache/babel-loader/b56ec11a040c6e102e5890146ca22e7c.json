{"ast":null,"code":"import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\nconst animations = {\n  animation: makeRenderlessComponent(_ref => {\n    let {\n      visualElement,\n      animate\n    } = _ref;\n\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n\n    if (isAnimationControls(animate)) {\n      useEffect(() => animate.subscribe(visualElement), [animate]);\n    }\n  }),\n  exit: makeRenderlessComponent(props => {\n    const {\n      custom,\n      visualElement\n    } = props;\n    const [isPresent, safeToRemove] = usePresence();\n    const presenceContext = useContext(PresenceContext);\n    useEffect(() => {\n      var _a, _b;\n\n      visualElement.isPresent = isPresent;\n      const animation = (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Exit, !isPresent, {\n        custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom\n      });\n      !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(safeToRemove));\n    }, [isPresent]);\n  })\n};\nexport { animations };","map":{"version":3,"names":["useEffect","useContext","isAnimationControls","usePresence","PresenceContext","createAnimationState","AnimationType","makeRenderlessComponent","animations","animation","visualElement","animate","animationState","subscribe","exit","props","custom","isPresent","safeToRemove","presenceContext","_a","_b","setActive","Exit","then"],"sources":["C:/Users/bittu/Desktop/React-Unit4Project/premium-grade-140/node_modules/framer-motion/dist/es/motion/features/animations.mjs"],"sourcesContent":["import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            var _a, _b;\n            visualElement.isPresent = isPresent;\n            const animation = (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Exit, !isPresent, { custom: (_b = presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });\n            !isPresent && (animation === null || animation === void 0 ? void 0 : animation.then(safeToRemove));\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,SAASC,mBAAT,QAAoC,iDAApC;AACA,SAASC,WAAT,QAA4B,mDAA5B;AACA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAASC,oBAAT,QAAqC,wCAArC;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,uBAAT,QAAwC,wCAAxC;AAEA,MAAMC,UAAU,GAAG;EACfC,SAAS,EAAEF,uBAAuB,CAAC,QAAgC;IAAA,IAA/B;MAAEG,aAAF;MAAiBC;IAAjB,CAA+B;;IAC/D;AACR;AACA;AACA;AACA;IACQD,aAAa,CAACE,cAAd,KAAiCF,aAAa,CAACE,cAAd,GAA+BP,oBAAoB,CAACK,aAAD,CAApF;IACA;AACR;AACA;;IACQ,IAAIR,mBAAmB,CAACS,OAAD,CAAvB,EAAkC;MAC9BX,SAAS,CAAC,MAAMW,OAAO,CAACE,SAAR,CAAkBH,aAAlB,CAAP,EAAyC,CAACC,OAAD,CAAzC,CAAT;IACH;EACJ,CAbiC,CADnB;EAefG,IAAI,EAAEP,uBAAuB,CAAEQ,KAAD,IAAW;IACrC,MAAM;MAAEC,MAAF;MAAUN;IAAV,IAA4BK,KAAlC;IACA,MAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4Bf,WAAW,EAA7C;IACA,MAAMgB,eAAe,GAAGlB,UAAU,CAACG,eAAD,CAAlC;IACAJ,SAAS,CAAC,MAAM;MACZ,IAAIoB,EAAJ,EAAQC,EAAR;;MACAX,aAAa,CAACO,SAAd,GAA0BA,SAA1B;MACA,MAAMR,SAAS,GAAG,CAACW,EAAE,GAAGV,aAAa,CAACE,cAApB,MAAwC,IAAxC,IAAgDQ,EAAE,KAAK,KAAK,CAA5D,GAAgE,KAAK,CAArE,GAAyEA,EAAE,CAACE,SAAH,CAAahB,aAAa,CAACiB,IAA3B,EAAiC,CAACN,SAAlC,EAA6C;QAAED,MAAM,EAAE,CAACK,EAAE,GAAGF,eAAe,KAAK,IAApB,IAA4BA,eAAe,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkEA,eAAe,CAACH,MAAxF,MAAoG,IAApG,IAA4GK,EAAE,KAAK,KAAK,CAAxH,GAA4HA,EAA5H,GAAiIL;MAA3I,CAA7C,CAA3F;MACA,CAACC,SAAD,KAAeR,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACe,IAAV,CAAeN,YAAf,CAArE;IACH,CALQ,EAKN,CAACD,SAAD,CALM,CAAT;EAMH,CAV4B;AAfd,CAAnB;AA4BA,SAAST,UAAT"},"metadata":{},"sourceType":"module"}