{"ast":null,"code":"import { isNumber } from '@motionone/utils';\nimport { isTransform, transformAlias, asTransformCssVar, transformDefinitions, buildTransformTemplate } from './transforms.es.js';\n\nfunction createStyles(keyframes) {\n  var initialKeyframes = {};\n  var transformKeys = [];\n\n  for (var key in keyframes) {\n    var value = keyframes[key];\n\n    if (isTransform(key)) {\n      if (transformAlias[key]) key = transformAlias[key];\n      transformKeys.push(key);\n      key = asTransformCssVar(key);\n    }\n\n    var initialKeyframe = Array.isArray(value) ? value[0] : value;\n    /**\r\n     * If this is a number and we have a default value type, convert the number\r\n     * to this type.\r\n     */\n\n    var definition = transformDefinitions.get(key);\n\n    if (definition) {\n      initialKeyframe = isNumber(value) ? definition.toDefaultUnit(value) : value;\n    }\n\n    initialKeyframes[key] = initialKeyframe;\n  }\n\n  if (transformKeys.length) {\n    initialKeyframes.transform = buildTransformTemplate(transformKeys);\n  }\n\n  return initialKeyframes;\n}\n\nexport { createStyles };","map":{"version":3,"names":["isNumber","isTransform","transformAlias","asTransformCssVar","transformDefinitions","buildTransformTemplate","createStyles","keyframes","initialKeyframes","transformKeys","key","value","push","initialKeyframe","Array","isArray","definition","get","toDefaultUnit","length","transform"],"sources":["C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/@motionone/dom/dist/animate/utils/style-object.es.js"],"sourcesContent":["import { isNumber } from '@motionone/utils';\r\nimport { isTransform, transformAlias, asTransformCssVar, transformDefinitions, buildTransformTemplate } from './transforms.es.js';\r\n\r\nfunction createStyles(keyframes) {\r\n    const initialKeyframes = {};\r\n    const transformKeys = [];\r\n    for (let key in keyframes) {\r\n        const value = keyframes[key];\r\n        if (isTransform(key)) {\r\n            if (transformAlias[key])\r\n                key = transformAlias[key];\r\n            transformKeys.push(key);\r\n            key = asTransformCssVar(key);\r\n        }\r\n        let initialKeyframe = Array.isArray(value) ? value[0] : value;\r\n        /**\r\n         * If this is a number and we have a default value type, convert the number\r\n         * to this type.\r\n         */\r\n        const definition = transformDefinitions.get(key);\r\n        if (definition) {\r\n            initialKeyframe = isNumber(value)\r\n                ? definition.toDefaultUnit(value)\r\n                : value;\r\n        }\r\n        initialKeyframes[key] = initialKeyframe;\r\n    }\r\n    if (transformKeys.length) {\r\n        initialKeyframes.transform = buildTransformTemplate(transformKeys);\r\n    }\r\n    return initialKeyframes;\r\n}\r\n\r\nexport { createStyles };\r\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,iBAAtC,EAAyDC,oBAAzD,EAA+EC,sBAA/E,QAA6G,oBAA7G;;AAEA,SAASC,YAAT,CAAsBC,SAAtB,EAAiC;EAC7B,IAAMC,gBAAgB,GAAG,EAAzB;EACA,IAAMC,aAAa,GAAG,EAAtB;;EACA,KAAK,IAAIC,GAAT,IAAgBH,SAAhB,EAA2B;IACvB,IAAMI,KAAK,GAAGJ,SAAS,CAACG,GAAD,CAAvB;;IACA,IAAIT,WAAW,CAACS,GAAD,CAAf,EAAsB;MAClB,IAAIR,cAAc,CAACQ,GAAD,CAAlB,EACIA,GAAG,GAAGR,cAAc,CAACQ,GAAD,CAApB;MACJD,aAAa,CAACG,IAAd,CAAmBF,GAAnB;MACAA,GAAG,GAAGP,iBAAiB,CAACO,GAAD,CAAvB;IACH;;IACD,IAAIG,eAAe,GAAGC,KAAK,CAACC,OAAN,CAAcJ,KAAd,IAAuBA,KAAK,CAAC,CAAD,CAA5B,GAAkCA,KAAxD;IACA;AACR;AACA;AACA;;IACQ,IAAMK,UAAU,GAAGZ,oBAAoB,CAACa,GAArB,CAAyBP,GAAzB,CAAnB;;IACA,IAAIM,UAAJ,EAAgB;MACZH,eAAe,GAAGb,QAAQ,CAACW,KAAD,CAAR,GACZK,UAAU,CAACE,aAAX,CAAyBP,KAAzB,CADY,GAEZA,KAFN;IAGH;;IACDH,gBAAgB,CAACE,GAAD,CAAhB,GAAwBG,eAAxB;EACH;;EACD,IAAIJ,aAAa,CAACU,MAAlB,EAA0B;IACtBX,gBAAgB,CAACY,SAAjB,GAA6Bf,sBAAsB,CAACI,aAAD,CAAnD;EACH;;EACD,OAAOD,gBAAP;AACH;;AAED,SAASF,YAAT"},"metadata":{},"sourceType":"module"}