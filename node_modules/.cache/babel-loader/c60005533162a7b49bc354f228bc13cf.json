{"ast":null,"code":"// ../../react-shim.js\nimport React from \"react\"; // src/skeleton.tsx\n\nimport { useBreakpointValue } from \"@chakra-ui/media-query\";\nimport { chakra, forwardRef, keyframes, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { usePrevious } from \"@chakra-ui/hooks\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { useEffect, useRef } from \"react\";\nvar StyledSkeleton = chakra(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\n\nvar useIsFirstRender = () => {\n  const isFirstRender = useRef(true);\n  useEffect(() => {\n    isFirstRender.current = false;\n  }, []);\n  return isFirstRender.current;\n};\n\nvar fade = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nvar startColor = \"var(--skeleton-start-color)\";\nvar endColor = \"var(--skeleton-end-color)\";\nvar bgFade = keyframes({\n  from: {\n    borderColor: startColor,\n    background: startColor\n  },\n  to: {\n    borderColor: endColor,\n    background: endColor\n  }\n});\nvar Skeleton = forwardRef((props, ref) => {\n  const styles = useStyleConfig(\"Skeleton\", props);\n  const isFirstRender = useIsFirstRender();\n  const {\n    startColor: startColor2,\n    endColor: endColor2,\n    isLoaded,\n    fadeDuration,\n    speed,\n    className,\n    ...rest\n  } = omitThemingProps(props);\n  const wasPreviouslyLoaded = usePrevious(isLoaded);\n\n  const _className = cx(\"chakra-skeleton\", className);\n\n  if (isLoaded) {\n    const animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : `${fade} ${fadeDuration}s`;\n    return /* @__PURE__ */React.createElement(chakra.div, {\n      ref,\n      className: _className,\n      __css: {\n        animation\n      },\n      ...rest\n    });\n  }\n\n  return /* @__PURE__ */React.createElement(StyledSkeleton, {\n    ref,\n    className: _className,\n    ...rest,\n    __css: { ...styles,\n      animation: `${speed}s linear infinite alternate ${bgFade}`\n    }\n  });\n});\nSkeleton.defaultProps = {\n  fadeDuration: 0.4,\n  speed: 0.8\n};\n\nif (__DEV__) {\n  Skeleton.displayName = \"Skeleton\";\n}\n\nfunction range(count) {\n  return Array(count).fill(1).map((_, index) => index + 1);\n}\n\nvar defaultNoOfLines = 3;\n\nvar SkeletonText = props => {\n  const {\n    noOfLines = defaultNoOfLines,\n    spacing = \"0.5rem\",\n    skeletonHeight = \"0.5rem\",\n    className,\n    startColor: startColor2,\n    endColor: endColor2,\n    isLoaded,\n    fadeDuration,\n    speed,\n    children,\n    ...rest\n  } = props;\n  const noOfLinesValue = useBreakpointValue(typeof noOfLines === \"number\" ? [noOfLines] : noOfLines) || defaultNoOfLines;\n  const numbers = range(noOfLinesValue);\n\n  const getWidth = index => {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n\n    return \"100%\";\n  };\n\n  const _className = cx(\"chakra-skeleton__group\", className);\n\n  return /* @__PURE__ */React.createElement(chakra.div, {\n    className: _className,\n    ...rest\n  }, numbers.map((number, index) => {\n    if (isLoaded && index > 0) {\n      return null;\n    }\n\n    const sizeProps = isLoaded ? null : {\n      mb: number === numbers.length ? \"0\" : spacing,\n      width: getWidth(number),\n      height: skeletonHeight\n    };\n    return /* @__PURE__ */React.createElement(Skeleton, {\n      key: numbers.length.toString() + number,\n      startColor: startColor2,\n      endColor: endColor2,\n      isLoaded,\n      fadeDuration,\n      speed,\n      ...sizeProps\n    }, index === 0 ? children : void 0);\n  }));\n};\n\nif (__DEV__) {\n  SkeletonText.displayName = \"SkeletonText\";\n}\n\nvar SkeletonCircle = _ref => {\n  let {\n    size = \"2rem\",\n    ...rest\n  } = _ref;\n  return /* @__PURE__ */React.createElement(Skeleton, {\n    borderRadius: \"full\",\n    boxSize: size,\n    ...rest\n  });\n};\n\nif (__DEV__) {\n  SkeletonCircle.displayName = \"SkeletonCircle\";\n}\n\nexport { Skeleton, SkeletonCircle, SkeletonText };","map":{"version":3,"names":["React","useBreakpointValue","chakra","forwardRef","keyframes","omitThemingProps","useStyleConfig","usePrevious","cx","__DEV__","useEffect","useRef","StyledSkeleton","baseStyle","boxShadow","backgroundClip","cursor","color","pointerEvents","userSelect","visibility","useIsFirstRender","isFirstRender","current","fade","from","opacity","to","startColor","endColor","bgFade","borderColor","background","Skeleton","props","ref","styles","startColor2","endColor2","isLoaded","fadeDuration","speed","className","rest","wasPreviouslyLoaded","_className","animation","createElement","div","__css","defaultProps","displayName","range","count","Array","fill","map","_","index","defaultNoOfLines","SkeletonText","noOfLines","spacing","skeletonHeight","children","noOfLinesValue","numbers","getWidth","length","number","sizeProps","mb","width","height","key","toString","SkeletonCircle","size","borderRadius","boxSize"],"sources":["C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/@chakra-ui/skeleton/dist/index.esm.js"],"sourcesContent":["// ../../react-shim.js\r\nimport React from \"react\";\r\n\r\n// src/skeleton.tsx\r\nimport { useBreakpointValue } from \"@chakra-ui/media-query\";\r\nimport {\r\n  chakra,\r\n  forwardRef,\r\n  keyframes,\r\n  omitThemingProps,\r\n  useStyleConfig\r\n} from \"@chakra-ui/system\";\r\nimport { usePrevious } from \"@chakra-ui/hooks\";\r\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\r\nimport { useEffect, useRef } from \"react\";\r\nvar StyledSkeleton = chakra(\"div\", {\r\n  baseStyle: {\r\n    boxShadow: \"none\",\r\n    backgroundClip: \"padding-box\",\r\n    cursor: \"default\",\r\n    color: \"transparent\",\r\n    pointerEvents: \"none\",\r\n    userSelect: \"none\",\r\n    \"&::before, &::after, *\": {\r\n      visibility: \"hidden\"\r\n    }\r\n  }\r\n});\r\nvar useIsFirstRender = () => {\r\n  const isFirstRender = useRef(true);\r\n  useEffect(() => {\r\n    isFirstRender.current = false;\r\n  }, []);\r\n  return isFirstRender.current;\r\n};\r\nvar fade = keyframes({\r\n  from: { opacity: 0 },\r\n  to: { opacity: 1 }\r\n});\r\nvar startColor = \"var(--skeleton-start-color)\";\r\nvar endColor = \"var(--skeleton-end-color)\";\r\nvar bgFade = keyframes({\r\n  from: { borderColor: startColor, background: startColor },\r\n  to: { borderColor: endColor, background: endColor }\r\n});\r\nvar Skeleton = forwardRef((props, ref) => {\r\n  const styles = useStyleConfig(\"Skeleton\", props);\r\n  const isFirstRender = useIsFirstRender();\r\n  const {\r\n    startColor: startColor2,\r\n    endColor: endColor2,\r\n    isLoaded,\r\n    fadeDuration,\r\n    speed,\r\n    className,\r\n    ...rest\r\n  } = omitThemingProps(props);\r\n  const wasPreviouslyLoaded = usePrevious(isLoaded);\r\n  const _className = cx(\"chakra-skeleton\", className);\r\n  if (isLoaded) {\r\n    const animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : `${fade} ${fadeDuration}s`;\r\n    return /* @__PURE__ */ React.createElement(chakra.div, {\r\n      ref,\r\n      className: _className,\r\n      __css: { animation },\r\n      ...rest\r\n    });\r\n  }\r\n  return /* @__PURE__ */ React.createElement(StyledSkeleton, {\r\n    ref,\r\n    className: _className,\r\n    ...rest,\r\n    __css: {\r\n      ...styles,\r\n      animation: `${speed}s linear infinite alternate ${bgFade}`\r\n    }\r\n  });\r\n});\r\nSkeleton.defaultProps = {\r\n  fadeDuration: 0.4,\r\n  speed: 0.8\r\n};\r\nif (__DEV__) {\r\n  Skeleton.displayName = \"Skeleton\";\r\n}\r\nfunction range(count) {\r\n  return Array(count).fill(1).map((_, index) => index + 1);\r\n}\r\nvar defaultNoOfLines = 3;\r\nvar SkeletonText = (props) => {\r\n  const {\r\n    noOfLines = defaultNoOfLines,\r\n    spacing = \"0.5rem\",\r\n    skeletonHeight = \"0.5rem\",\r\n    className,\r\n    startColor: startColor2,\r\n    endColor: endColor2,\r\n    isLoaded,\r\n    fadeDuration,\r\n    speed,\r\n    children,\r\n    ...rest\r\n  } = props;\r\n  const noOfLinesValue = useBreakpointValue(typeof noOfLines === \"number\" ? [noOfLines] : noOfLines) || defaultNoOfLines;\r\n  const numbers = range(noOfLinesValue);\r\n  const getWidth = (index) => {\r\n    if (noOfLinesValue > 1) {\r\n      return index === numbers.length ? \"80%\" : \"100%\";\r\n    }\r\n    return \"100%\";\r\n  };\r\n  const _className = cx(\"chakra-skeleton__group\", className);\r\n  return /* @__PURE__ */ React.createElement(chakra.div, {\r\n    className: _className,\r\n    ...rest\r\n  }, numbers.map((number, index) => {\r\n    if (isLoaded && index > 0) {\r\n      return null;\r\n    }\r\n    const sizeProps = isLoaded ? null : {\r\n      mb: number === numbers.length ? \"0\" : spacing,\r\n      width: getWidth(number),\r\n      height: skeletonHeight\r\n    };\r\n    return /* @__PURE__ */ React.createElement(Skeleton, {\r\n      key: numbers.length.toString() + number,\r\n      startColor: startColor2,\r\n      endColor: endColor2,\r\n      isLoaded,\r\n      fadeDuration,\r\n      speed,\r\n      ...sizeProps\r\n    }, index === 0 ? children : void 0);\r\n  }));\r\n};\r\nif (__DEV__) {\r\n  SkeletonText.displayName = \"SkeletonText\";\r\n}\r\nvar SkeletonCircle = ({\r\n  size = \"2rem\",\r\n  ...rest\r\n}) => /* @__PURE__ */ React.createElement(Skeleton, {\r\n  borderRadius: \"full\",\r\n  boxSize: size,\r\n  ...rest\r\n});\r\nif (__DEV__) {\r\n  SkeletonCircle.displayName = \"SkeletonCircle\";\r\n}\r\nexport {\r\n  Skeleton,\r\n  SkeletonCircle,\r\n  SkeletonText\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}