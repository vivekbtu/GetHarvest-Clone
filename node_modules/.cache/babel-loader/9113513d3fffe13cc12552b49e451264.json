{"ast":null,"code":"import { get, createParser } from '@styled-system/core';\nimport css from '@styled-system/css';\nexport var variant = function variant(_ref) {\n  var _config;\n\n  var scale = _ref.scale,\n      _ref$prop = _ref.prop,\n      prop = _ref$prop === void 0 ? 'variant' : _ref$prop,\n      _ref$variants = _ref.variants,\n      variants = _ref$variants === void 0 ? {} : _ref$variants,\n      key = _ref.key;\n  var sx;\n\n  if (Object.keys(variants).length) {\n    sx = function sx(value, scale, props) {\n      return css(get(scale, value, null))(props.theme);\n    };\n  } else {\n    sx = function sx(value, scale) {\n      return get(scale, value, null);\n    };\n  }\n\n  sx.scale = scale || key;\n  sx.defaults = variants;\n  var config = (_config = {}, _config[prop] = sx, _config);\n  var parser = createParser(config);\n  return parser;\n};\nexport default variant;\nexport var buttonStyle = variant({\n  key: 'buttons'\n});\nexport var textStyle = variant({\n  key: 'textStyles',\n  prop: 'textStyle'\n});\nexport var colorStyle = variant({\n  key: 'colorStyles',\n  prop: 'colors'\n});","map":{"version":3,"names":["get","createParser","css","variant","_ref","_config","scale","_ref$prop","prop","_ref$variants","variants","key","sx","Object","keys","length","value","props","theme","defaults","config","parser","buttonStyle","textStyle","colorStyle"],"sources":["C:/Users/bittu/Desktop/Unit4Project-React/my-project/node_modules/@styled-system/variant/dist/index.esm.js"],"sourcesContent":["import { get, createParser } from '@styled-system/core';\nimport css from '@styled-system/css';\nexport var variant = function variant(_ref) {\n  var _config;\n\n  var scale = _ref.scale,\n      _ref$prop = _ref.prop,\n      prop = _ref$prop === void 0 ? 'variant' : _ref$prop,\n      _ref$variants = _ref.variants,\n      variants = _ref$variants === void 0 ? {} : _ref$variants,\n      key = _ref.key;\n  var sx;\n\n  if (Object.keys(variants).length) {\n    sx = function sx(value, scale, props) {\n      return css(get(scale, value, null))(props.theme);\n    };\n  } else {\n    sx = function sx(value, scale) {\n      return get(scale, value, null);\n    };\n  }\n\n  sx.scale = scale || key;\n  sx.defaults = variants;\n  var config = (_config = {}, _config[prop] = sx, _config);\n  var parser = createParser(config);\n  return parser;\n};\nexport default variant;\nexport var buttonStyle = variant({\n  key: 'buttons'\n});\nexport var textStyle = variant({\n  key: 'textStyles',\n  prop: 'textStyle'\n});\nexport var colorStyle = variant({\n  key: 'colorStyles',\n  prop: 'colors'\n});\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,YAAd,QAAkC,qBAAlC;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAO,IAAIC,OAAO,GAAG,SAASA,OAAT,CAAiBC,IAAjB,EAAuB;EAC1C,IAAIC,OAAJ;;EAEA,IAAIC,KAAK,GAAGF,IAAI,CAACE,KAAjB;EAAA,IACIC,SAAS,GAAGH,IAAI,CAACI,IADrB;EAAA,IAEIA,IAAI,GAAGD,SAAS,KAAK,KAAK,CAAnB,GAAuB,SAAvB,GAAmCA,SAF9C;EAAA,IAGIE,aAAa,GAAGL,IAAI,CAACM,QAHzB;EAAA,IAIIA,QAAQ,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2B,EAA3B,GAAgCA,aAJ/C;EAAA,IAKIE,GAAG,GAAGP,IAAI,CAACO,GALf;EAMA,IAAIC,EAAJ;;EAEA,IAAIC,MAAM,CAACC,IAAP,CAAYJ,QAAZ,EAAsBK,MAA1B,EAAkC;IAChCH,EAAE,GAAG,SAASA,EAAT,CAAYI,KAAZ,EAAmBV,KAAnB,EAA0BW,KAA1B,EAAiC;MACpC,OAAOf,GAAG,CAACF,GAAG,CAACM,KAAD,EAAQU,KAAR,EAAe,IAAf,CAAJ,CAAH,CAA6BC,KAAK,CAACC,KAAnC,CAAP;IACD,CAFD;EAGD,CAJD,MAIO;IACLN,EAAE,GAAG,SAASA,EAAT,CAAYI,KAAZ,EAAmBV,KAAnB,EAA0B;MAC7B,OAAON,GAAG,CAACM,KAAD,EAAQU,KAAR,EAAe,IAAf,CAAV;IACD,CAFD;EAGD;;EAEDJ,EAAE,CAACN,KAAH,GAAWA,KAAK,IAAIK,GAApB;EACAC,EAAE,CAACO,QAAH,GAAcT,QAAd;EACA,IAAIU,MAAM,IAAIf,OAAO,GAAG,EAAV,EAAcA,OAAO,CAACG,IAAD,CAAP,GAAgBI,EAA9B,EAAkCP,OAAtC,CAAV;EACA,IAAIgB,MAAM,GAAGpB,YAAY,CAACmB,MAAD,CAAzB;EACA,OAAOC,MAAP;AACD,CA1BM;AA2BP,eAAelB,OAAf;AACA,OAAO,IAAImB,WAAW,GAAGnB,OAAO,CAAC;EAC/BQ,GAAG,EAAE;AAD0B,CAAD,CAAzB;AAGP,OAAO,IAAIY,SAAS,GAAGpB,OAAO,CAAC;EAC7BQ,GAAG,EAAE,YADwB;EAE7BH,IAAI,EAAE;AAFuB,CAAD,CAAvB;AAIP,OAAO,IAAIgB,UAAU,GAAGrB,OAAO,CAAC;EAC9BQ,GAAG,EAAE,aADyB;EAE9BH,IAAI,EAAE;AAFwB,CAAD,CAAxB"},"metadata":{},"sourceType":"module"}