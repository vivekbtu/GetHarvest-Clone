{"ast":null,"code":"function hueToRgb(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n  return p;\n}\n\nfunction hslaToRgba(_ref) {\n  var hue = _ref.hue,\n      saturation = _ref.saturation,\n      lightness = _ref.lightness,\n      alpha = _ref.alpha;\n  hue /= 360;\n  saturation /= 100;\n  lightness /= 100;\n  var red = 0;\n  var green = 0;\n  var blue = 0;\n\n  if (!saturation) {\n    red = green = blue = lightness;\n  } else {\n    var q = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation;\n    var p = 2 * lightness - q;\n    red = hueToRgb(p, q, hue + 1 / 3);\n    green = hueToRgb(p, q, hue);\n    blue = hueToRgb(p, q, hue - 1 / 3);\n  }\n\n  return {\n    red: Math.round(red * 255),\n    green: Math.round(green * 255),\n    blue: Math.round(blue * 255),\n    alpha: alpha\n  };\n}\n\nexport { hslaToRgba };","map":{"version":3,"names":["hueToRgb","p","q","t","hslaToRgba","hue","saturation","lightness","alpha","red","green","blue","Math","round"],"sources":["C:/Users/bittu/Desktop/React-Unit4-Project/premium-grade-140/node_modules/popmotion/dist/es/utils/hsla-to-rgba.mjs"],"sourcesContent":["function hueToRgb(p, q, t) {\r\n    if (t < 0)\r\n        t += 1;\r\n    if (t > 1)\r\n        t -= 1;\r\n    if (t < 1 / 6)\r\n        return p + (q - p) * 6 * t;\r\n    if (t < 1 / 2)\r\n        return q;\r\n    if (t < 2 / 3)\r\n        return p + (q - p) * (2 / 3 - t) * 6;\r\n    return p;\r\n}\r\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\r\n    hue /= 360;\r\n    saturation /= 100;\r\n    lightness /= 100;\r\n    let red = 0;\r\n    let green = 0;\r\n    let blue = 0;\r\n    if (!saturation) {\r\n        red = green = blue = lightness;\r\n    }\r\n    else {\r\n        const q = lightness < 0.5\r\n            ? lightness * (1 + saturation)\r\n            : lightness + saturation - lightness * saturation;\r\n        const p = 2 * lightness - q;\r\n        red = hueToRgb(p, q, hue + 1 / 3);\r\n        green = hueToRgb(p, q, hue);\r\n        blue = hueToRgb(p, q, hue - 1 / 3);\r\n    }\r\n    return {\r\n        red: Math.round(red * 255),\r\n        green: Math.round(green * 255),\r\n        blue: Math.round(blue * 255),\r\n        alpha,\r\n    };\r\n}\r\n\r\nexport { hslaToRgba };\r\n"],"mappings":"AAAA,SAASA,QAAT,CAAkBC,CAAlB,EAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;EACvB,IAAIA,CAAC,GAAG,CAAR,EACIA,CAAC,IAAI,CAAL;EACJ,IAAIA,CAAC,GAAG,CAAR,EACIA,CAAC,IAAI,CAAL;EACJ,IAAIA,CAAC,GAAG,IAAI,CAAZ,EACI,OAAOF,CAAC,GAAG,CAACC,CAAC,GAAGD,CAAL,IAAU,CAAV,GAAcE,CAAzB;EACJ,IAAIA,CAAC,GAAG,IAAI,CAAZ,EACI,OAAOD,CAAP;EACJ,IAAIC,CAAC,GAAG,IAAI,CAAZ,EACI,OAAOF,CAAC,GAAG,CAACC,CAAC,GAAGD,CAAL,KAAW,IAAI,CAAJ,GAAQE,CAAnB,IAAwB,CAAnC;EACJ,OAAOF,CAAP;AACH;;AACD,SAASG,UAAT,OAA2D;EAAA,IAArCC,GAAqC,QAArCA,GAAqC;EAAA,IAAhCC,UAAgC,QAAhCA,UAAgC;EAAA,IAApBC,SAAoB,QAApBA,SAAoB;EAAA,IAATC,KAAS,QAATA,KAAS;EACvDH,GAAG,IAAI,GAAP;EACAC,UAAU,IAAI,GAAd;EACAC,SAAS,IAAI,GAAb;EACA,IAAIE,GAAG,GAAG,CAAV;EACA,IAAIC,KAAK,GAAG,CAAZ;EACA,IAAIC,IAAI,GAAG,CAAX;;EACA,IAAI,CAACL,UAAL,EAAiB;IACbG,GAAG,GAAGC,KAAK,GAAGC,IAAI,GAAGJ,SAArB;EACH,CAFD,MAGK;IACD,IAAML,CAAC,GAAGK,SAAS,GAAG,GAAZ,GACJA,SAAS,IAAI,IAAID,UAAR,CADL,GAEJC,SAAS,GAAGD,UAAZ,GAAyBC,SAAS,GAAGD,UAF3C;IAGA,IAAML,CAAC,GAAG,IAAIM,SAAJ,GAAgBL,CAA1B;IACAO,GAAG,GAAGT,QAAQ,CAACC,CAAD,EAAIC,CAAJ,EAAOG,GAAG,GAAG,IAAI,CAAjB,CAAd;IACAK,KAAK,GAAGV,QAAQ,CAACC,CAAD,EAAIC,CAAJ,EAAOG,GAAP,CAAhB;IACAM,IAAI,GAAGX,QAAQ,CAACC,CAAD,EAAIC,CAAJ,EAAOG,GAAG,GAAG,IAAI,CAAjB,CAAf;EACH;;EACD,OAAO;IACHI,GAAG,EAAEG,IAAI,CAACC,KAAL,CAAWJ,GAAG,GAAG,GAAjB,CADF;IAEHC,KAAK,EAAEE,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAG,GAAnB,CAFJ;IAGHC,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWF,IAAI,GAAG,GAAlB,CAHH;IAIHH,KAAK,EAALA;EAJG,CAAP;AAMH;;AAED,SAASJ,UAAT"},"metadata":{},"sourceType":"module"}